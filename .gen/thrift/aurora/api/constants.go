// Code generated by thriftrw v1.19.1. DO NOT EDIT.
// @generated

package api



// States the job update can be in while still considered active.
var ActiveJobUpdateStates map[JobUpdateStatus]struct{} = map[JobUpdateStatus]struct{}{
	JobUpdateStatusRollingForward:           struct{}{},
	JobUpdateStatusRollingBack:              struct{}{},
	JobUpdateStatusRollForwardPaused:        struct{}{},
	JobUpdateStatusRollBackPaused:           struct{}{},
	JobUpdateStatusRollForwardAwaitingPulse: struct{}{},
	JobUpdateStatusRollBackAwaitingPulse:    struct{}{},
}

var ActiveStates map[ScheduleStatus]struct{} = map[ScheduleStatus]struct{}{
	ScheduleStatusAssigned:   struct{}{},
	ScheduleStatusDraining:   struct{}{},
	ScheduleStatusKilling:    struct{}{},
	ScheduleStatusPending:    struct{}{},
	ScheduleStatusPreempting: struct{}{},
	ScheduleStatusRestarting: struct{}{},
	ScheduleStatusRunning:    struct{}{},
	ScheduleStatusStarting:   struct{}{},
	ScheduleStatusThrottled:  struct{}{},
}

const AuroraExecutorName string = "AuroraExecutor"

// States the job update can be in while waiting for a pulse.
var AwaitngPulseJobUpdateStates map[JobUpdateStatus]struct{} = map[JobUpdateStatus]struct{}{
	JobUpdateStatusRollForwardAwaitingPulse: struct{}{},
	JobUpdateStatusRollBackAwaitingPulse:    struct{}{},
}

const BypassLeaderRedirectHeaderName string = "Bypass-Leader-Redirect"

const GoodIdentifierPattern string = "^[\\w\\-\\.]+$"

const GoodIdentifierPatternJvm string = "^[\\w\\-\\.]+$"

const GoodIdentifierPatternPython string = "^[\\w\\-\\.]+$"

var LiveStates map[ScheduleStatus]struct{} = map[ScheduleStatus]struct{}{
	ScheduleStatusKilling:    struct{}{},
	ScheduleStatusPreempting: struct{}{},
	ScheduleStatusRestarting: struct{}{},
	ScheduleStatusDraining:   struct{}{},
	ScheduleStatusRunning:    struct{}{},
}

var SlaveAssignedStates map[ScheduleStatus]struct{} = map[ScheduleStatus]struct{}{
	ScheduleStatusAssigned:   struct{}{},
	ScheduleStatusDraining:   struct{}{},
	ScheduleStatusKilling:    struct{}{},
	ScheduleStatusPreempting: struct{}{},
	ScheduleStatusRestarting: struct{}{},
	ScheduleStatusRunning:    struct{}{},
	ScheduleStatusStarting:   struct{}{},
}

const TaskFilesystemMountPoint string = "taskfs"

var TerminalStates map[ScheduleStatus]struct{} = map[ScheduleStatus]struct{}{
	ScheduleStatusFailed:   struct{}{},
	ScheduleStatusFinished: struct{}{},
	ScheduleStatusKilled:   struct{}{},
	ScheduleStatusLost:     struct{}{},
}
