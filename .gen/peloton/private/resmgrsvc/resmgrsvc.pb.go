// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peloton/private/resmgrsvc/resmgrsvc.proto

package resmgrsvc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/uber/peloton/.gen/mesos/v1"
	peloton "github.com/uber/peloton/.gen/peloton/api/v0/peloton"
	task "github.com/uber/peloton/.gen/peloton/api/v0/task"
	eventstream "github.com/uber/peloton/.gen/peloton/private/eventstream"
	resmgr "github.com/uber/peloton/.gen/peloton/private/resmgr"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ErrorCode returns the errorcode for the failure
type EnqueueGangsFailure_ErrorCode int32

const (
	// Error code UNKNOWN
	EnqueueGangsFailure_ENQUEUE_GANGS_FAILURE_ERROR_CODE_UNKNOWN EnqueueGangsFailure_ErrorCode = 0
	// Error code if task is failed to be enqueued/requeued
	EnqueueGangsFailure_ENQUEUE_GANGS_FAILURE_ERROR_CODE_INTERNAL EnqueueGangsFailure_ErrorCode = 1
	// Error code if same task is already present
	EnqueueGangsFailure_ENQUEUE_GANGS_FAILURE_ERROR_CODE_ALREADY_EXIST EnqueueGangsFailure_ErrorCode = 2
	// Error code if other tasks in gang failed
	EnqueueGangsFailure_ENQUEUE_GANGS_FAILURE_ERROR_CODE_FAILED_DUE_TO_GANG_FAILED EnqueueGangsFailure_ErrorCode = 3
)

var EnqueueGangsFailure_ErrorCode_name = map[int32]string{
	0: "ENQUEUE_GANGS_FAILURE_ERROR_CODE_UNKNOWN",
	1: "ENQUEUE_GANGS_FAILURE_ERROR_CODE_INTERNAL",
	2: "ENQUEUE_GANGS_FAILURE_ERROR_CODE_ALREADY_EXIST",
	3: "ENQUEUE_GANGS_FAILURE_ERROR_CODE_FAILED_DUE_TO_GANG_FAILED",
}

var EnqueueGangsFailure_ErrorCode_value = map[string]int32{
	"ENQUEUE_GANGS_FAILURE_ERROR_CODE_UNKNOWN":                   0,
	"ENQUEUE_GANGS_FAILURE_ERROR_CODE_INTERNAL":                  1,
	"ENQUEUE_GANGS_FAILURE_ERROR_CODE_ALREADY_EXIST":             2,
	"ENQUEUE_GANGS_FAILURE_ERROR_CODE_FAILED_DUE_TO_GANG_FAILED": 3,
}

func (x EnqueueGangsFailure_ErrorCode) String() string {
	return proto.EnumName(EnqueueGangsFailure_ErrorCode_name, int32(x))
}

func (EnqueueGangsFailure_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{5, 0}
}

type GetPreemptibleTasksFailure struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPreemptibleTasksFailure) Reset()         { *m = GetPreemptibleTasksFailure{} }
func (m *GetPreemptibleTasksFailure) String() string { return proto.CompactTextString(m) }
func (*GetPreemptibleTasksFailure) ProtoMessage()    {}
func (*GetPreemptibleTasksFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{0}
}

func (m *GetPreemptibleTasksFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPreemptibleTasksFailure.Unmarshal(m, b)
}
func (m *GetPreemptibleTasksFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPreemptibleTasksFailure.Marshal(b, m, deterministic)
}
func (m *GetPreemptibleTasksFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPreemptibleTasksFailure.Merge(m, src)
}
func (m *GetPreemptibleTasksFailure) XXX_Size() int {
	return xxx_messageInfo_GetPreemptibleTasksFailure.Size(m)
}
func (m *GetPreemptibleTasksFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPreemptibleTasksFailure.DiscardUnknown(m)
}

var xxx_messageInfo_GetPreemptibleTasksFailure proto.InternalMessageInfo

func (m *GetPreemptibleTasksFailure) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetPreemptibleTasksRequest struct {
	// Max number of running tasks to dequeue
	Limit uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Timeout in milliseconds if no tasks are ready
	Timeout              uint32   `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPreemptibleTasksRequest) Reset()         { *m = GetPreemptibleTasksRequest{} }
func (m *GetPreemptibleTasksRequest) String() string { return proto.CompactTextString(m) }
func (*GetPreemptibleTasksRequest) ProtoMessage()    {}
func (*GetPreemptibleTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{1}
}

func (m *GetPreemptibleTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPreemptibleTasksRequest.Unmarshal(m, b)
}
func (m *GetPreemptibleTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPreemptibleTasksRequest.Marshal(b, m, deterministic)
}
func (m *GetPreemptibleTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPreemptibleTasksRequest.Merge(m, src)
}
func (m *GetPreemptibleTasksRequest) XXX_Size() int {
	return xxx_messageInfo_GetPreemptibleTasksRequest.Size(m)
}
func (m *GetPreemptibleTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPreemptibleTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPreemptibleTasksRequest proto.InternalMessageInfo

func (m *GetPreemptibleTasksRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetPreemptibleTasksRequest) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type GetPreemptibleTasksResponse struct {
	Error *GetPreemptibleTasksResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// DEPRECATED by preemptionCandidates
	// The list of tasks that have been dequeued
	Tasks []*resmgr.Task `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	// The list of tasks to be preempted
	PreemptionCandidates []*resmgr.PreemptionCandidate `protobuf:"bytes,3,rep,name=preemptionCandidates,proto3" json:"preemptionCandidates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GetPreemptibleTasksResponse) Reset()         { *m = GetPreemptibleTasksResponse{} }
func (m *GetPreemptibleTasksResponse) String() string { return proto.CompactTextString(m) }
func (*GetPreemptibleTasksResponse) ProtoMessage()    {}
func (*GetPreemptibleTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{2}
}

func (m *GetPreemptibleTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPreemptibleTasksResponse.Unmarshal(m, b)
}
func (m *GetPreemptibleTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPreemptibleTasksResponse.Marshal(b, m, deterministic)
}
func (m *GetPreemptibleTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPreemptibleTasksResponse.Merge(m, src)
}
func (m *GetPreemptibleTasksResponse) XXX_Size() int {
	return xxx_messageInfo_GetPreemptibleTasksResponse.Size(m)
}
func (m *GetPreemptibleTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPreemptibleTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPreemptibleTasksResponse proto.InternalMessageInfo

func (m *GetPreemptibleTasksResponse) GetError() *GetPreemptibleTasksResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetPreemptibleTasksResponse) GetTasks() []*resmgr.Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *GetPreemptibleTasksResponse) GetPreemptionCandidates() []*resmgr.PreemptionCandidate {
	if m != nil {
		return m.PreemptionCandidates
	}
	return nil
}

type GetPreemptibleTasksResponse_Error struct {
	Timedout             *RequestTimedout            `protobuf:"bytes,1,opt,name=timedout,proto3" json:"timedout,omitempty"`
	Failure              *GetPreemptibleTasksFailure `protobuf:"bytes,2,opt,name=failure,proto3" json:"failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetPreemptibleTasksResponse_Error) Reset()         { *m = GetPreemptibleTasksResponse_Error{} }
func (m *GetPreemptibleTasksResponse_Error) String() string { return proto.CompactTextString(m) }
func (*GetPreemptibleTasksResponse_Error) ProtoMessage()    {}
func (*GetPreemptibleTasksResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{2, 0}
}

func (m *GetPreemptibleTasksResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPreemptibleTasksResponse_Error.Unmarshal(m, b)
}
func (m *GetPreemptibleTasksResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPreemptibleTasksResponse_Error.Marshal(b, m, deterministic)
}
func (m *GetPreemptibleTasksResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPreemptibleTasksResponse_Error.Merge(m, src)
}
func (m *GetPreemptibleTasksResponse_Error) XXX_Size() int {
	return xxx_messageInfo_GetPreemptibleTasksResponse_Error.Size(m)
}
func (m *GetPreemptibleTasksResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPreemptibleTasksResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_GetPreemptibleTasksResponse_Error proto.InternalMessageInfo

func (m *GetPreemptibleTasksResponse_Error) GetTimedout() *RequestTimedout {
	if m != nil {
		return m.Timedout
	}
	return nil
}

func (m *GetPreemptibleTasksResponse_Error) GetFailure() *GetPreemptibleTasksFailure {
	if m != nil {
		return m.Failure
	}
	return nil
}

type ResourcePoolNotFound struct {
	Id                   *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ResourcePoolNotFound) Reset()         { *m = ResourcePoolNotFound{} }
func (m *ResourcePoolNotFound) String() string { return proto.CompactTextString(m) }
func (*ResourcePoolNotFound) ProtoMessage()    {}
func (*ResourcePoolNotFound) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{3}
}

func (m *ResourcePoolNotFound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePoolNotFound.Unmarshal(m, b)
}
func (m *ResourcePoolNotFound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePoolNotFound.Marshal(b, m, deterministic)
}
func (m *ResourcePoolNotFound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePoolNotFound.Merge(m, src)
}
func (m *ResourcePoolNotFound) XXX_Size() int {
	return xxx_messageInfo_ResourcePoolNotFound.Size(m)
}
func (m *ResourcePoolNotFound) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePoolNotFound.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePoolNotFound proto.InternalMessageInfo

func (m *ResourcePoolNotFound) GetId() *peloton.ResourcePoolID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ResourcePoolNotFound) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ResourcePoolNoPermission struct {
	Id                   *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ResourcePoolNoPermission) Reset()         { *m = ResourcePoolNoPermission{} }
func (m *ResourcePoolNoPermission) String() string { return proto.CompactTextString(m) }
func (*ResourcePoolNoPermission) ProtoMessage()    {}
func (*ResourcePoolNoPermission) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{4}
}

func (m *ResourcePoolNoPermission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePoolNoPermission.Unmarshal(m, b)
}
func (m *ResourcePoolNoPermission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePoolNoPermission.Marshal(b, m, deterministic)
}
func (m *ResourcePoolNoPermission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePoolNoPermission.Merge(m, src)
}
func (m *ResourcePoolNoPermission) XXX_Size() int {
	return xxx_messageInfo_ResourcePoolNoPermission.Size(m)
}
func (m *ResourcePoolNoPermission) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePoolNoPermission.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePoolNoPermission proto.InternalMessageInfo

func (m *ResourcePoolNoPermission) GetId() *peloton.ResourcePoolID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ResourcePoolNoPermission) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// EnqueueGangsFailure will be return as part of failure
// in enqueue Gangs
type EnqueueGangsFailure struct {
	// List of failed tasks in gangs which are failed to
	// enqueue/requeue
	Failed               []*EnqueueGangsFailure_FailedTask `protobuf:"bytes,1,rep,name=failed,proto3" json:"failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *EnqueueGangsFailure) Reset()         { *m = EnqueueGangsFailure{} }
func (m *EnqueueGangsFailure) String() string { return proto.CompactTextString(m) }
func (*EnqueueGangsFailure) ProtoMessage()    {}
func (*EnqueueGangsFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{5}
}

func (m *EnqueueGangsFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnqueueGangsFailure.Unmarshal(m, b)
}
func (m *EnqueueGangsFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnqueueGangsFailure.Marshal(b, m, deterministic)
}
func (m *EnqueueGangsFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnqueueGangsFailure.Merge(m, src)
}
func (m *EnqueueGangsFailure) XXX_Size() int {
	return xxx_messageInfo_EnqueueGangsFailure.Size(m)
}
func (m *EnqueueGangsFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_EnqueueGangsFailure.DiscardUnknown(m)
}

var xxx_messageInfo_EnqueueGangsFailure proto.InternalMessageInfo

func (m *EnqueueGangsFailure) GetFailed() []*EnqueueGangsFailure_FailedTask {
	if m != nil {
		return m.Failed
	}
	return nil
}

type EnqueueGangsFailure_FailedTask struct {
	// Resmgr task which is failed to enqueue/requeue
	Task *resmgr.Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	// Error message with failed reason
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Error code associated with the failure
	// by that caller can identify the failure
	Errorcode            EnqueueGangsFailure_ErrorCode `protobuf:"varint,3,opt,name=errorcode,proto3,enum=peloton.private.resmgr.EnqueueGangsFailure_ErrorCode" json:"errorcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *EnqueueGangsFailure_FailedTask) Reset()         { *m = EnqueueGangsFailure_FailedTask{} }
func (m *EnqueueGangsFailure_FailedTask) String() string { return proto.CompactTextString(m) }
func (*EnqueueGangsFailure_FailedTask) ProtoMessage()    {}
func (*EnqueueGangsFailure_FailedTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{5, 0}
}

func (m *EnqueueGangsFailure_FailedTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnqueueGangsFailure_FailedTask.Unmarshal(m, b)
}
func (m *EnqueueGangsFailure_FailedTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnqueueGangsFailure_FailedTask.Marshal(b, m, deterministic)
}
func (m *EnqueueGangsFailure_FailedTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnqueueGangsFailure_FailedTask.Merge(m, src)
}
func (m *EnqueueGangsFailure_FailedTask) XXX_Size() int {
	return xxx_messageInfo_EnqueueGangsFailure_FailedTask.Size(m)
}
func (m *EnqueueGangsFailure_FailedTask) XXX_DiscardUnknown() {
	xxx_messageInfo_EnqueueGangsFailure_FailedTask.DiscardUnknown(m)
}

var xxx_messageInfo_EnqueueGangsFailure_FailedTask proto.InternalMessageInfo

func (m *EnqueueGangsFailure_FailedTask) GetTask() *resmgr.Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *EnqueueGangsFailure_FailedTask) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *EnqueueGangsFailure_FailedTask) GetErrorcode() EnqueueGangsFailure_ErrorCode {
	if m != nil {
		return m.Errorcode
	}
	return EnqueueGangsFailure_ENQUEUE_GANGS_FAILURE_ERROR_CODE_UNKNOWN
}

type Gang struct {
	// List of tasks to be scheduled together
	Tasks                []*resmgr.Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Gang) Reset()         { *m = Gang{} }
func (m *Gang) String() string { return proto.CompactTextString(m) }
func (*Gang) ProtoMessage()    {}
func (*Gang) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{6}
}

func (m *Gang) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Gang.Unmarshal(m, b)
}
func (m *Gang) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Gang.Marshal(b, m, deterministic)
}
func (m *Gang) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Gang.Merge(m, src)
}
func (m *Gang) XXX_Size() int {
	return xxx_messageInfo_Gang.Size(m)
}
func (m *Gang) XXX_DiscardUnknown() {
	xxx_messageInfo_Gang.DiscardUnknown(m)
}

var xxx_messageInfo_Gang proto.InternalMessageInfo

func (m *Gang) GetTasks() []*resmgr.Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type EnqueueGangsRequest struct {
	// ResourcePool
	ResPool *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=resPool,proto3" json:"resPool,omitempty"`
	// The list of gangs to enqueue
	Gangs []*Gang `protobuf:"bytes,2,rep,name=gangs,proto3" json:"gangs,omitempty"`
	// The reason for enqueuing the gang, needed for resmgr internal task state
	// debugging. e.g. tasks returned by placement engine should have specific
	// reason for why task cannot be placed thus returned.
	Reason               string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnqueueGangsRequest) Reset()         { *m = EnqueueGangsRequest{} }
func (m *EnqueueGangsRequest) String() string { return proto.CompactTextString(m) }
func (*EnqueueGangsRequest) ProtoMessage()    {}
func (*EnqueueGangsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{7}
}

func (m *EnqueueGangsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnqueueGangsRequest.Unmarshal(m, b)
}
func (m *EnqueueGangsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnqueueGangsRequest.Marshal(b, m, deterministic)
}
func (m *EnqueueGangsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnqueueGangsRequest.Merge(m, src)
}
func (m *EnqueueGangsRequest) XXX_Size() int {
	return xxx_messageInfo_EnqueueGangsRequest.Size(m)
}
func (m *EnqueueGangsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnqueueGangsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnqueueGangsRequest proto.InternalMessageInfo

func (m *EnqueueGangsRequest) GetResPool() *peloton.ResourcePoolID {
	if m != nil {
		return m.ResPool
	}
	return nil
}

func (m *EnqueueGangsRequest) GetGangs() []*Gang {
	if m != nil {
		return m.Gangs
	}
	return nil
}

func (m *EnqueueGangsRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type EnqueueGangsResponse struct {
	Error                *EnqueueGangsResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *EnqueueGangsResponse) Reset()         { *m = EnqueueGangsResponse{} }
func (m *EnqueueGangsResponse) String() string { return proto.CompactTextString(m) }
func (*EnqueueGangsResponse) ProtoMessage()    {}
func (*EnqueueGangsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{8}
}

func (m *EnqueueGangsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnqueueGangsResponse.Unmarshal(m, b)
}
func (m *EnqueueGangsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnqueueGangsResponse.Marshal(b, m, deterministic)
}
func (m *EnqueueGangsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnqueueGangsResponse.Merge(m, src)
}
func (m *EnqueueGangsResponse) XXX_Size() int {
	return xxx_messageInfo_EnqueueGangsResponse.Size(m)
}
func (m *EnqueueGangsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnqueueGangsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnqueueGangsResponse proto.InternalMessageInfo

func (m *EnqueueGangsResponse) GetError() *EnqueueGangsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type EnqueueGangsResponse_Error struct {
	NotFound             *ResourcePoolNotFound     `protobuf:"bytes,1,opt,name=notFound,proto3" json:"notFound,omitempty"`
	NoPermission         *ResourcePoolNoPermission `protobuf:"bytes,2,opt,name=noPermission,proto3" json:"noPermission,omitempty"`
	Failure              *EnqueueGangsFailure      `protobuf:"bytes,3,opt,name=failure,proto3" json:"failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *EnqueueGangsResponse_Error) Reset()         { *m = EnqueueGangsResponse_Error{} }
func (m *EnqueueGangsResponse_Error) String() string { return proto.CompactTextString(m) }
func (*EnqueueGangsResponse_Error) ProtoMessage()    {}
func (*EnqueueGangsResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{8, 0}
}

func (m *EnqueueGangsResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnqueueGangsResponse_Error.Unmarshal(m, b)
}
func (m *EnqueueGangsResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnqueueGangsResponse_Error.Marshal(b, m, deterministic)
}
func (m *EnqueueGangsResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnqueueGangsResponse_Error.Merge(m, src)
}
func (m *EnqueueGangsResponse_Error) XXX_Size() int {
	return xxx_messageInfo_EnqueueGangsResponse_Error.Size(m)
}
func (m *EnqueueGangsResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_EnqueueGangsResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_EnqueueGangsResponse_Error proto.InternalMessageInfo

func (m *EnqueueGangsResponse_Error) GetNotFound() *ResourcePoolNotFound {
	if m != nil {
		return m.NotFound
	}
	return nil
}

func (m *EnqueueGangsResponse_Error) GetNoPermission() *ResourcePoolNoPermission {
	if m != nil {
		return m.NoPermission
	}
	return nil
}

func (m *EnqueueGangsResponse_Error) GetFailure() *EnqueueGangsFailure {
	if m != nil {
		return m.Failure
	}
	return nil
}

type RequestTimedout struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestTimedout) Reset()         { *m = RequestTimedout{} }
func (m *RequestTimedout) String() string { return proto.CompactTextString(m) }
func (*RequestTimedout) ProtoMessage()    {}
func (*RequestTimedout) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{9}
}

func (m *RequestTimedout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestTimedout.Unmarshal(m, b)
}
func (m *RequestTimedout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestTimedout.Marshal(b, m, deterministic)
}
func (m *RequestTimedout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestTimedout.Merge(m, src)
}
func (m *RequestTimedout) XXX_Size() int {
	return xxx_messageInfo_RequestTimedout.Size(m)
}
func (m *RequestTimedout) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestTimedout.DiscardUnknown(m)
}

var xxx_messageInfo_RequestTimedout proto.InternalMessageInfo

func (m *RequestTimedout) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DequeueGangsFailure struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DequeueGangsFailure) Reset()         { *m = DequeueGangsFailure{} }
func (m *DequeueGangsFailure) String() string { return proto.CompactTextString(m) }
func (*DequeueGangsFailure) ProtoMessage()    {}
func (*DequeueGangsFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{10}
}

func (m *DequeueGangsFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueGangsFailure.Unmarshal(m, b)
}
func (m *DequeueGangsFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueGangsFailure.Marshal(b, m, deterministic)
}
func (m *DequeueGangsFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueGangsFailure.Merge(m, src)
}
func (m *DequeueGangsFailure) XXX_Size() int {
	return xxx_messageInfo_DequeueGangsFailure.Size(m)
}
func (m *DequeueGangsFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueGangsFailure.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueGangsFailure proto.InternalMessageInfo

func (m *DequeueGangsFailure) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DequeueGangsRequest struct {
	// Max number of ready gangs to dequeue
	Limit uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Timeout in milliseconds if no gangs are ready
	Timeout uint32 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Task Type to identify which kind of tasks need to be dequeued
	Type                 resmgr.TaskType `protobuf:"varint,3,opt,name=type,proto3,enum=peloton.private.resmgr.TaskType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DequeueGangsRequest) Reset()         { *m = DequeueGangsRequest{} }
func (m *DequeueGangsRequest) String() string { return proto.CompactTextString(m) }
func (*DequeueGangsRequest) ProtoMessage()    {}
func (*DequeueGangsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{11}
}

func (m *DequeueGangsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueGangsRequest.Unmarshal(m, b)
}
func (m *DequeueGangsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueGangsRequest.Marshal(b, m, deterministic)
}
func (m *DequeueGangsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueGangsRequest.Merge(m, src)
}
func (m *DequeueGangsRequest) XXX_Size() int {
	return xxx_messageInfo_DequeueGangsRequest.Size(m)
}
func (m *DequeueGangsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueGangsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueGangsRequest proto.InternalMessageInfo

func (m *DequeueGangsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DequeueGangsRequest) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *DequeueGangsRequest) GetType() resmgr.TaskType {
	if m != nil {
		return m.Type
	}
	return resmgr.TaskType_UNKNOWN
}

type DequeueGangsResponse struct {
	Error *DequeueGangsResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// The list of gangs that have been dequeued
	Gangs                []*Gang  `protobuf:"bytes,2,rep,name=gangs,proto3" json:"gangs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DequeueGangsResponse) Reset()         { *m = DequeueGangsResponse{} }
func (m *DequeueGangsResponse) String() string { return proto.CompactTextString(m) }
func (*DequeueGangsResponse) ProtoMessage()    {}
func (*DequeueGangsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{12}
}

func (m *DequeueGangsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueGangsResponse.Unmarshal(m, b)
}
func (m *DequeueGangsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueGangsResponse.Marshal(b, m, deterministic)
}
func (m *DequeueGangsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueGangsResponse.Merge(m, src)
}
func (m *DequeueGangsResponse) XXX_Size() int {
	return xxx_messageInfo_DequeueGangsResponse.Size(m)
}
func (m *DequeueGangsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueGangsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueGangsResponse proto.InternalMessageInfo

func (m *DequeueGangsResponse) GetError() *DequeueGangsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *DequeueGangsResponse) GetGangs() []*Gang {
	if m != nil {
		return m.Gangs
	}
	return nil
}

type DequeueGangsResponse_Error struct {
	Timedout             *RequestTimedout     `protobuf:"bytes,1,opt,name=timedout,proto3" json:"timedout,omitempty"`
	Failure              *DequeueGangsFailure `protobuf:"bytes,2,opt,name=failure,proto3" json:"failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DequeueGangsResponse_Error) Reset()         { *m = DequeueGangsResponse_Error{} }
func (m *DequeueGangsResponse_Error) String() string { return proto.CompactTextString(m) }
func (*DequeueGangsResponse_Error) ProtoMessage()    {}
func (*DequeueGangsResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{12, 0}
}

func (m *DequeueGangsResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueGangsResponse_Error.Unmarshal(m, b)
}
func (m *DequeueGangsResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueGangsResponse_Error.Marshal(b, m, deterministic)
}
func (m *DequeueGangsResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueGangsResponse_Error.Merge(m, src)
}
func (m *DequeueGangsResponse_Error) XXX_Size() int {
	return xxx_messageInfo_DequeueGangsResponse_Error.Size(m)
}
func (m *DequeueGangsResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueGangsResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueGangsResponse_Error proto.InternalMessageInfo

func (m *DequeueGangsResponse_Error) GetTimedout() *RequestTimedout {
	if m != nil {
		return m.Timedout
	}
	return nil
}

func (m *DequeueGangsResponse_Error) GetFailure() *DequeueGangsFailure {
	if m != nil {
		return m.Failure
	}
	return nil
}

type SetPlacementsFailure struct {
	Failed               []*SetPlacementsFailure_FailedPlacement `protobuf:"bytes,1,rep,name=failed,proto3" json:"failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *SetPlacementsFailure) Reset()         { *m = SetPlacementsFailure{} }
func (m *SetPlacementsFailure) String() string { return proto.CompactTextString(m) }
func (*SetPlacementsFailure) ProtoMessage()    {}
func (*SetPlacementsFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{13}
}

func (m *SetPlacementsFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPlacementsFailure.Unmarshal(m, b)
}
func (m *SetPlacementsFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPlacementsFailure.Marshal(b, m, deterministic)
}
func (m *SetPlacementsFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPlacementsFailure.Merge(m, src)
}
func (m *SetPlacementsFailure) XXX_Size() int {
	return xxx_messageInfo_SetPlacementsFailure.Size(m)
}
func (m *SetPlacementsFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPlacementsFailure.DiscardUnknown(m)
}

var xxx_messageInfo_SetPlacementsFailure proto.InternalMessageInfo

func (m *SetPlacementsFailure) GetFailed() []*SetPlacementsFailure_FailedPlacement {
	if m != nil {
		return m.Failed
	}
	return nil
}

type SetPlacementsFailure_FailedPlacement struct {
	Placement            *resmgr.Placement `protobuf:"bytes,1,opt,name=placement,proto3" json:"placement,omitempty"`
	Message              string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetPlacementsFailure_FailedPlacement) Reset()         { *m = SetPlacementsFailure_FailedPlacement{} }
func (m *SetPlacementsFailure_FailedPlacement) String() string { return proto.CompactTextString(m) }
func (*SetPlacementsFailure_FailedPlacement) ProtoMessage()    {}
func (*SetPlacementsFailure_FailedPlacement) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{13, 0}
}

func (m *SetPlacementsFailure_FailedPlacement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPlacementsFailure_FailedPlacement.Unmarshal(m, b)
}
func (m *SetPlacementsFailure_FailedPlacement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPlacementsFailure_FailedPlacement.Marshal(b, m, deterministic)
}
func (m *SetPlacementsFailure_FailedPlacement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPlacementsFailure_FailedPlacement.Merge(m, src)
}
func (m *SetPlacementsFailure_FailedPlacement) XXX_Size() int {
	return xxx_messageInfo_SetPlacementsFailure_FailedPlacement.Size(m)
}
func (m *SetPlacementsFailure_FailedPlacement) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPlacementsFailure_FailedPlacement.DiscardUnknown(m)
}

var xxx_messageInfo_SetPlacementsFailure_FailedPlacement proto.InternalMessageInfo

func (m *SetPlacementsFailure_FailedPlacement) GetPlacement() *resmgr.Placement {
	if m != nil {
		return m.Placement
	}
	return nil
}

func (m *SetPlacementsFailure_FailedPlacement) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SetPlacementsRequest struct {
	// List of successful task placements to set
	Placements []*resmgr.Placement `protobuf:"bytes,1,rep,name=placements,proto3" json:"placements,omitempty"`
	// List of failed task placements to return
	FailedPlacements     []*SetPlacementsRequest_FailedPlacement `protobuf:"bytes,2,rep,name=failedPlacements,proto3" json:"failedPlacements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *SetPlacementsRequest) Reset()         { *m = SetPlacementsRequest{} }
func (m *SetPlacementsRequest) String() string { return proto.CompactTextString(m) }
func (*SetPlacementsRequest) ProtoMessage()    {}
func (*SetPlacementsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{14}
}

func (m *SetPlacementsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPlacementsRequest.Unmarshal(m, b)
}
func (m *SetPlacementsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPlacementsRequest.Marshal(b, m, deterministic)
}
func (m *SetPlacementsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPlacementsRequest.Merge(m, src)
}
func (m *SetPlacementsRequest) XXX_Size() int {
	return xxx_messageInfo_SetPlacementsRequest.Size(m)
}
func (m *SetPlacementsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPlacementsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetPlacementsRequest proto.InternalMessageInfo

func (m *SetPlacementsRequest) GetPlacements() []*resmgr.Placement {
	if m != nil {
		return m.Placements
	}
	return nil
}

func (m *SetPlacementsRequest) GetFailedPlacements() []*SetPlacementsRequest_FailedPlacement {
	if m != nil {
		return m.FailedPlacements
	}
	return nil
}

// Represents a failed gang which couldn't be placed.
type SetPlacementsRequest_FailedPlacement struct {
	// The reason for the failure.
	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	// The gang which couldn't be placed.
	Gang                 *Gang    `protobuf:"bytes,2,opt,name=gang,proto3" json:"gang,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPlacementsRequest_FailedPlacement) Reset()         { *m = SetPlacementsRequest_FailedPlacement{} }
func (m *SetPlacementsRequest_FailedPlacement) String() string { return proto.CompactTextString(m) }
func (*SetPlacementsRequest_FailedPlacement) ProtoMessage()    {}
func (*SetPlacementsRequest_FailedPlacement) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{14, 0}
}

func (m *SetPlacementsRequest_FailedPlacement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPlacementsRequest_FailedPlacement.Unmarshal(m, b)
}
func (m *SetPlacementsRequest_FailedPlacement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPlacementsRequest_FailedPlacement.Marshal(b, m, deterministic)
}
func (m *SetPlacementsRequest_FailedPlacement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPlacementsRequest_FailedPlacement.Merge(m, src)
}
func (m *SetPlacementsRequest_FailedPlacement) XXX_Size() int {
	return xxx_messageInfo_SetPlacementsRequest_FailedPlacement.Size(m)
}
func (m *SetPlacementsRequest_FailedPlacement) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPlacementsRequest_FailedPlacement.DiscardUnknown(m)
}

var xxx_messageInfo_SetPlacementsRequest_FailedPlacement proto.InternalMessageInfo

func (m *SetPlacementsRequest_FailedPlacement) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *SetPlacementsRequest_FailedPlacement) GetGang() *Gang {
	if m != nil {
		return m.Gang
	}
	return nil
}

type SetPlacementsResponse struct {
	Error                *SetPlacementsResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SetPlacementsResponse) Reset()         { *m = SetPlacementsResponse{} }
func (m *SetPlacementsResponse) String() string { return proto.CompactTextString(m) }
func (*SetPlacementsResponse) ProtoMessage()    {}
func (*SetPlacementsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{15}
}

func (m *SetPlacementsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPlacementsResponse.Unmarshal(m, b)
}
func (m *SetPlacementsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPlacementsResponse.Marshal(b, m, deterministic)
}
func (m *SetPlacementsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPlacementsResponse.Merge(m, src)
}
func (m *SetPlacementsResponse) XXX_Size() int {
	return xxx_messageInfo_SetPlacementsResponse.Size(m)
}
func (m *SetPlacementsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPlacementsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetPlacementsResponse proto.InternalMessageInfo

func (m *SetPlacementsResponse) GetError() *SetPlacementsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type SetPlacementsResponse_Error struct {
	Failure              *SetPlacementsFailure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SetPlacementsResponse_Error) Reset()         { *m = SetPlacementsResponse_Error{} }
func (m *SetPlacementsResponse_Error) String() string { return proto.CompactTextString(m) }
func (*SetPlacementsResponse_Error) ProtoMessage()    {}
func (*SetPlacementsResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{15, 0}
}

func (m *SetPlacementsResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPlacementsResponse_Error.Unmarshal(m, b)
}
func (m *SetPlacementsResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPlacementsResponse_Error.Marshal(b, m, deterministic)
}
func (m *SetPlacementsResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPlacementsResponse_Error.Merge(m, src)
}
func (m *SetPlacementsResponse_Error) XXX_Size() int {
	return xxx_messageInfo_SetPlacementsResponse_Error.Size(m)
}
func (m *SetPlacementsResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPlacementsResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_SetPlacementsResponse_Error proto.InternalMessageInfo

func (m *SetPlacementsResponse_Error) GetFailure() *SetPlacementsFailure {
	if m != nil {
		return m.Failure
	}
	return nil
}

type GetPlacementsFailure struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlacementsFailure) Reset()         { *m = GetPlacementsFailure{} }
func (m *GetPlacementsFailure) String() string { return proto.CompactTextString(m) }
func (*GetPlacementsFailure) ProtoMessage()    {}
func (*GetPlacementsFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{16}
}

func (m *GetPlacementsFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlacementsFailure.Unmarshal(m, b)
}
func (m *GetPlacementsFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlacementsFailure.Marshal(b, m, deterministic)
}
func (m *GetPlacementsFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlacementsFailure.Merge(m, src)
}
func (m *GetPlacementsFailure) XXX_Size() int {
	return xxx_messageInfo_GetPlacementsFailure.Size(m)
}
func (m *GetPlacementsFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlacementsFailure.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlacementsFailure proto.InternalMessageInfo

func (m *GetPlacementsFailure) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetPlacementsRequest struct {
	// Max number of placements to retrieve
	Limit uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Timeout in milliseconds if no placements
	Timeout              uint32   `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlacementsRequest) Reset()         { *m = GetPlacementsRequest{} }
func (m *GetPlacementsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlacementsRequest) ProtoMessage()    {}
func (*GetPlacementsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{17}
}

func (m *GetPlacementsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlacementsRequest.Unmarshal(m, b)
}
func (m *GetPlacementsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlacementsRequest.Marshal(b, m, deterministic)
}
func (m *GetPlacementsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlacementsRequest.Merge(m, src)
}
func (m *GetPlacementsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPlacementsRequest.Size(m)
}
func (m *GetPlacementsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlacementsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlacementsRequest proto.InternalMessageInfo

func (m *GetPlacementsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetPlacementsRequest) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type GetPlacementsResponse struct {
	Error *GetPlacementsResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// List of task placements to return
	Placements           []*resmgr.Placement `protobuf:"bytes,2,rep,name=placements,proto3" json:"placements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetPlacementsResponse) Reset()         { *m = GetPlacementsResponse{} }
func (m *GetPlacementsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPlacementsResponse) ProtoMessage()    {}
func (*GetPlacementsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{18}
}

func (m *GetPlacementsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlacementsResponse.Unmarshal(m, b)
}
func (m *GetPlacementsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlacementsResponse.Marshal(b, m, deterministic)
}
func (m *GetPlacementsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlacementsResponse.Merge(m, src)
}
func (m *GetPlacementsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPlacementsResponse.Size(m)
}
func (m *GetPlacementsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlacementsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlacementsResponse proto.InternalMessageInfo

func (m *GetPlacementsResponse) GetError() *GetPlacementsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetPlacementsResponse) GetPlacements() []*resmgr.Placement {
	if m != nil {
		return m.Placements
	}
	return nil
}

type GetPlacementsResponse_Error struct {
	Failure              *GetPlacementsFailure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetPlacementsResponse_Error) Reset()         { *m = GetPlacementsResponse_Error{} }
func (m *GetPlacementsResponse_Error) String() string { return proto.CompactTextString(m) }
func (*GetPlacementsResponse_Error) ProtoMessage()    {}
func (*GetPlacementsResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{18, 0}
}

func (m *GetPlacementsResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlacementsResponse_Error.Unmarshal(m, b)
}
func (m *GetPlacementsResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlacementsResponse_Error.Marshal(b, m, deterministic)
}
func (m *GetPlacementsResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlacementsResponse_Error.Merge(m, src)
}
func (m *GetPlacementsResponse_Error) XXX_Size() int {
	return xxx_messageInfo_GetPlacementsResponse_Error.Size(m)
}
func (m *GetPlacementsResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlacementsResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlacementsResponse_Error proto.InternalMessageInfo

func (m *GetPlacementsResponse_Error) GetFailure() *GetPlacementsFailure {
	if m != nil {
		return m.Failure
	}
	return nil
}

type NotifyTaskUpdatesError struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyTaskUpdatesError) Reset()         { *m = NotifyTaskUpdatesError{} }
func (m *NotifyTaskUpdatesError) String() string { return proto.CompactTextString(m) }
func (*NotifyTaskUpdatesError) ProtoMessage()    {}
func (*NotifyTaskUpdatesError) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{19}
}

func (m *NotifyTaskUpdatesError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyTaskUpdatesError.Unmarshal(m, b)
}
func (m *NotifyTaskUpdatesError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyTaskUpdatesError.Marshal(b, m, deterministic)
}
func (m *NotifyTaskUpdatesError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyTaskUpdatesError.Merge(m, src)
}
func (m *NotifyTaskUpdatesError) XXX_Size() int {
	return xxx_messageInfo_NotifyTaskUpdatesError.Size(m)
}
func (m *NotifyTaskUpdatesError) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyTaskUpdatesError.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyTaskUpdatesError proto.InternalMessageInfo

func (m *NotifyTaskUpdatesError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type NotifyTaskUpdatesRequest struct {
	Events               []*eventstream.Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NotifyTaskUpdatesRequest) Reset()         { *m = NotifyTaskUpdatesRequest{} }
func (m *NotifyTaskUpdatesRequest) String() string { return proto.CompactTextString(m) }
func (*NotifyTaskUpdatesRequest) ProtoMessage()    {}
func (*NotifyTaskUpdatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{20}
}

func (m *NotifyTaskUpdatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyTaskUpdatesRequest.Unmarshal(m, b)
}
func (m *NotifyTaskUpdatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyTaskUpdatesRequest.Marshal(b, m, deterministic)
}
func (m *NotifyTaskUpdatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyTaskUpdatesRequest.Merge(m, src)
}
func (m *NotifyTaskUpdatesRequest) XXX_Size() int {
	return xxx_messageInfo_NotifyTaskUpdatesRequest.Size(m)
}
func (m *NotifyTaskUpdatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyTaskUpdatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyTaskUpdatesRequest proto.InternalMessageInfo

func (m *NotifyTaskUpdatesRequest) GetEvents() []*eventstream.Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type NotifyTaskUpdatesResponse struct {
	Error                *NotifyTaskUpdatesResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	PurgeOffset          uint64                           `protobuf:"varint,2,opt,name=purgeOffset,proto3" json:"purgeOffset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *NotifyTaskUpdatesResponse) Reset()         { *m = NotifyTaskUpdatesResponse{} }
func (m *NotifyTaskUpdatesResponse) String() string { return proto.CompactTextString(m) }
func (*NotifyTaskUpdatesResponse) ProtoMessage()    {}
func (*NotifyTaskUpdatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{21}
}

func (m *NotifyTaskUpdatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyTaskUpdatesResponse.Unmarshal(m, b)
}
func (m *NotifyTaskUpdatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyTaskUpdatesResponse.Marshal(b, m, deterministic)
}
func (m *NotifyTaskUpdatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyTaskUpdatesResponse.Merge(m, src)
}
func (m *NotifyTaskUpdatesResponse) XXX_Size() int {
	return xxx_messageInfo_NotifyTaskUpdatesResponse.Size(m)
}
func (m *NotifyTaskUpdatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyTaskUpdatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyTaskUpdatesResponse proto.InternalMessageInfo

func (m *NotifyTaskUpdatesResponse) GetError() *NotifyTaskUpdatesResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *NotifyTaskUpdatesResponse) GetPurgeOffset() uint64 {
	if m != nil {
		return m.PurgeOffset
	}
	return 0
}

type NotifyTaskUpdatesResponse_Error struct {
	Error                *NotifyTaskUpdatesError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *NotifyTaskUpdatesResponse_Error) Reset()         { *m = NotifyTaskUpdatesResponse_Error{} }
func (m *NotifyTaskUpdatesResponse_Error) String() string { return proto.CompactTextString(m) }
func (*NotifyTaskUpdatesResponse_Error) ProtoMessage()    {}
func (*NotifyTaskUpdatesResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{21, 0}
}

func (m *NotifyTaskUpdatesResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyTaskUpdatesResponse_Error.Unmarshal(m, b)
}
func (m *NotifyTaskUpdatesResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyTaskUpdatesResponse_Error.Marshal(b, m, deterministic)
}
func (m *NotifyTaskUpdatesResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyTaskUpdatesResponse_Error.Merge(m, src)
}
func (m *NotifyTaskUpdatesResponse_Error) XXX_Size() int {
	return xxx_messageInfo_NotifyTaskUpdatesResponse_Error.Size(m)
}
func (m *NotifyTaskUpdatesResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyTaskUpdatesResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyTaskUpdatesResponse_Error proto.InternalMessageInfo

func (m *NotifyTaskUpdatesResponse_Error) GetError() *NotifyTaskUpdatesError {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetTasksByHostsRequest struct {
	Hostnames []string `protobuf:"bytes,1,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	// Task Type to identify which kind of tasks need to
	// be dequeued, if this is left out all tasks will be returned.
	Type                 resmgr.TaskType `protobuf:"varint,2,opt,name=type,proto3,enum=peloton.private.resmgr.TaskType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetTasksByHostsRequest) Reset()         { *m = GetTasksByHostsRequest{} }
func (m *GetTasksByHostsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTasksByHostsRequest) ProtoMessage()    {}
func (*GetTasksByHostsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{22}
}

func (m *GetTasksByHostsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTasksByHostsRequest.Unmarshal(m, b)
}
func (m *GetTasksByHostsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTasksByHostsRequest.Marshal(b, m, deterministic)
}
func (m *GetTasksByHostsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTasksByHostsRequest.Merge(m, src)
}
func (m *GetTasksByHostsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTasksByHostsRequest.Size(m)
}
func (m *GetTasksByHostsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTasksByHostsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTasksByHostsRequest proto.InternalMessageInfo

func (m *GetTasksByHostsRequest) GetHostnames() []string {
	if m != nil {
		return m.Hostnames
	}
	return nil
}

func (m *GetTasksByHostsRequest) GetType() resmgr.TaskType {
	if m != nil {
		return m.Type
	}
	return resmgr.TaskType_UNKNOWN
}

type TaskList struct {
	Tasks                []*resmgr.Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TaskList) Reset()         { *m = TaskList{} }
func (m *TaskList) String() string { return proto.CompactTextString(m) }
func (*TaskList) ProtoMessage()    {}
func (*TaskList) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{23}
}

func (m *TaskList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskList.Unmarshal(m, b)
}
func (m *TaskList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskList.Marshal(b, m, deterministic)
}
func (m *TaskList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskList.Merge(m, src)
}
func (m *TaskList) XXX_Size() int {
	return xxx_messageInfo_TaskList.Size(m)
}
func (m *TaskList) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskList.DiscardUnknown(m)
}

var xxx_messageInfo_TaskList proto.InternalMessageInfo

func (m *TaskList) GetTasks() []*resmgr.Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type GetTasksByHostsResponse struct {
	Error *GetTasksByHostsResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// This will return a map from hostname to a list of tasks running on the host.
	HostTasksMap         map[string]*TaskList `protobuf:"bytes,2,rep,name=hostTasksMap,proto3" json:"hostTasksMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetTasksByHostsResponse) Reset()         { *m = GetTasksByHostsResponse{} }
func (m *GetTasksByHostsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTasksByHostsResponse) ProtoMessage()    {}
func (*GetTasksByHostsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{24}
}

func (m *GetTasksByHostsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTasksByHostsResponse.Unmarshal(m, b)
}
func (m *GetTasksByHostsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTasksByHostsResponse.Marshal(b, m, deterministic)
}
func (m *GetTasksByHostsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTasksByHostsResponse.Merge(m, src)
}
func (m *GetTasksByHostsResponse) XXX_Size() int {
	return xxx_messageInfo_GetTasksByHostsResponse.Size(m)
}
func (m *GetTasksByHostsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTasksByHostsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTasksByHostsResponse proto.InternalMessageInfo

func (m *GetTasksByHostsResponse) GetError() *GetTasksByHostsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetTasksByHostsResponse) GetHostTasksMap() map[string]*TaskList {
	if m != nil {
		return m.HostTasksMap
	}
	return nil
}

type GetTasksByHostsResponse_Error struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTasksByHostsResponse_Error) Reset()         { *m = GetTasksByHostsResponse_Error{} }
func (m *GetTasksByHostsResponse_Error) String() string { return proto.CompactTextString(m) }
func (*GetTasksByHostsResponse_Error) ProtoMessage()    {}
func (*GetTasksByHostsResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{24, 0}
}

func (m *GetTasksByHostsResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTasksByHostsResponse_Error.Unmarshal(m, b)
}
func (m *GetTasksByHostsResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTasksByHostsResponse_Error.Marshal(b, m, deterministic)
}
func (m *GetTasksByHostsResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTasksByHostsResponse_Error.Merge(m, src)
}
func (m *GetTasksByHostsResponse_Error) XXX_Size() int {
	return xxx_messageInfo_GetTasksByHostsResponse_Error.Size(m)
}
func (m *GetTasksByHostsResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTasksByHostsResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_GetTasksByHostsResponse_Error proto.InternalMessageInfo

func (m *GetTasksByHostsResponse_Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetActiveTasksRequest struct {
	// optional jobID to filter out tasks
	JobID string `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	// optional respoolID to filter out tasks
	RespoolID string `protobuf:"bytes,2,opt,name=respoolID,proto3" json:"respoolID,omitempty"`
	// optional states to filter out tasks
	States               []string `protobuf:"bytes,3,rep,name=states,proto3" json:"states,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetActiveTasksRequest) Reset()         { *m = GetActiveTasksRequest{} }
func (m *GetActiveTasksRequest) String() string { return proto.CompactTextString(m) }
func (*GetActiveTasksRequest) ProtoMessage()    {}
func (*GetActiveTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{25}
}

func (m *GetActiveTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActiveTasksRequest.Unmarshal(m, b)
}
func (m *GetActiveTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActiveTasksRequest.Marshal(b, m, deterministic)
}
func (m *GetActiveTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActiveTasksRequest.Merge(m, src)
}
func (m *GetActiveTasksRequest) XXX_Size() int {
	return xxx_messageInfo_GetActiveTasksRequest.Size(m)
}
func (m *GetActiveTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActiveTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetActiveTasksRequest proto.InternalMessageInfo

func (m *GetActiveTasksRequest) GetJobID() string {
	if m != nil {
		return m.JobID
	}
	return ""
}

func (m *GetActiveTasksRequest) GetRespoolID() string {
	if m != nil {
		return m.RespoolID
	}
	return ""
}

func (m *GetActiveTasksRequest) GetStates() []string {
	if m != nil {
		return m.States
	}
	return nil
}

type GetActiveTasksResponse struct {
	Error *GetActiveTasksResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// This will return a map from task id to state.
	// DEPRECATED
	TaskStatesMap map[string]string `protobuf:"bytes,2,rep,name=taskStatesMap,proto3" json:"taskStatesMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// This will return a map from state to list of tasks.
	TasksByState         map[string]*GetActiveTasksResponse_TaskEntries `protobuf:"bytes,4,rep,name=tasksByState,proto3" json:"tasksByState,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *GetActiveTasksResponse) Reset()         { *m = GetActiveTasksResponse{} }
func (m *GetActiveTasksResponse) String() string { return proto.CompactTextString(m) }
func (*GetActiveTasksResponse) ProtoMessage()    {}
func (*GetActiveTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{26}
}

func (m *GetActiveTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActiveTasksResponse.Unmarshal(m, b)
}
func (m *GetActiveTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActiveTasksResponse.Marshal(b, m, deterministic)
}
func (m *GetActiveTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActiveTasksResponse.Merge(m, src)
}
func (m *GetActiveTasksResponse) XXX_Size() int {
	return xxx_messageInfo_GetActiveTasksResponse.Size(m)
}
func (m *GetActiveTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActiveTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetActiveTasksResponse proto.InternalMessageInfo

func (m *GetActiveTasksResponse) GetError() *GetActiveTasksResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetActiveTasksResponse) GetTaskStatesMap() map[string]string {
	if m != nil {
		return m.TaskStatesMap
	}
	return nil
}

func (m *GetActiveTasksResponse) GetTasksByState() map[string]*GetActiveTasksResponse_TaskEntries {
	if m != nil {
		return m.TasksByState
	}
	return nil
}

type GetActiveTasksResponse_Error struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetActiveTasksResponse_Error) Reset()         { *m = GetActiveTasksResponse_Error{} }
func (m *GetActiveTasksResponse_Error) String() string { return proto.CompactTextString(m) }
func (*GetActiveTasksResponse_Error) ProtoMessage()    {}
func (*GetActiveTasksResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{26, 0}
}

func (m *GetActiveTasksResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActiveTasksResponse_Error.Unmarshal(m, b)
}
func (m *GetActiveTasksResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActiveTasksResponse_Error.Marshal(b, m, deterministic)
}
func (m *GetActiveTasksResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActiveTasksResponse_Error.Merge(m, src)
}
func (m *GetActiveTasksResponse_Error) XXX_Size() int {
	return xxx_messageInfo_GetActiveTasksResponse_Error.Size(m)
}
func (m *GetActiveTasksResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActiveTasksResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_GetActiveTasksResponse_Error proto.InternalMessageInfo

func (m *GetActiveTasksResponse_Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetActiveTasksResponse_TaskEntry struct {
	// Mesos task ID of the task.
	TaskID string `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	// State of the task.
	TaskState string `protobuf:"bytes,2,opt,name=taskState,proto3" json:"taskState,omitempty"`
	// Reason for the task being the current state.
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	// Last time the state was updated
	LastUpdateTime string `protobuf:"bytes,4,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime,omitempty"`
	// Depending on the state of the task, this can either mean the
	// host where the task has been placed OR where the task is running.
	// This field will not be set for tasks in PENDING and PLACING states.
	Hostname             string   `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetActiveTasksResponse_TaskEntry) Reset()         { *m = GetActiveTasksResponse_TaskEntry{} }
func (m *GetActiveTasksResponse_TaskEntry) String() string { return proto.CompactTextString(m) }
func (*GetActiveTasksResponse_TaskEntry) ProtoMessage()    {}
func (*GetActiveTasksResponse_TaskEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{26, 1}
}

func (m *GetActiveTasksResponse_TaskEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActiveTasksResponse_TaskEntry.Unmarshal(m, b)
}
func (m *GetActiveTasksResponse_TaskEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActiveTasksResponse_TaskEntry.Marshal(b, m, deterministic)
}
func (m *GetActiveTasksResponse_TaskEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActiveTasksResponse_TaskEntry.Merge(m, src)
}
func (m *GetActiveTasksResponse_TaskEntry) XXX_Size() int {
	return xxx_messageInfo_GetActiveTasksResponse_TaskEntry.Size(m)
}
func (m *GetActiveTasksResponse_TaskEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActiveTasksResponse_TaskEntry.DiscardUnknown(m)
}

var xxx_messageInfo_GetActiveTasksResponse_TaskEntry proto.InternalMessageInfo

func (m *GetActiveTasksResponse_TaskEntry) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

func (m *GetActiveTasksResponse_TaskEntry) GetTaskState() string {
	if m != nil {
		return m.TaskState
	}
	return ""
}

func (m *GetActiveTasksResponse_TaskEntry) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *GetActiveTasksResponse_TaskEntry) GetLastUpdateTime() string {
	if m != nil {
		return m.LastUpdateTime
	}
	return ""
}

func (m *GetActiveTasksResponse_TaskEntry) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type GetActiveTasksResponse_TaskEntries struct {
	TaskEntry            []*GetActiveTasksResponse_TaskEntry `protobuf:"bytes,1,rep,name=taskEntry,proto3" json:"taskEntry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *GetActiveTasksResponse_TaskEntries) Reset()         { *m = GetActiveTasksResponse_TaskEntries{} }
func (m *GetActiveTasksResponse_TaskEntries) String() string { return proto.CompactTextString(m) }
func (*GetActiveTasksResponse_TaskEntries) ProtoMessage()    {}
func (*GetActiveTasksResponse_TaskEntries) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{26, 2}
}

func (m *GetActiveTasksResponse_TaskEntries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActiveTasksResponse_TaskEntries.Unmarshal(m, b)
}
func (m *GetActiveTasksResponse_TaskEntries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActiveTasksResponse_TaskEntries.Marshal(b, m, deterministic)
}
func (m *GetActiveTasksResponse_TaskEntries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActiveTasksResponse_TaskEntries.Merge(m, src)
}
func (m *GetActiveTasksResponse_TaskEntries) XXX_Size() int {
	return xxx_messageInfo_GetActiveTasksResponse_TaskEntries.Size(m)
}
func (m *GetActiveTasksResponse_TaskEntries) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActiveTasksResponse_TaskEntries.DiscardUnknown(m)
}

var xxx_messageInfo_GetActiveTasksResponse_TaskEntries proto.InternalMessageInfo

func (m *GetActiveTasksResponse_TaskEntries) GetTaskEntry() []*GetActiveTasksResponse_TaskEntry {
	if m != nil {
		return m.TaskEntry
	}
	return nil
}

// Returns the pending tasks in a resource pool in the order in which they
// will be processed, grouped by the gang in which they belong.
type GetPendingTasksRequest struct {
	// respoolID of the pool
	RespoolID *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=respoolID,proto3" json:"respoolID,omitempty"`
	// limit is the number of gangs to be returned.
	Limit                uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPendingTasksRequest) Reset()         { *m = GetPendingTasksRequest{} }
func (m *GetPendingTasksRequest) String() string { return proto.CompactTextString(m) }
func (*GetPendingTasksRequest) ProtoMessage()    {}
func (*GetPendingTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{27}
}

func (m *GetPendingTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPendingTasksRequest.Unmarshal(m, b)
}
func (m *GetPendingTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPendingTasksRequest.Marshal(b, m, deterministic)
}
func (m *GetPendingTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPendingTasksRequest.Merge(m, src)
}
func (m *GetPendingTasksRequest) XXX_Size() int {
	return xxx_messageInfo_GetPendingTasksRequest.Size(m)
}
func (m *GetPendingTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPendingTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPendingTasksRequest proto.InternalMessageInfo

func (m *GetPendingTasksRequest) GetRespoolID() *peloton.ResourcePoolID {
	if m != nil {
		return m.RespoolID
	}
	return nil
}

func (m *GetPendingTasksRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

//*
// Response message for GetPendingTasks method
// Return errors:
//    NOT_FOUND:            if the resource pool is not found.
//    INVALID_ARGUMENT:     if the resource pool is not supplied or is not a
//                          leaf node
//    INTERNAL:             if failed to get pending tasks because of internal errors.
type GetPendingTasksResponse struct {
	// This will return a map from queue type to the pending gangs
	PendingGangsByQueue  map[string]*GetPendingTasksResponse_PendingGangs `protobuf:"bytes,2,rep,name=pendingGangsByQueue,proto3" json:"pendingGangsByQueue,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *GetPendingTasksResponse) Reset()         { *m = GetPendingTasksResponse{} }
func (m *GetPendingTasksResponse) String() string { return proto.CompactTextString(m) }
func (*GetPendingTasksResponse) ProtoMessage()    {}
func (*GetPendingTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{28}
}

func (m *GetPendingTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPendingTasksResponse.Unmarshal(m, b)
}
func (m *GetPendingTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPendingTasksResponse.Marshal(b, m, deterministic)
}
func (m *GetPendingTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPendingTasksResponse.Merge(m, src)
}
func (m *GetPendingTasksResponse) XXX_Size() int {
	return xxx_messageInfo_GetPendingTasksResponse.Size(m)
}
func (m *GetPendingTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPendingTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPendingTasksResponse proto.InternalMessageInfo

func (m *GetPendingTasksResponse) GetPendingGangsByQueue() map[string]*GetPendingTasksResponse_PendingGangs {
	if m != nil {
		return m.PendingGangsByQueue
	}
	return nil
}

// List of pending tasks IDs in a gang
type GetPendingTasksResponse_PendingGang struct {
	TaskIDs              []string `protobuf:"bytes,1,rep,name=taskIDs,proto3" json:"taskIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPendingTasksResponse_PendingGang) Reset()         { *m = GetPendingTasksResponse_PendingGang{} }
func (m *GetPendingTasksResponse_PendingGang) String() string { return proto.CompactTextString(m) }
func (*GetPendingTasksResponse_PendingGang) ProtoMessage()    {}
func (*GetPendingTasksResponse_PendingGang) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{28, 0}
}

func (m *GetPendingTasksResponse_PendingGang) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPendingTasksResponse_PendingGang.Unmarshal(m, b)
}
func (m *GetPendingTasksResponse_PendingGang) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPendingTasksResponse_PendingGang.Marshal(b, m, deterministic)
}
func (m *GetPendingTasksResponse_PendingGang) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPendingTasksResponse_PendingGang.Merge(m, src)
}
func (m *GetPendingTasksResponse_PendingGang) XXX_Size() int {
	return xxx_messageInfo_GetPendingTasksResponse_PendingGang.Size(m)
}
func (m *GetPendingTasksResponse_PendingGang) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPendingTasksResponse_PendingGang.DiscardUnknown(m)
}

var xxx_messageInfo_GetPendingTasksResponse_PendingGang proto.InternalMessageInfo

func (m *GetPendingTasksResponse_PendingGang) GetTaskIDs() []string {
	if m != nil {
		return m.TaskIDs
	}
	return nil
}

// List of pending gangs
type GetPendingTasksResponse_PendingGangs struct {
	PendingGangs         []*GetPendingTasksResponse_PendingGang `protobuf:"bytes,1,rep,name=pendingGangs,proto3" json:"pendingGangs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *GetPendingTasksResponse_PendingGangs) Reset()         { *m = GetPendingTasksResponse_PendingGangs{} }
func (m *GetPendingTasksResponse_PendingGangs) String() string { return proto.CompactTextString(m) }
func (*GetPendingTasksResponse_PendingGangs) ProtoMessage()    {}
func (*GetPendingTasksResponse_PendingGangs) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{28, 1}
}

func (m *GetPendingTasksResponse_PendingGangs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPendingTasksResponse_PendingGangs.Unmarshal(m, b)
}
func (m *GetPendingTasksResponse_PendingGangs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPendingTasksResponse_PendingGangs.Marshal(b, m, deterministic)
}
func (m *GetPendingTasksResponse_PendingGangs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPendingTasksResponse_PendingGangs.Merge(m, src)
}
func (m *GetPendingTasksResponse_PendingGangs) XXX_Size() int {
	return xxx_messageInfo_GetPendingTasksResponse_PendingGangs.Size(m)
}
func (m *GetPendingTasksResponse_PendingGangs) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPendingTasksResponse_PendingGangs.DiscardUnknown(m)
}

var xxx_messageInfo_GetPendingTasksResponse_PendingGangs proto.InternalMessageInfo

func (m *GetPendingTasksResponse_PendingGangs) GetPendingGangs() []*GetPendingTasksResponse_PendingGang {
	if m != nil {
		return m.PendingGangs
	}
	return nil
}

type KillTasksRequest struct {
	// Peloton Task Ids for
	Tasks                []*peloton.TaskID `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *KillTasksRequest) Reset()         { *m = KillTasksRequest{} }
func (m *KillTasksRequest) String() string { return proto.CompactTextString(m) }
func (*KillTasksRequest) ProtoMessage()    {}
func (*KillTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{29}
}

func (m *KillTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillTasksRequest.Unmarshal(m, b)
}
func (m *KillTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillTasksRequest.Marshal(b, m, deterministic)
}
func (m *KillTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillTasksRequest.Merge(m, src)
}
func (m *KillTasksRequest) XXX_Size() int {
	return xxx_messageInfo_KillTasksRequest.Size(m)
}
func (m *KillTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KillTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KillTasksRequest proto.InternalMessageInfo

func (m *KillTasksRequest) GetTasks() []*peloton.TaskID {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type TasksNotFound struct {
	Task                 *peloton.TaskID `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Message              string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TasksNotFound) Reset()         { *m = TasksNotFound{} }
func (m *TasksNotFound) String() string { return proto.CompactTextString(m) }
func (*TasksNotFound) ProtoMessage()    {}
func (*TasksNotFound) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{30}
}

func (m *TasksNotFound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TasksNotFound.Unmarshal(m, b)
}
func (m *TasksNotFound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TasksNotFound.Marshal(b, m, deterministic)
}
func (m *TasksNotFound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TasksNotFound.Merge(m, src)
}
func (m *TasksNotFound) XXX_Size() int {
	return xxx_messageInfo_TasksNotFound.Size(m)
}
func (m *TasksNotFound) XXX_DiscardUnknown() {
	xxx_messageInfo_TasksNotFound.DiscardUnknown(m)
}

var xxx_messageInfo_TasksNotFound proto.InternalMessageInfo

func (m *TasksNotFound) GetTask() *peloton.TaskID {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *TasksNotFound) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type KillTasksError struct {
	Task                 *peloton.TaskID `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Message              string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *KillTasksError) Reset()         { *m = KillTasksError{} }
func (m *KillTasksError) String() string { return proto.CompactTextString(m) }
func (*KillTasksError) ProtoMessage()    {}
func (*KillTasksError) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{31}
}

func (m *KillTasksError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillTasksError.Unmarshal(m, b)
}
func (m *KillTasksError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillTasksError.Marshal(b, m, deterministic)
}
func (m *KillTasksError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillTasksError.Merge(m, src)
}
func (m *KillTasksError) XXX_Size() int {
	return xxx_messageInfo_KillTasksError.Size(m)
}
func (m *KillTasksError) XXX_DiscardUnknown() {
	xxx_messageInfo_KillTasksError.DiscardUnknown(m)
}

var xxx_messageInfo_KillTasksError proto.InternalMessageInfo

func (m *KillTasksError) GetTask() *peloton.TaskID {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *KillTasksError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type KillTasksResponse struct {
	Error                []*KillTasksResponse_Error `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *KillTasksResponse) Reset()         { *m = KillTasksResponse{} }
func (m *KillTasksResponse) String() string { return proto.CompactTextString(m) }
func (*KillTasksResponse) ProtoMessage()    {}
func (*KillTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{32}
}

func (m *KillTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillTasksResponse.Unmarshal(m, b)
}
func (m *KillTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillTasksResponse.Marshal(b, m, deterministic)
}
func (m *KillTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillTasksResponse.Merge(m, src)
}
func (m *KillTasksResponse) XXX_Size() int {
	return xxx_messageInfo_KillTasksResponse.Size(m)
}
func (m *KillTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KillTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KillTasksResponse proto.InternalMessageInfo

func (m *KillTasksResponse) GetError() []*KillTasksResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type KillTasksResponse_Error struct {
	NotFound             *TasksNotFound  `protobuf:"bytes,1,opt,name=notFound,proto3" json:"notFound,omitempty"`
	KillError            *KillTasksError `protobuf:"bytes,2,opt,name=killError,proto3" json:"killError,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *KillTasksResponse_Error) Reset()         { *m = KillTasksResponse_Error{} }
func (m *KillTasksResponse_Error) String() string { return proto.CompactTextString(m) }
func (*KillTasksResponse_Error) ProtoMessage()    {}
func (*KillTasksResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{32, 0}
}

func (m *KillTasksResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillTasksResponse_Error.Unmarshal(m, b)
}
func (m *KillTasksResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillTasksResponse_Error.Marshal(b, m, deterministic)
}
func (m *KillTasksResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillTasksResponse_Error.Merge(m, src)
}
func (m *KillTasksResponse_Error) XXX_Size() int {
	return xxx_messageInfo_KillTasksResponse_Error.Size(m)
}
func (m *KillTasksResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_KillTasksResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_KillTasksResponse_Error proto.InternalMessageInfo

func (m *KillTasksResponse_Error) GetNotFound() *TasksNotFound {
	if m != nil {
		return m.NotFound
	}
	return nil
}

func (m *KillTasksResponse_Error) GetKillError() *KillTasksError {
	if m != nil {
		return m.KillError
	}
	return nil
}

// UpdateTasksStateRequest is the request message for updating
// task's state to a desired state in resource manager
type UpdateTasksStateRequest struct {
	// List of UpdateTaskEntry
	TaskStates           []*UpdateTasksStateRequest_UpdateTaskStateEntry `protobuf:"bytes,1,rep,name=taskStates,proto3" json:"taskStates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *UpdateTasksStateRequest) Reset()         { *m = UpdateTasksStateRequest{} }
func (m *UpdateTasksStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTasksStateRequest) ProtoMessage()    {}
func (*UpdateTasksStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{33}
}

func (m *UpdateTasksStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTasksStateRequest.Unmarshal(m, b)
}
func (m *UpdateTasksStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTasksStateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTasksStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTasksStateRequest.Merge(m, src)
}
func (m *UpdateTasksStateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTasksStateRequest.Size(m)
}
func (m *UpdateTasksStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTasksStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTasksStateRequest proto.InternalMessageInfo

func (m *UpdateTasksStateRequest) GetTaskStates() []*UpdateTasksStateRequest_UpdateTaskStateEntry {
	if m != nil {
		return m.TaskStates
	}
	return nil
}

// UpdateTaskStateEntry is the entry for UpdateTaskState
// Request will have list of UpdateTaskStateEntry
type UpdateTasksStateRequest_UpdateTaskStateEntry struct {
	// Peloton Task ID
	Task *peloton.TaskID `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	// Mesos task ID for this instance
	MesosTaskId *v1.TaskID `protobuf:"bytes,2,opt,name=mesosTaskId,proto3" json:"mesosTaskId,omitempty"`
	// Desired state for the resource manager task
	State                task.TaskState `protobuf:"varint,3,opt,name=state,proto3,enum=peloton.api.v0.task.TaskState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateTasksStateRequest_UpdateTaskStateEntry) Reset() {
	*m = UpdateTasksStateRequest_UpdateTaskStateEntry{}
}
func (m *UpdateTasksStateRequest_UpdateTaskStateEntry) String() string {
	return proto.CompactTextString(m)
}
func (*UpdateTasksStateRequest_UpdateTaskStateEntry) ProtoMessage() {}
func (*UpdateTasksStateRequest_UpdateTaskStateEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{33, 0}
}

func (m *UpdateTasksStateRequest_UpdateTaskStateEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTasksStateRequest_UpdateTaskStateEntry.Unmarshal(m, b)
}
func (m *UpdateTasksStateRequest_UpdateTaskStateEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTasksStateRequest_UpdateTaskStateEntry.Marshal(b, m, deterministic)
}
func (m *UpdateTasksStateRequest_UpdateTaskStateEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTasksStateRequest_UpdateTaskStateEntry.Merge(m, src)
}
func (m *UpdateTasksStateRequest_UpdateTaskStateEntry) XXX_Size() int {
	return xxx_messageInfo_UpdateTasksStateRequest_UpdateTaskStateEntry.Size(m)
}
func (m *UpdateTasksStateRequest_UpdateTaskStateEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTasksStateRequest_UpdateTaskStateEntry.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTasksStateRequest_UpdateTaskStateEntry proto.InternalMessageInfo

func (m *UpdateTasksStateRequest_UpdateTaskStateEntry) GetTask() *peloton.TaskID {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *UpdateTasksStateRequest_UpdateTaskStateEntry) GetMesosTaskId() *v1.TaskID {
	if m != nil {
		return m.MesosTaskId
	}
	return nil
}

func (m *UpdateTasksStateRequest_UpdateTaskStateEntry) GetState() task.TaskState {
	if m != nil {
		return m.State
	}
	return task.TaskState_UNKNOWN
}

// UpdateTasksStateResponse is the response message for UpdateTasksState
type UpdateTasksStateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTasksStateResponse) Reset()         { *m = UpdateTasksStateResponse{} }
func (m *UpdateTasksStateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTasksStateResponse) ProtoMessage()    {}
func (*UpdateTasksStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_127817d9a088abbd, []int{34}
}

func (m *UpdateTasksStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTasksStateResponse.Unmarshal(m, b)
}
func (m *UpdateTasksStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTasksStateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTasksStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTasksStateResponse.Merge(m, src)
}
func (m *UpdateTasksStateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTasksStateResponse.Size(m)
}
func (m *UpdateTasksStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTasksStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTasksStateResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("peloton.private.resmgr.EnqueueGangsFailure_ErrorCode", EnqueueGangsFailure_ErrorCode_name, EnqueueGangsFailure_ErrorCode_value)
	proto.RegisterType((*GetPreemptibleTasksFailure)(nil), "peloton.private.resmgr.GetPreemptibleTasksFailure")
	proto.RegisterType((*GetPreemptibleTasksRequest)(nil), "peloton.private.resmgr.GetPreemptibleTasksRequest")
	proto.RegisterType((*GetPreemptibleTasksResponse)(nil), "peloton.private.resmgr.GetPreemptibleTasksResponse")
	proto.RegisterType((*GetPreemptibleTasksResponse_Error)(nil), "peloton.private.resmgr.GetPreemptibleTasksResponse.Error")
	proto.RegisterType((*ResourcePoolNotFound)(nil), "peloton.private.resmgr.ResourcePoolNotFound")
	proto.RegisterType((*ResourcePoolNoPermission)(nil), "peloton.private.resmgr.ResourcePoolNoPermission")
	proto.RegisterType((*EnqueueGangsFailure)(nil), "peloton.private.resmgr.EnqueueGangsFailure")
	proto.RegisterType((*EnqueueGangsFailure_FailedTask)(nil), "peloton.private.resmgr.EnqueueGangsFailure.FailedTask")
	proto.RegisterType((*Gang)(nil), "peloton.private.resmgr.Gang")
	proto.RegisterType((*EnqueueGangsRequest)(nil), "peloton.private.resmgr.EnqueueGangsRequest")
	proto.RegisterType((*EnqueueGangsResponse)(nil), "peloton.private.resmgr.EnqueueGangsResponse")
	proto.RegisterType((*EnqueueGangsResponse_Error)(nil), "peloton.private.resmgr.EnqueueGangsResponse.Error")
	proto.RegisterType((*RequestTimedout)(nil), "peloton.private.resmgr.RequestTimedout")
	proto.RegisterType((*DequeueGangsFailure)(nil), "peloton.private.resmgr.DequeueGangsFailure")
	proto.RegisterType((*DequeueGangsRequest)(nil), "peloton.private.resmgr.DequeueGangsRequest")
	proto.RegisterType((*DequeueGangsResponse)(nil), "peloton.private.resmgr.DequeueGangsResponse")
	proto.RegisterType((*DequeueGangsResponse_Error)(nil), "peloton.private.resmgr.DequeueGangsResponse.Error")
	proto.RegisterType((*SetPlacementsFailure)(nil), "peloton.private.resmgr.SetPlacementsFailure")
	proto.RegisterType((*SetPlacementsFailure_FailedPlacement)(nil), "peloton.private.resmgr.SetPlacementsFailure.FailedPlacement")
	proto.RegisterType((*SetPlacementsRequest)(nil), "peloton.private.resmgr.SetPlacementsRequest")
	proto.RegisterType((*SetPlacementsRequest_FailedPlacement)(nil), "peloton.private.resmgr.SetPlacementsRequest.FailedPlacement")
	proto.RegisterType((*SetPlacementsResponse)(nil), "peloton.private.resmgr.SetPlacementsResponse")
	proto.RegisterType((*SetPlacementsResponse_Error)(nil), "peloton.private.resmgr.SetPlacementsResponse.Error")
	proto.RegisterType((*GetPlacementsFailure)(nil), "peloton.private.resmgr.GetPlacementsFailure")
	proto.RegisterType((*GetPlacementsRequest)(nil), "peloton.private.resmgr.GetPlacementsRequest")
	proto.RegisterType((*GetPlacementsResponse)(nil), "peloton.private.resmgr.GetPlacementsResponse")
	proto.RegisterType((*GetPlacementsResponse_Error)(nil), "peloton.private.resmgr.GetPlacementsResponse.Error")
	proto.RegisterType((*NotifyTaskUpdatesError)(nil), "peloton.private.resmgr.NotifyTaskUpdatesError")
	proto.RegisterType((*NotifyTaskUpdatesRequest)(nil), "peloton.private.resmgr.NotifyTaskUpdatesRequest")
	proto.RegisterType((*NotifyTaskUpdatesResponse)(nil), "peloton.private.resmgr.NotifyTaskUpdatesResponse")
	proto.RegisterType((*NotifyTaskUpdatesResponse_Error)(nil), "peloton.private.resmgr.NotifyTaskUpdatesResponse.Error")
	proto.RegisterType((*GetTasksByHostsRequest)(nil), "peloton.private.resmgr.GetTasksByHostsRequest")
	proto.RegisterType((*TaskList)(nil), "peloton.private.resmgr.TaskList")
	proto.RegisterType((*GetTasksByHostsResponse)(nil), "peloton.private.resmgr.GetTasksByHostsResponse")
	proto.RegisterMapType((map[string]*TaskList)(nil), "peloton.private.resmgr.GetTasksByHostsResponse.HostTasksMapEntry")
	proto.RegisterType((*GetTasksByHostsResponse_Error)(nil), "peloton.private.resmgr.GetTasksByHostsResponse.Error")
	proto.RegisterType((*GetActiveTasksRequest)(nil), "peloton.private.resmgr.GetActiveTasksRequest")
	proto.RegisterType((*GetActiveTasksResponse)(nil), "peloton.private.resmgr.GetActiveTasksResponse")
	proto.RegisterMapType((map[string]string)(nil), "peloton.private.resmgr.GetActiveTasksResponse.TaskStatesMapEntry")
	proto.RegisterMapType((map[string]*GetActiveTasksResponse_TaskEntries)(nil), "peloton.private.resmgr.GetActiveTasksResponse.TasksByStateEntry")
	proto.RegisterType((*GetActiveTasksResponse_Error)(nil), "peloton.private.resmgr.GetActiveTasksResponse.Error")
	proto.RegisterType((*GetActiveTasksResponse_TaskEntry)(nil), "peloton.private.resmgr.GetActiveTasksResponse.TaskEntry")
	proto.RegisterType((*GetActiveTasksResponse_TaskEntries)(nil), "peloton.private.resmgr.GetActiveTasksResponse.TaskEntries")
	proto.RegisterType((*GetPendingTasksRequest)(nil), "peloton.private.resmgr.GetPendingTasksRequest")
	proto.RegisterType((*GetPendingTasksResponse)(nil), "peloton.private.resmgr.GetPendingTasksResponse")
	proto.RegisterMapType((map[string]*GetPendingTasksResponse_PendingGangs)(nil), "peloton.private.resmgr.GetPendingTasksResponse.PendingGangsByQueueEntry")
	proto.RegisterType((*GetPendingTasksResponse_PendingGang)(nil), "peloton.private.resmgr.GetPendingTasksResponse.PendingGang")
	proto.RegisterType((*GetPendingTasksResponse_PendingGangs)(nil), "peloton.private.resmgr.GetPendingTasksResponse.PendingGangs")
	proto.RegisterType((*KillTasksRequest)(nil), "peloton.private.resmgr.KillTasksRequest")
	proto.RegisterType((*TasksNotFound)(nil), "peloton.private.resmgr.TasksNotFound")
	proto.RegisterType((*KillTasksError)(nil), "peloton.private.resmgr.KillTasksError")
	proto.RegisterType((*KillTasksResponse)(nil), "peloton.private.resmgr.KillTasksResponse")
	proto.RegisterType((*KillTasksResponse_Error)(nil), "peloton.private.resmgr.KillTasksResponse.Error")
	proto.RegisterType((*UpdateTasksStateRequest)(nil), "peloton.private.resmgr.UpdateTasksStateRequest")
	proto.RegisterType((*UpdateTasksStateRequest_UpdateTaskStateEntry)(nil), "peloton.private.resmgr.UpdateTasksStateRequest.UpdateTaskStateEntry")
	proto.RegisterType((*UpdateTasksStateResponse)(nil), "peloton.private.resmgr.UpdateTasksStateResponse")
}

func init() {
	proto.RegisterFile("peloton/private/resmgrsvc/resmgrsvc.proto", fileDescriptor_127817d9a088abbd)
}

var fileDescriptor_127817d9a088abbd = []byte{
	// 1963 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x59, 0x5f, 0x6f, 0xe3, 0xc6,
	0x11, 0x2f, 0x25, 0xdb, 0x77, 0x1a, 0xfb, 0x7c, 0xf2, 0x5a, 0x71, 0x14, 0xe6, 0x10, 0x38, 0x2c,
	0x7a, 0xf1, 0xc1, 0xb6, 0xe4, 0xd3, 0x5d, 0xdc, 0xd4, 0x0d, 0xd2, 0xd3, 0x59, 0xb4, 0xec, 0x9e,
	0x2d, 0x2b, 0xb4, 0x9c, 0xfe, 0x43, 0xab, 0xf2, 0xac, 0xb5, 0x8e, 0x35, 0x45, 0x2a, 0x24, 0x25,
	0xd4, 0x0d, 0xd0, 0xa7, 0x7e, 0x80, 0x02, 0x7d, 0x2b, 0x5a, 0x20, 0x40, 0xdf, 0x0a, 0xf4, 0xa9,
	0x45, 0xbe, 0x47, 0xd1, 0xb7, 0xb6, 0x5f, 0xa1, 0x7d, 0x2a, 0xf2, 0x5c, 0xec, 0x1f, 0xfe, 0x13,
	0x49, 0x89, 0xd4, 0x25, 0x2f, 0xb6, 0xb8, 0x9c, 0xf9, 0xcd, 0xec, 0xcc, 0x6f, 0x67, 0x76, 0x97,
	0xf0, 0x68, 0x88, 0x75, 0xd3, 0x31, 0x8d, 0xea, 0xd0, 0xd2, 0xc6, 0xaa, 0x83, 0xab, 0x16, 0xb6,
	0x07, 0x7d, 0xcb, 0x1e, 0x5f, 0xf9, 0xbf, 0x2a, 0x43, 0xcb, 0x74, 0x4c, 0xb4, 0xc1, 0x45, 0x2b,
	0x5c, 0xb4, 0xc2, 0x04, 0xc4, 0xd2, 0x00, 0xdb, 0xa6, 0x5d, 0x1d, 0x3f, 0xae, 0xd2, 0x1f, 0x4c,
	0x5a, 0x7c, 0xe0, 0x02, 0xab, 0x43, 0xad, 0x3a, 0xde, 0xab, 0xfa, 0xca, 0xe4, 0xed, 0x3b, 0x13,
	0x6f, 0x1d, 0xd5, 0xbe, 0xa1, 0x7f, 0xf8, 0xfb, 0x6f, 0xc6, 0xbb, 0xc5, 0xff, 0x71, 0xa1, 0xdd,
	0x49, 0x21, 0x3c, 0xc6, 0x86, 0x63, 0x3b, 0x16, 0x56, 0x07, 0xc1, 0xdf, 0x4c, 0x5c, 0xda, 0x07,
	0xb1, 0x89, 0x9d, 0xb6, 0x85, 0xf1, 0x60, 0xe8, 0x68, 0x2f, 0x75, 0xdc, 0x51, 0xed, 0x1b, 0xfb,
	0x48, 0xd5, 0xf4, 0x91, 0x85, 0x51, 0x19, 0xee, 0x0c, 0xb0, 0x6d, 0xab, 0x7d, 0x5c, 0x16, 0x36,
	0x85, 0xad, 0x82, 0xe2, 0x3e, 0x4a, 0xa7, 0xb1, 0x7a, 0x0a, 0xfe, 0x74, 0x84, 0x6d, 0x07, 0x95,
	0x60, 0x51, 0xd7, 0x06, 0x9a, 0x43, 0xb5, 0xee, 0x29, 0xec, 0x81, 0xa0, 0x39, 0xda, 0x00, 0x9b,
	0x23, 0xa7, 0x9c, 0xa3, 0xe3, 0xee, 0xa3, 0xf4, 0x79, 0x1e, 0xde, 0x8e, 0x85, 0xb3, 0x87, 0xa6,
	0x61, 0x63, 0x74, 0x0e, 0x8b, 0xd8, 0xb2, 0x4c, 0x8b, 0xe2, 0x2d, 0xd7, 0xbe, 0x53, 0x89, 0x8f,
	0x7a, 0x65, 0x0a, 0x46, 0x45, 0x26, 0x00, 0x0a, 0xc3, 0x41, 0x35, 0x58, 0x24, 0x81, 0xb5, 0xcb,
	0xb9, 0xcd, 0xfc, 0xd6, 0x72, 0xed, 0x41, 0x12, 0x20, 0x81, 0x50, 0x98, 0x28, 0xea, 0x42, 0x69,
	0xc8, 0xc1, 0x4d, 0xe3, 0x50, 0x35, 0x7a, 0x5a, 0x4f, 0x75, 0xb0, 0x5d, 0xce, 0x53, 0x88, 0xed,
	0x24, 0x88, 0x76, 0x54, 0x47, 0x89, 0x05, 0x12, 0x7f, 0x2f, 0xc0, 0x22, 0xf5, 0x12, 0x1d, 0xc2,
	0x5d, 0x12, 0x9a, 0x1e, 0x09, 0x15, 0x9b, 0xf2, 0x7b, 0x49, 0xf0, 0x3c, 0xe4, 0x1d, 0x2e, 0xae,
	0x78, 0x8a, 0xe8, 0x14, 0xee, 0x5c, 0xb3, 0x3c, 0xd2, 0x70, 0x2f, 0xd7, 0x6a, 0x19, 0xc2, 0xc6,
	0x19, 0xa0, 0xb8, 0x10, 0xd2, 0x2b, 0x28, 0x29, 0xd8, 0x36, 0x47, 0xd6, 0x15, 0x6e, 0x9b, 0xa6,
	0xde, 0x32, 0x9d, 0x23, 0x73, 0x64, 0xf4, 0xd0, 0x3e, 0xe4, 0xb4, 0x1e, 0x77, 0xf2, 0xa1, 0x67,
	0x40, 0x1d, 0x6a, 0x95, 0xf1, 0x9e, 0xf7, 0x18, 0xd4, 0x3c, 0x69, 0x28, 0x39, 0xad, 0x17, 0xa4,
	0x56, 0x2e, 0x4c, 0x2d, 0x1d, 0xca, 0x61, 0x4b, 0x6d, 0x6c, 0x0d, 0x34, 0xdb, 0xd6, 0x4c, 0xe3,
	0x6b, 0xb0, 0xf6, 0xbf, 0x3c, 0xac, 0xcb, 0xc6, 0xa7, 0x23, 0x3c, 0xc2, 0x4d, 0xd5, 0xe8, 0x7b,
	0xd4, 0x6f, 0xc1, 0x12, 0x99, 0x3a, 0x26, 0xd6, 0x48, 0x7e, 0xf7, 0x93, 0x82, 0x17, 0xa3, 0x5c,
	0x39, 0xa2, 0x9a, 0x94, 0x3c, 0x1c, 0x45, 0xfc, 0x8b, 0x00, 0xe0, 0x0f, 0xa3, 0x3d, 0x58, 0x20,
	0xac, 0xe2, 0x53, 0x99, 0xce, 0x3f, 0x2a, 0x99, 0x3c, 0x05, 0x74, 0x01, 0x05, 0xca, 0xea, 0x2b,
	0xb3, 0x87, 0xcb, 0xf9, 0x4d, 0x61, 0x6b, 0xb5, 0xf6, 0x7e, 0x16, 0x6f, 0x29, 0xe7, 0x0e, 0xcd,
	0x1e, 0x56, 0x7c, 0x1c, 0xe9, 0xdf, 0x02, 0x14, 0xbc, 0x17, 0x68, 0x07, 0xb6, 0xe4, 0xd6, 0xc7,
	0x97, 0xf2, 0xa5, 0xdc, 0x6d, 0xd6, 0x5b, 0xcd, 0x8b, 0xee, 0x51, 0xfd, 0xe4, 0xf4, 0x52, 0x91,
	0xbb, 0xb2, 0xa2, 0x9c, 0x2b, 0xdd, 0xc3, 0xf3, 0x86, 0xdc, 0xbd, 0x6c, 0xbd, 0x68, 0x9d, 0xff,
	0xa0, 0x55, 0xfc, 0x06, 0xda, 0x85, 0x47, 0x33, 0xa5, 0x4f, 0x5a, 0x1d, 0x59, 0x69, 0xd5, 0x4f,
	0x8b, 0x02, 0xaa, 0x41, 0x65, 0xa6, 0x78, 0xfd, 0x54, 0x91, 0xeb, 0x8d, 0x1f, 0x75, 0xe5, 0x1f,
	0x9e, 0x5c, 0x74, 0x8a, 0x39, 0xf4, 0x11, 0x1c, 0xcc, 0xd4, 0x21, 0x43, 0x72, 0xa3, 0xdb, 0xb8,
	0x94, 0xbb, 0x9d, 0x73, 0x2a, 0xc6, 0x87, 0x8a, 0x79, 0xe9, 0x00, 0x16, 0x48, 0x0c, 0xfc, 0x42,
	0x20, 0xa4, 0x2e, 0x04, 0xd2, 0x9f, 0x84, 0x30, 0x65, 0xdc, 0xaa, 0xf7, 0x0c, 0xee, 0x58, 0xd8,
	0x26, 0xac, 0xcb, 0xc8, 0x50, 0x57, 0x8d, 0x78, 0xd3, 0x27, 0x88, 0xb3, 0xca, 0x12, 0x31, 0xab,
	0x30, 0x51, 0xb4, 0x01, 0x4b, 0x16, 0x56, 0x6d, 0xd3, 0xa0, 0xa9, 0x2f, 0x28, 0xfc, 0x49, 0xfa,
	0x7b, 0x0e, 0x4a, 0x61, 0x2f, 0x79, 0x31, 0x3d, 0x0e, 0x17, 0xd3, 0x5a, 0x1a, 0xaa, 0xc4, 0x56,
	0x51, 0xf1, 0xbf, 0x5e, 0xc1, 0x3a, 0x86, 0xbb, 0x06, 0xaf, 0x08, 0x1c, 0x76, 0x27, 0xb9, 0x60,
	0x45, 0xab, 0x88, 0xe2, 0x69, 0xa3, 0x0e, 0xac, 0x18, 0x81, 0x15, 0xcf, 0x4b, 0xd7, 0x5e, 0x3a,
	0x34, 0x5f, 0x4f, 0x09, 0xa1, 0x20, 0xd9, 0xaf, 0x85, 0x79, 0x0a, 0xb8, 0x9d, 0x61, 0x81, 0xf8,
	0x45, 0x70, 0x1b, 0xee, 0x4f, 0xd4, 0xdb, 0x29, 0x2d, 0xb2, 0x0a, 0xeb, 0x0d, 0x1c, 0x2d, 0x2c,
	0xc9, 0x0a, 0x9f, 0x85, 0x15, 0xe6, 0x6c, 0xa6, 0xe8, 0x29, 0x2c, 0x38, 0xb7, 0x43, 0xb7, 0x12,
	0x6c, 0x4e, 0x63, 0x74, 0xe7, 0x76, 0x88, 0x15, 0x2a, 0x2d, 0xfd, 0x39, 0x07, 0xa5, 0xb0, 0xf5,
	0x8c, 0x74, 0x89, 0x53, 0x8e, 0x34, 0xdd, 0xac, 0xec, 0x16, 0x7f, 0xf7, 0xd5, 0xf6, 0x44, 0x79,
	0xb2, 0x27, 0x6e, 0xa7, 0x99, 0x4e, 0x84, 0x07, 0xff, 0x14, 0xa0, 0x74, 0x81, 0x9d, 0xb6, 0xae,
	0x5e, 0xe1, 0x01, 0xd9, 0x52, 0xb9, 0xc9, 0xed, 0x4c, 0x74, 0x8d, 0x0f, 0x93, 0xe0, 0xe3, 0xb4,
	0x79, 0xdb, 0xf0, 0xc6, 0xbd, 0xde, 0xa1, 0xc3, 0xfd, 0x89, 0x57, 0xe8, 0x7b, 0x50, 0x18, 0xba,
	0x0f, 0x3c, 0x1c, 0xef, 0x26, 0xee, 0x40, 0x3c, 0x40, 0x5f, 0x67, 0x4a, 0x47, 0xfc, 0x3c, 0x37,
	0x31, 0x39, 0x97, 0x88, 0x75, 0x00, 0x4f, 0xdf, 0x2d, 0x98, 0x29, 0x8c, 0x06, 0x94, 0xd0, 0x2b,
	0x28, 0x5e, 0x87, 0x67, 0xe2, 0xb2, 0x21, 0x5d, 0xa4, 0xb8, 0x2b, 0x91, 0x48, 0x45, 0x50, 0xc5,
	0x9f, 0x44, 0x63, 0xe6, 0x57, 0x4a, 0x21, 0x58, 0x29, 0x49, 0x2f, 0x26, 0x64, 0xe3, 0x8c, 0x98,
	0x4e, 0x4b, 0x2a, 0x29, 0xfd, 0x55, 0x80, 0x37, 0x26, 0xfc, 0xe2, 0xab, 0xe5, 0x24, 0xbc, 0x5a,
	0x9e, 0xa4, 0x9c, 0x55, 0x5c, 0x75, 0x3d, 0x77, 0x99, 0x7f, 0xe4, 0x93, 0x76, 0x46, 0x6d, 0x8d,
	0x63, 0x95, 0xcf, 0xda, 0x3d, 0x28, 0x35, 0xe3, 0x48, 0x9b, 0x5c, 0x91, 0x8e, 0x26, 0x34, 0xe6,
	0xdd, 0xdf, 0x7f, 0x29, 0xc0, 0x1b, 0xcd, 0xd7, 0x8a, 0x57, 0x73, 0x66, 0xbc, 0x26, 0xe8, 0x99,
	0x9b, 0x83, 0x9e, 0xf3, 0x84, 0xbc, 0x39, 0x35, 0xe4, 0x35, 0xd8, 0x68, 0x99, 0x8e, 0x76, 0x7d,
	0x4b, 0xaa, 0xed, 0xe5, 0x90, 0xee, 0xf3, 0x99, 0x85, 0xe4, 0xa0, 0x7f, 0x02, 0xe5, 0x88, 0x8e,
	0x1b, 0xf8, 0x03, 0x58, 0x62, 0x67, 0x38, 0xbe, 0xfc, 0xa4, 0x88, 0x5b, 0xc1, 0x23, 0x9e, 0x3c,
	0xa6, 0x55, 0x84, 0x0d, 0x49, 0xff, 0x12, 0xe0, 0xad, 0x18, 0x60, 0x9e, 0x88, 0xb3, 0x70, 0x22,
	0xbe, 0x9d, 0x34, 0xdf, 0x44, 0x84, 0x70, 0x32, 0x36, 0x61, 0x79, 0x38, 0xb2, 0xfa, 0xf8, 0xfc,
	0xfa, 0xda, 0xc6, 0x8c, 0x0f, 0x0b, 0x4a, 0x70, 0x48, 0x3c, 0x73, 0x63, 0xdd, 0x08, 0x5b, 0xae,
	0xa4, 0xb6, 0x1c, 0x34, 0x28, 0xe9, 0xb0, 0xd1, 0xc4, 0x0e, 0x3d, 0xbb, 0x3c, 0xbf, 0x3d, 0x36,
	0x6d, 0x9f, 0xac, 0x0f, 0xa0, 0xf0, 0xca, 0xb4, 0x1d, 0x43, 0x1d, 0x60, 0x16, 0xb6, 0x82, 0xe2,
	0x0f, 0x78, 0xdd, 0x32, 0x97, 0xa9, 0x5b, 0x7e, 0x04, 0x77, 0xc9, 0xc8, 0xa9, 0x66, 0x3b, 0x73,
	0x6d, 0x21, 0xff, 0x91, 0x83, 0x37, 0x23, 0xee, 0xf2, 0x4c, 0xbc, 0x08, 0xc7, 0xe3, 0xfd, 0x29,
	0xcc, 0x8b, 0xd3, 0x0f, 0xe7, 0x01, 0xc3, 0x0a, 0x99, 0x2b, 0x15, 0x3c, 0x53, 0x87, 0x7c, 0x59,
	0xd4, 0xb3, 0x62, 0x1e, 0x07, 0x30, 0x64, 0xc3, 0xb1, 0x6e, 0x95, 0x10, 0xac, 0xf8, 0xae, 0x9b,
	0xcc, 0x44, 0x5a, 0x8b, 0x2a, 0xac, 0x45, 0x50, 0x50, 0x11, 0xf2, 0x37, 0xf8, 0x96, 0x8b, 0x92,
	0x9f, 0x68, 0x1f, 0x16, 0xc7, 0xaa, 0x3e, 0x72, 0xfb, 0xf3, 0xd4, 0x84, 0x90, 0xf0, 0x2b, 0x4c,
	0xfc, 0x20, 0xf7, 0x81, 0x20, 0x5d, 0xd1, 0x2a, 0x53, 0xbf, 0x72, 0xb4, 0x71, 0xe4, 0x3e, 0xe2,
	0x17, 0xe6, 0xcb, 0x93, 0x06, 0x37, 0xc4, 0x1e, 0x08, 0x31, 0x2c, 0x32, 0x41, 0xb2, 0x07, 0xe7,
	0x4d, 0xd0, 0x1f, 0x20, 0xdd, 0xc2, 0x76, 0xbc, 0x03, 0x7e, 0x41, 0xe1, 0x4f, 0xd2, 0x1f, 0x96,
	0x28, 0xd3, 0x42, 0x56, 0x78, 0xe6, 0xbe, 0x1f, 0xce, 0xdc, 0xd3, 0x29, 0x51, 0x8e, 0x51, 0x0f,
	0x27, 0xae, 0x0f, 0xf7, 0x08, 0x55, 0x2e, 0xa8, 0xd1, 0x74, 0x99, 0x8b, 0xc3, 0xec, 0x04, 0x31,
	0x58, 0xe6, 0xc2, 0xb8, 0xa8, 0x07, 0x2b, 0x0e, 0x4b, 0x39, 0x1d, 0x2b, 0x2f, 0x50, 0x3b, 0xcf,
	0xe6, 0xb0, 0xe3, 0x42, 0x70, 0x82, 0x04, 0x51, 0xd3, 0x10, 0xe4, 0x8f, 0x02, 0x14, 0x08, 0x0c,
	0x63, 0xc6, 0x06, 0x2c, 0x11, 0x00, 0x2f, 0x67, 0xfc, 0x89, 0x24, 0xcd, 0xf3, 0xdf, 0x4d, 0x9a,
	0x37, 0x90, 0x74, 0x18, 0x42, 0x0f, 0x61, 0x55, 0x57, 0x6d, 0x87, 0x15, 0x0e, 0xb2, 0x2f, 0x2c,
	0x2f, 0xd0, 0xf7, 0x13, 0xa3, 0x48, 0x84, 0xbb, 0x6e, 0x69, 0x28, 0x2f, 0x52, 0x09, 0xef, 0x59,
	0xc4, 0xb0, 0xec, 0xba, 0xa7, 0x61, 0x1b, 0x7d, 0xc2, 0x1c, 0xa1, 0xde, 0xf2, 0xa5, 0xff, 0xc1,
	0x1c, 0x41, 0x63, 0xc1, 0xf2, 0xa1, 0xc4, 0x67, 0x80, 0xa2, 0x49, 0x8b, 0x59, 0x28, 0xa5, 0xe0,
	0x42, 0x29, 0x04, 0x96, 0x81, 0xf8, 0x19, 0xac, 0x45, 0xd2, 0x11, 0x03, 0xd0, 0x0e, 0xaf, 0xb4,
	0x83, 0x39, 0x9d, 0xd7, 0xb0, 0x1d, 0x5c, 0x83, 0x0e, 0x5d, 0x1d, 0x6d, 0x6c, 0xf4, 0x34, 0xa3,
	0x1f, 0x5a, 0x84, 0x8d, 0xe0, 0x72, 0xcb, 0x76, 0x40, 0x0e, 0x2c, 0x4b, 0x6f, 0xeb, 0x91, 0x0b,
	0x6c, 0x3d, 0xa4, 0x2f, 0xf2, 0xb4, 0x9e, 0x86, 0xcd, 0xf2, 0x55, 0xf9, 0x2b, 0x58, 0x1f, 0xb2,
	0x71, 0xba, 0x99, 0x7f, 0x7e, 0xfb, 0x31, 0xd9, 0xd8, 0xf3, 0xf5, 0x74, 0x3c, 0xad, 0xaf, 0xc7,
	0xa0, 0x55, 0xda, 0x51, 0x28, 0x96, 0xc2, 0x38, 0x23, 0xe2, 0x7b, 0xb0, 0x1c, 0x50, 0xa0, 0x3b,
	0x24, 0x4a, 0x63, 0xb7, 0x11, 0xb9, 0x8f, 0xa2, 0x09, 0x2b, 0x41, 0x64, 0xd4, 0x85, 0x95, 0x20,
	0x1e, 0x27, 0xd8, 0x77, 0x5f, 0xc3, 0x5b, 0x25, 0x04, 0x28, 0xfe, 0x46, 0x80, 0x72, 0xd2, 0x5c,
	0x62, 0xc8, 0xa2, 0x84, 0xc9, 0xf2, 0xe1, 0xeb, 0x84, 0x2d, 0x48, 0x97, 0x63, 0x28, 0xbe, 0xd0,
	0x74, 0x3d, 0x44, 0x94, 0xa7, 0xe1, 0x86, 0xfa, 0x4e, 0x12, 0x49, 0x3a, 0x34, 0x76, 0x6e, 0x4b,
	0xfd, 0x29, 0xdc, 0xa3, 0x28, 0xde, 0xcd, 0x64, 0x2d, 0x74, 0xc5, 0x36, 0x0b, 0x65, 0xc6, 0x25,
	0x9b, 0xf4, 0x33, 0x58, 0xf5, 0x1c, 0x95, 0xf9, 0x71, 0xf6, 0xab, 0xc4, 0xff, 0x8f, 0x00, 0x6b,
	0x81, 0x48, 0x70, 0xee, 0xca, 0x7e, 0x47, 0x21, 0xa1, 0xa8, 0x26, 0x85, 0x3d, 0xa2, 0x19, 0x3e,
	0x4a, 0xfc, 0xd6, 0x3b, 0x45, 0xd7, 0x23, 0x17, 0x35, 0xdf, 0x9a, 0xd6, 0x61, 0xed, 0x98, 0x1b,
	0x9a, 0x06, 0x14, 0x6e, 0x34, 0x5d, 0xa7, 0x78, 0x9c, 0x0e, 0x0f, 0x67, 0xfa, 0xc5, 0xdc, 0xf1,
	0x15, 0xa5, 0x2f, 0x72, 0xf0, 0x26, 0x2f, 0xbc, 0xe4, 0x3d, 0xad, 0x54, 0x2e, 0x01, 0x7a, 0x00,
	0x7e, 0x8f, 0xe2, 0x53, 0x6f, 0x24, 0x99, 0x48, 0x00, 0x09, 0x8c, 0x07, 0x9a, 0x52, 0x00, 0x57,
	0xfc, 0x9b, 0x00, 0xa5, 0x38, 0xa1, 0xb9, 0x12, 0x5b, 0x83, 0x65, 0xfa, 0xa1, 0x87, 0x0e, 0xf6,
	0x78, 0x58, 0x8a, 0x15, 0xf6, 0xf1, 0x67, 0xfc, 0xd8, 0x15, 0x0e, 0x0a, 0x11, 0x9e, 0xd3, 0x3d,
	0x05, 0xbf, 0xa9, 0x89, 0x18, 0xa2, 0x9f, 0x7e, 0x3c, 0xdf, 0x14, 0x26, 0x2c, 0x89, 0x50, 0x8e,
	0x4e, 0x99, 0x25, 0xbd, 0xf6, 0x65, 0x01, 0x36, 0xdc, 0xd2, 0x79, 0xa6, 0x1a, 0x6a, 0x1f, 0x5b,
	0x17, 0xd8, 0x1a, 0x6b, 0x57, 0x18, 0x69, 0xb0, 0x12, 0xbc, 0xda, 0x42, 0xdb, 0xe9, 0xae, 0xfd,
	0x68, 0x2c, 0xc5, 0x9d, 0x2c, 0x77, 0x84, 0xc4, 0x54, 0xf0, 0xf6, 0x04, 0x6d, 0xa7, 0xbb, 0x32,
	0x9a, 0x61, 0x2a, 0xf6, 0x72, 0x4a, 0x87, 0x7b, 0xa1, 0x33, 0x2f, 0xda, 0xc9, 0x72, 0x8d, 0x20,
	0xee, 0x66, 0x3a, 0x9e, 0x13, 0x6b, 0xcd, 0x74, 0xd6, 0x9a, 0x99, 0xac, 0xc5, 0x1f, 0x8d, 0x7f,
	0x09, 0x6b, 0x91, 0x23, 0x0f, 0xda, 0xcb, 0x70, 0x2e, 0x63, 0x56, 0x1f, 0x67, 0x3e, 0xc9, 0x21,
	0x0b, 0xee, 0x4f, 0x1c, 0x04, 0x50, 0x25, 0xf5, 0x89, 0x81, 0x59, 0xad, 0x66, 0x3c, 0x61, 0x20,
	0x13, 0x56, 0xc3, 0x1b, 0x0d, 0xb4, 0x9b, 0x76, 0x43, 0xc2, 0x2c, 0x56, 0xb2, 0xed, 0x5f, 0xf8,
	0x24, 0x83, 0xcd, 0x6a, 0xea, 0x24, 0x63, 0x76, 0x34, 0x53, 0x27, 0x19, 0xbb, 0x15, 0xf9, 0x39,
	0x14, 0xbc, 0x8a, 0x88, 0xb6, 0x52, 0x14, 0x73, 0x66, 0xe7, 0x51, 0xea, 0xb2, 0x8f, 0x7e, 0x0d,
	0xeb, 0x31, 0x5f, 0xf3, 0x50, 0x2d, 0xd3, 0x17, 0x53, 0x66, 0xf5, 0xc9, 0x1c, 0x5f, 0x59, 0xd1,
	0x08, 0x8a, 0x93, 0xd5, 0x09, 0x55, 0x33, 0x96, 0x6e, 0x71, 0x2f, 0xbd, 0x02, 0x33, 0xfb, 0xfc,
	0xed, 0x1f, 0xbf, 0x95, 0xf8, 0xcd, 0xfe, 0xe5, 0x12, 0xfd, 0xd4, 0xfd, 0xe4, 0xff, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x91, 0x4a, 0xf0, 0x7b, 0xd7, 0x1f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourceManagerServiceClient is the client API for ResourceManagerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceManagerServiceClient interface {
	//*
	//  Enqueue a list of Gangs, each of which is a list of
	//  one or more tasks, to a given leaf resource pool for
	//  scheduling. The Gangs will be in PENDING state first and then
	//  transit to READY state when the resource pool has available
	//  resources. This method will be called by Job Manager when a new
	//  job is created or new Gangs are added. If any Gangs
	//  fail to enqueue, Job Manager should retry those failed Gangs.
	EnqueueGangs(ctx context.Context, in *EnqueueGangsRequest, opts ...grpc.CallOption) (*EnqueueGangsResponse, error)
	//*
	//  Dequeue a list of Gangs, each comprised of tasks that are in READY
	//  state for placement.  The tasks will transit from READY to PLACING
	//  state after the return of this method. This method will be called by
	//  Placement Engine to retrieve a list of gangs for computing placement.
	//  If tasks are in PLACING state for too long in case of Placement
	//  Engine failures, the tasks will be timed out and transit back
	//  to READY state.
	DequeueGangs(ctx context.Context, in *DequeueGangsRequest, opts ...grpc.CallOption) (*DequeueGangsResponse, error)
	//*
	//  Sets the placement information for successfully placed tasks and
	//  the reason for unsuccessful tasks. For successfully placed tasks the
	//  tasks will transit from PLACING to PLACED state after this call. This
	//  method will be called by Placement Engine after it computes the placement
	//  decision for those tasks.
	//  For unsuccessful tasks the tasks are returned back to the resource manager
	//  along with the reason for the failure. These tasks will be tried again
	//  at a later time for placement again.
	SetPlacements(ctx context.Context, in *SetPlacementsRequest, opts ...grpc.CallOption) (*SetPlacementsResponse, error)
	//*
	//  Get the placement information for a list of tasks. The tasks will
	//  transit from PLACED to LAUNCHING state after this call. This method
	//  is called by Job Manager to launch the tasks on Mesos. If the tasks
	//  are in LAUNCHING state for too long without transiting to RUNNING
	//  state, the tasks will be timedout and transit back to PLACED state.
	GetPlacements(ctx context.Context, in *GetPlacementsRequest, opts ...grpc.CallOption) (*GetPlacementsResponse, error)
	//*
	// Notifies task status updates to resource manager. This will be called by
	// Host manager to notify resource manager on task status updates.
	NotifyTaskUpdates(ctx context.Context, in *NotifyTaskUpdatesRequest, opts ...grpc.CallOption) (*NotifyTaskUpdatesResponse, error)
	//*
	// Get the list of Tasks running on the the list of host provided. This
	// information is needed from the placement engines to find out which tasks
	// are running on which hosts so the placement engine can place tasks taking
	// this information into account.
	GetTasksByHosts(ctx context.Context, in *GetTasksByHostsRequest, opts ...grpc.CallOption) (*GetTasksByHostsResponse, error)
	//*
	// Get task to state map. This information is helpful for debug purpose.
	GetActiveTasks(ctx context.Context, in *GetActiveTasksRequest, opts ...grpc.CallOption) (*GetActiveTasksResponse, error)
	//*
	// Returns the tasks which are waiting on resources in a resource pool in the
	// order in which they were added, up to a max limit number of gangs.
	// Eg specifying a limit of 10 would return pending tasks from the first 10
	// gangs in the queue.
	// The tasks are grouped according to their gang membership since one gang
	// can contain multiple tasks and it is the unit of scheduling.
	GetPendingTasks(ctx context.Context, in *GetPendingTasksRequest, opts ...grpc.CallOption) (*GetPendingTasksResponse, error)
	//*
	// Kill Tasks kills/Delete the tasks in Resource Manager
	KillTasks(ctx context.Context, in *KillTasksRequest, opts ...grpc.CallOption) (*KillTasksResponse, error)
	//*
	// Get the list of tasks to preempt. The tasks will transition from RUNNING to PREEMPTING
	// state after the return of this method. This method will be called by the
	// job manager to kill the tasks and re-enqueue them.
	GetPreemptibleTasks(ctx context.Context, in *GetPreemptibleTasksRequest, opts ...grpc.CallOption) (*GetPreemptibleTasksResponse, error)
	//*
	// UpdateTasksState is used to let the resource manager know that the
	// tasks in the request have been moved to corresponding state.
	UpdateTasksState(ctx context.Context, in *UpdateTasksStateRequest, opts ...grpc.CallOption) (*UpdateTasksStateResponse, error)
}

type resourceManagerServiceClient struct {
	cc *grpc.ClientConn
}

func NewResourceManagerServiceClient(cc *grpc.ClientConn) ResourceManagerServiceClient {
	return &resourceManagerServiceClient{cc}
}

func (c *resourceManagerServiceClient) EnqueueGangs(ctx context.Context, in *EnqueueGangsRequest, opts ...grpc.CallOption) (*EnqueueGangsResponse, error) {
	out := new(EnqueueGangsResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.ResourceManagerService/EnqueueGangs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerServiceClient) DequeueGangs(ctx context.Context, in *DequeueGangsRequest, opts ...grpc.CallOption) (*DequeueGangsResponse, error) {
	out := new(DequeueGangsResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.ResourceManagerService/DequeueGangs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerServiceClient) SetPlacements(ctx context.Context, in *SetPlacementsRequest, opts ...grpc.CallOption) (*SetPlacementsResponse, error) {
	out := new(SetPlacementsResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.ResourceManagerService/SetPlacements", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerServiceClient) GetPlacements(ctx context.Context, in *GetPlacementsRequest, opts ...grpc.CallOption) (*GetPlacementsResponse, error) {
	out := new(GetPlacementsResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.ResourceManagerService/GetPlacements", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerServiceClient) NotifyTaskUpdates(ctx context.Context, in *NotifyTaskUpdatesRequest, opts ...grpc.CallOption) (*NotifyTaskUpdatesResponse, error) {
	out := new(NotifyTaskUpdatesResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.ResourceManagerService/NotifyTaskUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerServiceClient) GetTasksByHosts(ctx context.Context, in *GetTasksByHostsRequest, opts ...grpc.CallOption) (*GetTasksByHostsResponse, error) {
	out := new(GetTasksByHostsResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.ResourceManagerService/GetTasksByHosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerServiceClient) GetActiveTasks(ctx context.Context, in *GetActiveTasksRequest, opts ...grpc.CallOption) (*GetActiveTasksResponse, error) {
	out := new(GetActiveTasksResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.ResourceManagerService/GetActiveTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerServiceClient) GetPendingTasks(ctx context.Context, in *GetPendingTasksRequest, opts ...grpc.CallOption) (*GetPendingTasksResponse, error) {
	out := new(GetPendingTasksResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.ResourceManagerService/GetPendingTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerServiceClient) KillTasks(ctx context.Context, in *KillTasksRequest, opts ...grpc.CallOption) (*KillTasksResponse, error) {
	out := new(KillTasksResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.ResourceManagerService/KillTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerServiceClient) GetPreemptibleTasks(ctx context.Context, in *GetPreemptibleTasksRequest, opts ...grpc.CallOption) (*GetPreemptibleTasksResponse, error) {
	out := new(GetPreemptibleTasksResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.ResourceManagerService/GetPreemptibleTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerServiceClient) UpdateTasksState(ctx context.Context, in *UpdateTasksStateRequest, opts ...grpc.CallOption) (*UpdateTasksStateResponse, error) {
	out := new(UpdateTasksStateResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.ResourceManagerService/UpdateTasksState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceManagerServiceServer is the server API for ResourceManagerService service.
type ResourceManagerServiceServer interface {
	//*
	//  Enqueue a list of Gangs, each of which is a list of
	//  one or more tasks, to a given leaf resource pool for
	//  scheduling. The Gangs will be in PENDING state first and then
	//  transit to READY state when the resource pool has available
	//  resources. This method will be called by Job Manager when a new
	//  job is created or new Gangs are added. If any Gangs
	//  fail to enqueue, Job Manager should retry those failed Gangs.
	EnqueueGangs(context.Context, *EnqueueGangsRequest) (*EnqueueGangsResponse, error)
	//*
	//  Dequeue a list of Gangs, each comprised of tasks that are in READY
	//  state for placement.  The tasks will transit from READY to PLACING
	//  state after the return of this method. This method will be called by
	//  Placement Engine to retrieve a list of gangs for computing placement.
	//  If tasks are in PLACING state for too long in case of Placement
	//  Engine failures, the tasks will be timed out and transit back
	//  to READY state.
	DequeueGangs(context.Context, *DequeueGangsRequest) (*DequeueGangsResponse, error)
	//*
	//  Sets the placement information for successfully placed tasks and
	//  the reason for unsuccessful tasks. For successfully placed tasks the
	//  tasks will transit from PLACING to PLACED state after this call. This
	//  method will be called by Placement Engine after it computes the placement
	//  decision for those tasks.
	//  For unsuccessful tasks the tasks are returned back to the resource manager
	//  along with the reason for the failure. These tasks will be tried again
	//  at a later time for placement again.
	SetPlacements(context.Context, *SetPlacementsRequest) (*SetPlacementsResponse, error)
	//*
	//  Get the placement information for a list of tasks. The tasks will
	//  transit from PLACED to LAUNCHING state after this call. This method
	//  is called by Job Manager to launch the tasks on Mesos. If the tasks
	//  are in LAUNCHING state for too long without transiting to RUNNING
	//  state, the tasks will be timedout and transit back to PLACED state.
	GetPlacements(context.Context, *GetPlacementsRequest) (*GetPlacementsResponse, error)
	//*
	// Notifies task status updates to resource manager. This will be called by
	// Host manager to notify resource manager on task status updates.
	NotifyTaskUpdates(context.Context, *NotifyTaskUpdatesRequest) (*NotifyTaskUpdatesResponse, error)
	//*
	// Get the list of Tasks running on the the list of host provided. This
	// information is needed from the placement engines to find out which tasks
	// are running on which hosts so the placement engine can place tasks taking
	// this information into account.
	GetTasksByHosts(context.Context, *GetTasksByHostsRequest) (*GetTasksByHostsResponse, error)
	//*
	// Get task to state map. This information is helpful for debug purpose.
	GetActiveTasks(context.Context, *GetActiveTasksRequest) (*GetActiveTasksResponse, error)
	//*
	// Returns the tasks which are waiting on resources in a resource pool in the
	// order in which they were added, up to a max limit number of gangs.
	// Eg specifying a limit of 10 would return pending tasks from the first 10
	// gangs in the queue.
	// The tasks are grouped according to their gang membership since one gang
	// can contain multiple tasks and it is the unit of scheduling.
	GetPendingTasks(context.Context, *GetPendingTasksRequest) (*GetPendingTasksResponse, error)
	//*
	// Kill Tasks kills/Delete the tasks in Resource Manager
	KillTasks(context.Context, *KillTasksRequest) (*KillTasksResponse, error)
	//*
	// Get the list of tasks to preempt. The tasks will transition from RUNNING to PREEMPTING
	// state after the return of this method. This method will be called by the
	// job manager to kill the tasks and re-enqueue them.
	GetPreemptibleTasks(context.Context, *GetPreemptibleTasksRequest) (*GetPreemptibleTasksResponse, error)
	//*
	// UpdateTasksState is used to let the resource manager know that the
	// tasks in the request have been moved to corresponding state.
	UpdateTasksState(context.Context, *UpdateTasksStateRequest) (*UpdateTasksStateResponse, error)
}

func RegisterResourceManagerServiceServer(s *grpc.Server, srv ResourceManagerServiceServer) {
	s.RegisterService(&_ResourceManagerService_serviceDesc, srv)
}

func _ResourceManagerService_EnqueueGangs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnqueueGangsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServiceServer).EnqueueGangs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.ResourceManagerService/EnqueueGangs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServiceServer).EnqueueGangs(ctx, req.(*EnqueueGangsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManagerService_DequeueGangs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DequeueGangsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServiceServer).DequeueGangs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.ResourceManagerService/DequeueGangs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServiceServer).DequeueGangs(ctx, req.(*DequeueGangsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManagerService_SetPlacements_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPlacementsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServiceServer).SetPlacements(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.ResourceManagerService/SetPlacements",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServiceServer).SetPlacements(ctx, req.(*SetPlacementsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManagerService_GetPlacements_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlacementsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServiceServer).GetPlacements(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.ResourceManagerService/GetPlacements",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServiceServer).GetPlacements(ctx, req.(*GetPlacementsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManagerService_NotifyTaskUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyTaskUpdatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServiceServer).NotifyTaskUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.ResourceManagerService/NotifyTaskUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServiceServer).NotifyTaskUpdates(ctx, req.(*NotifyTaskUpdatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManagerService_GetTasksByHosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTasksByHostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServiceServer).GetTasksByHosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.ResourceManagerService/GetTasksByHosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServiceServer).GetTasksByHosts(ctx, req.(*GetTasksByHostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManagerService_GetActiveTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActiveTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServiceServer).GetActiveTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.ResourceManagerService/GetActiveTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServiceServer).GetActiveTasks(ctx, req.(*GetActiveTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManagerService_GetPendingTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPendingTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServiceServer).GetPendingTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.ResourceManagerService/GetPendingTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServiceServer).GetPendingTasks(ctx, req.(*GetPendingTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManagerService_KillTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KillTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServiceServer).KillTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.ResourceManagerService/KillTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServiceServer).KillTasks(ctx, req.(*KillTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManagerService_GetPreemptibleTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPreemptibleTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServiceServer).GetPreemptibleTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.ResourceManagerService/GetPreemptibleTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServiceServer).GetPreemptibleTasks(ctx, req.(*GetPreemptibleTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManagerService_UpdateTasksState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTasksStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServiceServer).UpdateTasksState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.ResourceManagerService/UpdateTasksState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServiceServer).UpdateTasksState(ctx, req.(*UpdateTasksStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceManagerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "peloton.private.resmgr.ResourceManagerService",
	HandlerType: (*ResourceManagerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnqueueGangs",
			Handler:    _ResourceManagerService_EnqueueGangs_Handler,
		},
		{
			MethodName: "DequeueGangs",
			Handler:    _ResourceManagerService_DequeueGangs_Handler,
		},
		{
			MethodName: "SetPlacements",
			Handler:    _ResourceManagerService_SetPlacements_Handler,
		},
		{
			MethodName: "GetPlacements",
			Handler:    _ResourceManagerService_GetPlacements_Handler,
		},
		{
			MethodName: "NotifyTaskUpdates",
			Handler:    _ResourceManagerService_NotifyTaskUpdates_Handler,
		},
		{
			MethodName: "GetTasksByHosts",
			Handler:    _ResourceManagerService_GetTasksByHosts_Handler,
		},
		{
			MethodName: "GetActiveTasks",
			Handler:    _ResourceManagerService_GetActiveTasks_Handler,
		},
		{
			MethodName: "GetPendingTasks",
			Handler:    _ResourceManagerService_GetPendingTasks_Handler,
		},
		{
			MethodName: "KillTasks",
			Handler:    _ResourceManagerService_KillTasks_Handler,
		},
		{
			MethodName: "GetPreemptibleTasks",
			Handler:    _ResourceManagerService_GetPreemptibleTasks_Handler,
		},
		{
			MethodName: "UpdateTasksState",
			Handler:    _ResourceManagerService_UpdateTasksState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "peloton/private/resmgrsvc/resmgrsvc.proto",
}
