// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peloton/private/resmgr/taskqueue/taskqueue.proto

package taskqueue

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	task "github.com/uber/peloton/.gen/peloton/api/v0/task"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EnqueueRequest struct {
	// The list of tasks to enqueue
	Tasks                []*task.TaskInfo `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EnqueueRequest) Reset()         { *m = EnqueueRequest{} }
func (m *EnqueueRequest) String() string { return proto.CompactTextString(m) }
func (*EnqueueRequest) ProtoMessage()    {}
func (*EnqueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33a55d6396d24857, []int{0}
}

func (m *EnqueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnqueueRequest.Unmarshal(m, b)
}
func (m *EnqueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnqueueRequest.Marshal(b, m, deterministic)
}
func (m *EnqueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnqueueRequest.Merge(m, src)
}
func (m *EnqueueRequest) XXX_Size() int {
	return xxx_messageInfo_EnqueueRequest.Size(m)
}
func (m *EnqueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnqueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnqueueRequest proto.InternalMessageInfo

func (m *EnqueueRequest) GetTasks() []*task.TaskInfo {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type EnqueueResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnqueueResponse) Reset()         { *m = EnqueueResponse{} }
func (m *EnqueueResponse) String() string { return proto.CompactTextString(m) }
func (*EnqueueResponse) ProtoMessage()    {}
func (*EnqueueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33a55d6396d24857, []int{1}
}

func (m *EnqueueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnqueueResponse.Unmarshal(m, b)
}
func (m *EnqueueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnqueueResponse.Marshal(b, m, deterministic)
}
func (m *EnqueueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnqueueResponse.Merge(m, src)
}
func (m *EnqueueResponse) XXX_Size() int {
	return xxx_messageInfo_EnqueueResponse.Size(m)
}
func (m *EnqueueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnqueueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnqueueResponse proto.InternalMessageInfo

type DequeueRequest struct {
	// Max number of tasks to dequeue
	Limit                uint32   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DequeueRequest) Reset()         { *m = DequeueRequest{} }
func (m *DequeueRequest) String() string { return proto.CompactTextString(m) }
func (*DequeueRequest) ProtoMessage()    {}
func (*DequeueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33a55d6396d24857, []int{2}
}

func (m *DequeueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueRequest.Unmarshal(m, b)
}
func (m *DequeueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueRequest.Marshal(b, m, deterministic)
}
func (m *DequeueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueRequest.Merge(m, src)
}
func (m *DequeueRequest) XXX_Size() int {
	return xxx_messageInfo_DequeueRequest.Size(m)
}
func (m *DequeueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueRequest proto.InternalMessageInfo

func (m *DequeueRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DequeueResponse struct {
	// The list of tasks that have been dequeued
	Tasks                []*task.TaskInfo `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DequeueResponse) Reset()         { *m = DequeueResponse{} }
func (m *DequeueResponse) String() string { return proto.CompactTextString(m) }
func (*DequeueResponse) ProtoMessage()    {}
func (*DequeueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33a55d6396d24857, []int{3}
}

func (m *DequeueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueResponse.Unmarshal(m, b)
}
func (m *DequeueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueResponse.Marshal(b, m, deterministic)
}
func (m *DequeueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueResponse.Merge(m, src)
}
func (m *DequeueResponse) XXX_Size() int {
	return xxx_messageInfo_DequeueResponse.Size(m)
}
func (m *DequeueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueResponse proto.InternalMessageInfo

func (m *DequeueResponse) GetTasks() []*task.TaskInfo {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func init() {
	proto.RegisterType((*EnqueueRequest)(nil), "peloton.private.resmgr.taskqueue.EnqueueRequest")
	proto.RegisterType((*EnqueueResponse)(nil), "peloton.private.resmgr.taskqueue.EnqueueResponse")
	proto.RegisterType((*DequeueRequest)(nil), "peloton.private.resmgr.taskqueue.DequeueRequest")
	proto.RegisterType((*DequeueResponse)(nil), "peloton.private.resmgr.taskqueue.DequeueResponse")
}

func init() {
	proto.RegisterFile("peloton/private/resmgr/taskqueue/taskqueue.proto", fileDescriptor_33a55d6396d24857)
}

var fileDescriptor_33a55d6396d24857 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x28, 0x48, 0xcd, 0xc9,
	0x2f, 0xc9, 0xcf, 0xd3, 0x2f, 0x28, 0xca, 0x2c, 0x4b, 0x2c, 0x49, 0xd5, 0x2f, 0x4a, 0x2d, 0xce,
	0x4d, 0x2f, 0xd2, 0x2f, 0x49, 0x2c, 0xce, 0x2e, 0x2c, 0x4d, 0x2d, 0x4d, 0x45, 0xb0, 0xf4, 0x0a,
	0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x14, 0xa0, 0x3a, 0xf4, 0xa0, 0x3a, 0xf4, 0x20, 0x3a, 0xf4, 0xe0,
	0xea, 0xa4, 0xe4, 0x60, 0x66, 0x26, 0x16, 0x64, 0xea, 0x97, 0x19, 0x80, 0x4d, 0x00, 0x13, 0x10,
	0x13, 0x94, 0x5c, 0xb9, 0xf8, 0x5c, 0xf3, 0xc0, 0x4a, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b,
	0x84, 0x8c, 0xb9, 0x58, 0x41, 0xf2, 0xc5, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46, 0xb2, 0x7a,
	0x30, 0x3b, 0x12, 0x0b, 0x32, 0xf5, 0xca, 0x0c, 0xc0, 0x66, 0xeb, 0x85, 0x24, 0x16, 0x67, 0x7b,
	0xe6, 0xa5, 0xe5, 0x07, 0x41, 0xd4, 0x2a, 0x09, 0x72, 0xf1, 0xc3, 0x8d, 0x29, 0x2e, 0xc8, 0xcf,
	0x2b, 0x4e, 0x55, 0x52, 0xe3, 0xe2, 0x73, 0x49, 0x45, 0x31, 0x59, 0x84, 0x8b, 0x35, 0x27, 0x33,
	0x37, 0xb3, 0x44, 0x82, 0x51, 0x81, 0x51, 0x83, 0x37, 0x08, 0xc2, 0x51, 0x72, 0xe3, 0xe2, 0x87,
	0xab, 0x83, 0x68, 0x25, 0xcb, 0x09, 0x46, 0xaf, 0x19, 0xb9, 0x38, 0x41, 0x62, 0x81, 0x20, 0xa3,
	0x84, 0xf2, 0xb8, 0xd8, 0xa1, 0x0e, 0x12, 0x32, 0xd0, 0x23, 0x14, 0x4a, 0x7a, 0xa8, 0x41, 0x20,
	0x65, 0x48, 0x82, 0x0e, 0xa8, 0x93, 0xf3, 0xb8, 0xd8, 0xa1, 0xbe, 0x20, 0xc6, 0x3e, 0xd4, 0x80,
	0x21, 0xc6, 0x3e, 0xb4, 0x20, 0x72, 0x52, 0x8a, 0x52, 0x20, 0x94, 0x5a, 0x92, 0xd8, 0xc0, 0x51,
	0x6c, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xd5, 0xe3, 0x87, 0x58, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskQueueClient is the client API for TaskQueue service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskQueueClient interface {
	// Enqueue a list of tasks
	Enqueue(ctx context.Context, in *EnqueueRequest, opts ...grpc.CallOption) (*EnqueueResponse, error)
	// Dequeue a list of tasks
	Dequeue(ctx context.Context, in *DequeueRequest, opts ...grpc.CallOption) (*DequeueResponse, error)
}

type taskQueueClient struct {
	cc *grpc.ClientConn
}

func NewTaskQueueClient(cc *grpc.ClientConn) TaskQueueClient {
	return &taskQueueClient{cc}
}

func (c *taskQueueClient) Enqueue(ctx context.Context, in *EnqueueRequest, opts ...grpc.CallOption) (*EnqueueResponse, error) {
	out := new(EnqueueResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.taskqueue.TaskQueue/Enqueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskQueueClient) Dequeue(ctx context.Context, in *DequeueRequest, opts ...grpc.CallOption) (*DequeueResponse, error) {
	out := new(DequeueResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.resmgr.taskqueue.TaskQueue/Dequeue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskQueueServer is the server API for TaskQueue service.
type TaskQueueServer interface {
	// Enqueue a list of tasks
	Enqueue(context.Context, *EnqueueRequest) (*EnqueueResponse, error)
	// Dequeue a list of tasks
	Dequeue(context.Context, *DequeueRequest) (*DequeueResponse, error)
}

func RegisterTaskQueueServer(s *grpc.Server, srv TaskQueueServer) {
	s.RegisterService(&_TaskQueue_serviceDesc, srv)
}

func _TaskQueue_Enqueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnqueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskQueueServer).Enqueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.taskqueue.TaskQueue/Enqueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskQueueServer).Enqueue(ctx, req.(*EnqueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskQueue_Dequeue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DequeueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskQueueServer).Dequeue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.resmgr.taskqueue.TaskQueue/Dequeue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskQueueServer).Dequeue(ctx, req.(*DequeueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskQueue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "peloton.private.resmgr.taskqueue.TaskQueue",
	HandlerType: (*TaskQueueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enqueue",
			Handler:    _TaskQueue_Enqueue_Handler,
		},
		{
			MethodName: "Dequeue",
			Handler:    _TaskQueue_Dequeue_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "peloton/private/resmgr/taskqueue/taskqueue.proto",
}
