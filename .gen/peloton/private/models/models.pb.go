// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peloton/private/models/models.proto

package models

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	peloton "github.com/uber/peloton/.gen/peloton/api/v0/peloton"
	update "github.com/uber/peloton/.gen/peloton/api/v0/update"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WorkflowType int32

const (
	WorkflowType_UNKNOWN WorkflowType = 0
	WorkflowType_UPDATE  WorkflowType = 1
	WorkflowType_RESTART WorkflowType = 2
	WorkflowType_START   WorkflowType = 3
	WorkflowType_STOP    WorkflowType = 4
)

var WorkflowType_name = map[int32]string{
	0: "UNKNOWN",
	1: "UPDATE",
	2: "RESTART",
	3: "START",
	4: "STOP",
}

var WorkflowType_value = map[string]int32{
	"UNKNOWN": 0,
	"UPDATE":  1,
	"RESTART": 2,
	"START":   3,
	"STOP":    4,
}

func (x WorkflowType) String() string {
	return proto.EnumName(WorkflowType_name, int32(x))
}

func (WorkflowType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_09c20f73e75cdfdb, []int{0}
}

//*
// Object to model a job workflow.
type UpdateModel struct {
	// the update identifier
	UpdateID *peloton.UpdateID `protobuf:"bytes,1,opt,name=updateID,proto3" json:"updateID,omitempty"`
	// the update configuration
	UpdateConfig *update.UpdateConfig `protobuf:"bytes,2,opt,name=updateConfig,proto3" json:"updateConfig,omitempty"`
	// the update state
	State update.State `protobuf:"varint,3,opt,name=state,proto3,enum=peloton.api.v0.update.State" json:"state,omitempty"`
	// the job identifier
	JobID *peloton.JobID `protobuf:"bytes,4,opt,name=jobID,proto3" json:"jobID,omitempty"`
	// total number of instances being updated/added
	InstancesTotal uint32 `protobuf:"varint,5,opt,name=instancesTotal,proto3" json:"instancesTotal,omitempty"`
	// current instances being updated
	InstancesCurrent []uint32 `protobuf:"varint,6,rep,packed,name=instancesCurrent,proto3" json:"instancesCurrent,omitempty"`
	// instances which have been successfully updated
	InstancesDone uint32 `protobuf:"varint,7,opt,name=instancesDone,proto3" json:"instancesDone,omitempty"`
	// the target job configuration version
	JobConfigVersion uint64 `protobuf:"varint,8,opt,name=jobConfigVersion,proto3" json:"jobConfigVersion,omitempty"`
	// the previous job configuration version
	PrevJobConfigVersion uint64 `protobuf:"varint,9,opt,name=prevJobConfigVersion,proto3" json:"prevJobConfigVersion,omitempty"`
	// time at which the update was created
	CreationTime string `protobuf:"bytes,10,opt,name=creationTime,proto3" json:"creationTime,omitempty"`
	// time at which the update state was last updated
	UpdateTime string `protobuf:"bytes,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	// instances to be added
	InstancesAdded []uint32 `protobuf:"varint,12,rep,packed,name=instancesAdded,proto3" json:"instancesAdded,omitempty"`
	// instances to be updated
	InstancesUpdated []uint32 `protobuf:"varint,13,rep,packed,name=instancesUpdated,proto3" json:"instancesUpdated,omitempty"`
	// The type for this workflow
	Type WorkflowType `protobuf:"varint,14,opt,name=type,proto3,enum=peloton.private.models.WorkflowType" json:"type,omitempty"`
	// instances to be removed
	InstancesRemoved []uint32 `protobuf:"varint,15,rep,packed,name=instancesRemoved,proto3" json:"instancesRemoved,omitempty"`
	// instances which are failed during update
	InstancesFailed uint32 `protobuf:"varint,16,opt,name=instancesFailed,proto3" json:"instancesFailed,omitempty"`
	// the previous update state
	PrevState update.State `protobuf:"varint,17,opt,name=prevState,proto3,enum=peloton.api.v0.update.State" json:"prevState,omitempty"`
	// the previous update state
	OpaqueData *peloton.OpaqueData `protobuf:"bytes,18,opt,name=opaque_data,json=opaqueData,proto3" json:"opaque_data,omitempty"`
	// time at which the update state completed
	CompletionTime       string   `protobuf:"bytes,19,opt,name=completionTime,proto3" json:"completionTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateModel) Reset()         { *m = UpdateModel{} }
func (m *UpdateModel) String() string { return proto.CompactTextString(m) }
func (*UpdateModel) ProtoMessage()    {}
func (*UpdateModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_09c20f73e75cdfdb, []int{0}
}

func (m *UpdateModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateModel.Unmarshal(m, b)
}
func (m *UpdateModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateModel.Marshal(b, m, deterministic)
}
func (m *UpdateModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateModel.Merge(m, src)
}
func (m *UpdateModel) XXX_Size() int {
	return xxx_messageInfo_UpdateModel.Size(m)
}
func (m *UpdateModel) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateModel.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateModel proto.InternalMessageInfo

func (m *UpdateModel) GetUpdateID() *peloton.UpdateID {
	if m != nil {
		return m.UpdateID
	}
	return nil
}

func (m *UpdateModel) GetUpdateConfig() *update.UpdateConfig {
	if m != nil {
		return m.UpdateConfig
	}
	return nil
}

func (m *UpdateModel) GetState() update.State {
	if m != nil {
		return m.State
	}
	return update.State_INVALID
}

func (m *UpdateModel) GetJobID() *peloton.JobID {
	if m != nil {
		return m.JobID
	}
	return nil
}

func (m *UpdateModel) GetInstancesTotal() uint32 {
	if m != nil {
		return m.InstancesTotal
	}
	return 0
}

func (m *UpdateModel) GetInstancesCurrent() []uint32 {
	if m != nil {
		return m.InstancesCurrent
	}
	return nil
}

func (m *UpdateModel) GetInstancesDone() uint32 {
	if m != nil {
		return m.InstancesDone
	}
	return 0
}

func (m *UpdateModel) GetJobConfigVersion() uint64 {
	if m != nil {
		return m.JobConfigVersion
	}
	return 0
}

func (m *UpdateModel) GetPrevJobConfigVersion() uint64 {
	if m != nil {
		return m.PrevJobConfigVersion
	}
	return 0
}

func (m *UpdateModel) GetCreationTime() string {
	if m != nil {
		return m.CreationTime
	}
	return ""
}

func (m *UpdateModel) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *UpdateModel) GetInstancesAdded() []uint32 {
	if m != nil {
		return m.InstancesAdded
	}
	return nil
}

func (m *UpdateModel) GetInstancesUpdated() []uint32 {
	if m != nil {
		return m.InstancesUpdated
	}
	return nil
}

func (m *UpdateModel) GetType() WorkflowType {
	if m != nil {
		return m.Type
	}
	return WorkflowType_UNKNOWN
}

func (m *UpdateModel) GetInstancesRemoved() []uint32 {
	if m != nil {
		return m.InstancesRemoved
	}
	return nil
}

func (m *UpdateModel) GetInstancesFailed() uint32 {
	if m != nil {
		return m.InstancesFailed
	}
	return 0
}

func (m *UpdateModel) GetPrevState() update.State {
	if m != nil {
		return m.PrevState
	}
	return update.State_INVALID
}

func (m *UpdateModel) GetOpaqueData() *peloton.OpaqueData {
	if m != nil {
		return m.OpaqueData
	}
	return nil
}

func (m *UpdateModel) GetCompletionTime() string {
	if m != nil {
		return m.CompletionTime
	}
	return ""
}

//*
// ConfigAddOn defines the add-ons to the user provided configuration
type ConfigAddOn struct {
	// Peloton added labels
	SystemLabels         []*peloton.Label `protobuf:"bytes,1,rep,name=system_labels,json=systemLabels,proto3" json:"system_labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ConfigAddOn) Reset()         { *m = ConfigAddOn{} }
func (m *ConfigAddOn) String() string { return proto.CompactTextString(m) }
func (*ConfigAddOn) ProtoMessage()    {}
func (*ConfigAddOn) Descriptor() ([]byte, []int) {
	return fileDescriptor_09c20f73e75cdfdb, []int{1}
}

func (m *ConfigAddOn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigAddOn.Unmarshal(m, b)
}
func (m *ConfigAddOn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigAddOn.Marshal(b, m, deterministic)
}
func (m *ConfigAddOn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigAddOn.Merge(m, src)
}
func (m *ConfigAddOn) XXX_Size() int {
	return xxx_messageInfo_ConfigAddOn.Size(m)
}
func (m *ConfigAddOn) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigAddOn.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigAddOn proto.InternalMessageInfo

func (m *ConfigAddOn) GetSystemLabels() []*peloton.Label {
	if m != nil {
		return m.SystemLabels
	}
	return nil
}

func init() {
	proto.RegisterEnum("peloton.private.models.WorkflowType", WorkflowType_name, WorkflowType_value)
	proto.RegisterType((*UpdateModel)(nil), "peloton.private.models.UpdateModel")
	proto.RegisterType((*ConfigAddOn)(nil), "peloton.private.models.ConfigAddOn")
}

func init() {
	proto.RegisterFile("peloton/private/models/models.proto", fileDescriptor_09c20f73e75cdfdb)
}

var fileDescriptor_09c20f73e75cdfdb = []byte{
	// 581 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x51, 0x6f, 0xda, 0x30,
	0x10, 0xc7, 0x97, 0x02, 0x6d, 0xb9, 0x00, 0xcd, 0xbc, 0xa9, 0xb2, 0xaa, 0x6e, 0x8a, 0x68, 0x35,
	0x45, 0x7d, 0x08, 0x88, 0xbe, 0x4c, 0xd3, 0x5e, 0x28, 0x74, 0x13, 0xdd, 0x06, 0x9d, 0x09, 0xab,
	0xb4, 0x97, 0xca, 0x10, 0x77, 0x4a, 0x17, 0xe2, 0x2c, 0x31, 0x4c, 0x7c, 0xa3, 0x7d, 0xcc, 0x29,
	0x76, 0x9a, 0x92, 0x14, 0xa6, 0x3d, 0xd9, 0xfe, 0xdf, 0xef, 0xee, 0xec, 0xbb, 0x93, 0xe1, 0x24,
	0x64, 0x3e, 0x17, 0x3c, 0x68, 0x85, 0x91, 0xb7, 0xa4, 0x82, 0xb5, 0xe6, 0xdc, 0x65, 0x7e, 0x9c,
	0x2e, 0x76, 0x18, 0x71, 0xc1, 0xd1, 0x61, 0x0a, 0xd9, 0x29, 0x64, 0x2b, 0xeb, 0xd1, 0xf1, 0x83,
	0x33, 0x0d, 0xbd, 0xd6, 0xb2, 0xdd, 0x7a, 0xc4, 0xb8, 0xe0, 0x47, 0xcd, 0x82, 0x75, 0x11, 0xba,
	0x49, 0x02, 0xb5, 0x28, 0xa6, 0xf9, 0x67, 0x0f, 0xf4, 0x89, 0x14, 0xbe, 0x24, 0x21, 0xd1, 0x7b,
	0xd8, 0x57, 0xf6, 0x41, 0x1f, 0x6b, 0xa6, 0x66, 0xe9, 0x1d, 0xd3, 0x7e, 0x88, 0x4a, 0x43, 0xcf,
	0x5e, 0xb6, 0xb3, 0xe3, 0x24, 0xe5, 0x48, 0xe6, 0x81, 0x3e, 0x42, 0x4d, 0xed, 0x7b, 0x3c, 0xb8,
	0xf3, 0x7e, 0xe0, 0x1d, 0x19, 0xe1, 0xa4, 0x18, 0x21, 0xbd, 0xc1, 0x64, 0x0d, 0x25, 0x39, 0x47,
	0xd4, 0x81, 0x4a, 0x2c, 0xa8, 0x60, 0xb8, 0x64, 0x6a, 0x56, 0xa3, 0x73, 0xbc, 0x25, 0xc2, 0x38,
	0x61, 0x88, 0x42, 0xd1, 0x39, 0x54, 0xee, 0xf9, 0x74, 0xd0, 0xc7, 0x65, 0x99, 0xf5, 0xd5, 0xb6,
	0x7b, 0x5f, 0x25, 0x10, 0x51, 0x2c, 0x7a, 0x03, 0x0d, 0x2f, 0x88, 0x05, 0x0d, 0x66, 0x2c, 0x76,
	0xb8, 0xa0, 0x3e, 0xae, 0x98, 0x9a, 0x55, 0x27, 0x05, 0x15, 0x9d, 0x81, 0x91, 0x29, 0xbd, 0x45,
	0x14, 0xb1, 0x40, 0xe0, 0x5d, 0xb3, 0x64, 0xd5, 0xc9, 0x13, 0x1d, 0x9d, 0x42, 0x3d, 0xd3, 0xfa,
	0x3c, 0x60, 0x78, 0x4f, 0x86, 0xcc, 0x8b, 0x49, 0xc4, 0x7b, 0x3e, 0x55, 0xef, 0xfd, 0xc6, 0xa2,
	0xd8, 0xe3, 0x01, 0xde, 0x37, 0x35, 0xab, 0x4c, 0x9e, 0xe8, 0xa8, 0x03, 0x2f, 0xc3, 0x88, 0x2d,
	0xaf, 0x8a, 0x7c, 0x55, 0xf2, 0x1b, 0x6d, 0xa8, 0x09, 0xb5, 0x59, 0xc4, 0xa8, 0xf0, 0x78, 0xe0,
	0x78, 0x73, 0x86, 0xc1, 0xd4, 0xac, 0x2a, 0xc9, 0x69, 0xe8, 0x35, 0x80, 0xaa, 0xa4, 0x24, 0x74,
	0x49, 0xac, 0x29, 0xb9, 0xea, 0x74, 0x5d, 0x97, 0xb9, 0xb8, 0x26, 0xdf, 0x5c, 0x50, 0x73, 0xd5,
	0x51, 0x5d, 0x75, 0x71, 0xbd, 0x50, 0x9d, 0x54, 0x47, 0x6f, 0xa1, 0x2c, 0x56, 0x21, 0xc3, 0x0d,
	0xd9, 0xd9, 0x53, 0x7b, 0xf3, 0x68, 0xdb, 0x37, 0x3c, 0xfa, 0x79, 0xe7, 0xf3, 0xdf, 0xce, 0x2a,
	0x64, 0x44, 0x7a, 0xe4, 0xb2, 0x10, 0x36, 0xe7, 0x4b, 0xe6, 0xe2, 0x83, 0x42, 0x96, 0x54, 0x47,
	0x16, 0x1c, 0x64, 0xda, 0x07, 0xea, 0xf9, 0xcc, 0xc5, 0x86, 0xec, 0x42, 0x51, 0x46, 0xef, 0xa0,
	0x9a, 0xd4, 0x4f, 0x8e, 0x12, 0x7e, 0xfe, 0x1f, 0xe3, 0xf6, 0x88, 0xa3, 0x1e, 0xe8, 0x3c, 0xa4,
	0xbf, 0x16, 0xec, 0xd6, 0xa5, 0x82, 0x62, 0x24, 0x07, 0xaf, 0xb9, 0x6d, 0xf0, 0x46, 0x12, 0xed,
	0x53, 0x41, 0x09, 0xf0, 0x6c, 0x9f, 0x14, 0x79, 0xc6, 0xe7, 0xa1, 0xcf, 0xb2, 0x56, 0xbd, 0x90,
	0x8d, 0x28, 0xa8, 0xcd, 0xaf, 0xa0, 0xab, 0x0e, 0x77, 0x5d, 0x77, 0x14, 0xa0, 0x0b, 0xa8, 0xc7,
	0xab, 0x58, 0xb0, 0xf9, 0xad, 0x4f, 0xa7, 0xcc, 0x8f, 0xb1, 0x66, 0x96, 0xfe, 0x35, 0xf6, 0x9f,
	0x13, 0x8a, 0xd4, 0x94, 0x8f, 0x3c, 0xc4, 0x67, 0x03, 0xa8, 0xad, 0xd7, 0x19, 0xe9, 0xb0, 0x37,
	0x19, 0x7e, 0x1a, 0x8e, 0x6e, 0x86, 0xc6, 0x33, 0x04, 0xb0, 0x3b, 0xb9, 0xee, 0x77, 0x9d, 0x4b,
	0x43, 0x4b, 0x0c, 0xe4, 0x72, 0xec, 0x74, 0x89, 0x63, 0xec, 0xa0, 0x2a, 0x54, 0xd4, 0xb6, 0x84,
	0xf6, 0xa1, 0x3c, 0x76, 0x46, 0xd7, 0x46, 0xf9, 0xa2, 0x0d, 0x5b, 0x3e, 0xa9, 0xef, 0x87, 0x9b,
	0x7f, 0xb8, 0xe9, 0xae, 0xfc, 0x81, 0xce, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x6c, 0xde, 0xf6,
	0xf8, 0x02, 0x05, 0x00, 0x00,
}
