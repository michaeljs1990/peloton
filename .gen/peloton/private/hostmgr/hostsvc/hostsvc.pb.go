// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peloton/private/hostmgr/hostsvc/hostsvc.proto

package hostsvc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/uber/peloton/.gen/mesos/v1"
	master "github.com/uber/peloton/.gen/mesos/v1/master"
	peloton "github.com/uber/peloton/.gen/peloton/api/v0/peloton"
	task "github.com/uber/peloton/.gen/peloton/api/v0/task"
	eventstream "github.com/uber/peloton/.gen/peloton/private/eventstream"
	resmgr "github.com/uber/peloton/.gen/peloton/private/resmgr"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// HostFilterResult describes result of filtering hosts.
type HostFilterResult int32

const (
	// Reserved in case new result is unrecognized.
	HostFilterResult_UNKNOWN HostFilterResult = 0
	// Host is matched by filter and returned in HostOffer.
	HostFilterResult_MATCH HostFilterResult = 1
	// Host has enough total resources but offered resources
	// is insufficient (signal for fragmentation).
	HostFilterResult_INSUFFICIENT_OFFER_RESOURCES HostFilterResult = 2
	// Host is filtered out because of mismatched task -> host constraint.
	HostFilterResult_MISMATCH_CONSTRAINTS HostFilterResult = 3
	// Host has GPU so reserved for GPU only task.
	HostFilterResult_MISMATCH_GPU HostFilterResult = 4
	// Host is in mismatch status (i.e, another placement engine)
	// has a hold of the host.
	HostFilterResult_MISMATCH_STATUS HostFilterResult = 5
	// Host is filtered out because maxHosts limit is reached.
	HostFilterResult_MISMATCH_MAX_HOST_LIMIT HostFilterResult = 6
	// Host has no available offer to be matched. Usually this means the host is
	// fully used already.
	HostFilterResult_NO_OFFER HostFilterResult = 7
	// Host has insufficiant resources to match the GetHosts Request.
	HostFilterResult_INSUFFICIENT_RESOURCES HostFilterResult = 8
	// Host has scarce resources which are to be used by exclusive task (needing those resources).
	HostFilterResult_SCARCE_RESOURCES HostFilterResult = 9
)

var HostFilterResult_name = map[int32]string{
	0: "UNKNOWN",
	1: "MATCH",
	2: "INSUFFICIENT_OFFER_RESOURCES",
	3: "MISMATCH_CONSTRAINTS",
	4: "MISMATCH_GPU",
	5: "MISMATCH_STATUS",
	6: "MISMATCH_MAX_HOST_LIMIT",
	7: "NO_OFFER",
	8: "INSUFFICIENT_RESOURCES",
	9: "SCARCE_RESOURCES",
}

var HostFilterResult_value = map[string]int32{
	"UNKNOWN":                      0,
	"MATCH":                        1,
	"INSUFFICIENT_OFFER_RESOURCES": 2,
	"MISMATCH_CONSTRAINTS":         3,
	"MISMATCH_GPU":                 4,
	"MISMATCH_STATUS":              5,
	"MISMATCH_MAX_HOST_LIMIT":      6,
	"NO_OFFER":                     7,
	"INSUFFICIENT_RESOURCES":       8,
	"SCARCE_RESOURCES":             9,
}

func (x HostFilterResult) String() string {
	return proto.EnumName(HostFilterResult_name, int32(x))
}

func (HostFilterResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{0}
}

// Ways in which to rank hosts to return
type FilterHint_Ranking int32

const (
	// Use system default ranking
	FilterHint_FILTER_HINT_RANKING_INVALID FilterHint_Ranking = 0
	// Rank hosts randomly
	FilterHint_FILTER_HINT_RANKING_RANDOM FilterHint_Ranking = 1
	// Rank hosts with least available resources first
	FilterHint_FILTER_HINT_RANKING_LEAST_AVAILABLE_FIRST FilterHint_Ranking = 2
)

var FilterHint_Ranking_name = map[int32]string{
	0: "FILTER_HINT_RANKING_INVALID",
	1: "FILTER_HINT_RANKING_RANDOM",
	2: "FILTER_HINT_RANKING_LEAST_AVAILABLE_FIRST",
}

var FilterHint_Ranking_value = map[string]int32{
	"FILTER_HINT_RANKING_INVALID":               0,
	"FILTER_HINT_RANKING_RANDOM":                1,
	"FILTER_HINT_RANKING_LEAST_AVAILABLE_FIRST": 2,
}

func (x FilterHint_Ranking) String() string {
	return proto.EnumName(FilterHint_Ranking_name, int32(x))
}

func (FilterHint_Ranking) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{7, 0}
}

// Defines an operation that can be performed against offers.
type OfferOperation_Type int32

const (
	OfferOperation_UNKNOWN   OfferOperation_Type = 0
	OfferOperation_LAUNCH    OfferOperation_Type = 1
	OfferOperation_RESERVE   OfferOperation_Type = 2
	OfferOperation_UNRESERVE OfferOperation_Type = 3
	OfferOperation_CREATE    OfferOperation_Type = 4
	OfferOperation_DESTROY   OfferOperation_Type = 5
)

var OfferOperation_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "LAUNCH",
	2: "RESERVE",
	3: "UNRESERVE",
	4: "CREATE",
	5: "DESTROY",
}

var OfferOperation_Type_value = map[string]int32{
	"UNKNOWN":   0,
	"LAUNCH":    1,
	"RESERVE":   2,
	"UNRESERVE": 3,
	"CREATE":    4,
	"DESTROY":   5,
}

func (x OfferOperation_Type) String() string {
	return proto.EnumName(OfferOperation_Type_name, int32(x))
}

func (OfferOperation_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{34, 0}
}

//*
//  HostOffer describes the resources available on a host by aggregating
//  a list of Mesos offers to avoid offer defragmentation issue.
type HostOffer struct {
	Hostname             string               `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	AgentId              *v1.AgentID          `protobuf:"bytes,2,opt,name=agentId,proto3" json:"agentId,omitempty"`
	Resources            []*v1.Resource       `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
	Attributes           []*v1.Attribute      `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Id                   *peloton.HostOfferID `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HostOffer) Reset()         { *m = HostOffer{} }
func (m *HostOffer) String() string { return proto.CompactTextString(m) }
func (*HostOffer) ProtoMessage()    {}
func (*HostOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{0}
}

func (m *HostOffer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostOffer.Unmarshal(m, b)
}
func (m *HostOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostOffer.Marshal(b, m, deterministic)
}
func (m *HostOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostOffer.Merge(m, src)
}
func (m *HostOffer) XXX_Size() int {
	return xxx_messageInfo_HostOffer.Size(m)
}
func (m *HostOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_HostOffer.DiscardUnknown(m)
}

var xxx_messageInfo_HostOffer proto.InternalMessageInfo

func (m *HostOffer) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *HostOffer) GetAgentId() *v1.AgentID {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *HostOffer) GetResources() []*v1.Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *HostOffer) GetAttributes() []*v1.Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *HostOffer) GetId() *peloton.HostOfferID {
	if m != nil {
		return m.Id
	}
	return nil
}

//*
// HostInfo describes physical capacity of the hosts
// with all their attributes defined
type HostInfo struct {
	// name of the host
	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// agentId is mesos defined agentID
	AgentId *v1.AgentID `protobuf:"bytes,2,opt,name=agentId,proto3" json:"agentId,omitempty"`
	// List of mesos resources for the host
	Resources []*v1.Resource `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
	// List of attributes defined for that host
	Attributes           []*v1.Attribute `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *HostInfo) Reset()         { *m = HostInfo{} }
func (m *HostInfo) String() string { return proto.CompactTextString(m) }
func (*HostInfo) ProtoMessage()    {}
func (*HostInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{1}
}

func (m *HostInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostInfo.Unmarshal(m, b)
}
func (m *HostInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostInfo.Marshal(b, m, deterministic)
}
func (m *HostInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostInfo.Merge(m, src)
}
func (m *HostInfo) XXX_Size() int {
	return xxx_messageInfo_HostInfo.Size(m)
}
func (m *HostInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HostInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HostInfo proto.InternalMessageInfo

func (m *HostInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *HostInfo) GetAgentId() *v1.AgentID {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *HostInfo) GetResources() []*v1.Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *HostInfo) GetAttributes() []*v1.Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

//*
// Reservation is the messege between placement engine
// and host manager where placement engine asks
// hostmanager to reserve one host from certain hosts
// In the return host manager reserves the host and once
// resources are fulfilled , it fills the messege with
// valid offers
type Reservation struct {
	// List of hosts which needs to be reserved
	Hosts []*HostInfo `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// resmgr task for which we need to reserve
	Task                 *resmgr.Task `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Reservation) Reset()         { *m = Reservation{} }
func (m *Reservation) String() string { return proto.CompactTextString(m) }
func (*Reservation) ProtoMessage()    {}
func (*Reservation) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{2}
}

func (m *Reservation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reservation.Unmarshal(m, b)
}
func (m *Reservation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reservation.Marshal(b, m, deterministic)
}
func (m *Reservation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reservation.Merge(m, src)
}
func (m *Reservation) XXX_Size() int {
	return xxx_messageInfo_Reservation.Size(m)
}
func (m *Reservation) XXX_DiscardUnknown() {
	xxx_messageInfo_Reservation.DiscardUnknown(m)
}

var xxx_messageInfo_Reservation proto.InternalMessageInfo

func (m *Reservation) GetHosts() []*HostInfo {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *Reservation) GetTask() *resmgr.Task {
	if m != nil {
		return m.Task
	}
	return nil
}

//*
// CompleteReservation is the messege between placement engine
// and host manager host manager.
// hostmanager will reserve one host from and once reservation
// is fulfilled it will send the completed reservation to
// placement engine
type CompletedReservation struct {
	// List of hosts which needs to be reserved
	Host *HostInfo `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// resmgr task for which we need to reserve
	Task *resmgr.Task `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	// an offer which needs to be filled
	// once reservation is fulfilled
	HostOffer            *HostOffer `protobuf:"bytes,3,opt,name=hostOffer,proto3" json:"hostOffer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CompletedReservation) Reset()         { *m = CompletedReservation{} }
func (m *CompletedReservation) String() string { return proto.CompactTextString(m) }
func (*CompletedReservation) ProtoMessage()    {}
func (*CompletedReservation) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{3}
}

func (m *CompletedReservation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompletedReservation.Unmarshal(m, b)
}
func (m *CompletedReservation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompletedReservation.Marshal(b, m, deterministic)
}
func (m *CompletedReservation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompletedReservation.Merge(m, src)
}
func (m *CompletedReservation) XXX_Size() int {
	return xxx_messageInfo_CompletedReservation.Size(m)
}
func (m *CompletedReservation) XXX_DiscardUnknown() {
	xxx_messageInfo_CompletedReservation.DiscardUnknown(m)
}

var xxx_messageInfo_CompletedReservation proto.InternalMessageInfo

func (m *CompletedReservation) GetHost() *HostInfo {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *CompletedReservation) GetTask() *resmgr.Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *CompletedReservation) GetHostOffer() *HostOffer {
	if m != nil {
		return m.HostOffer
	}
	return nil
}

//*
//  LaunchableTask describes the task to be launched by host manager including Mesos
//  task id and task config.
type LaunchableTask struct {
	TaskId *v1.TaskID       `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Config *task.TaskConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// Dynamic ports reserved on the host while this instance is running. The key
	// is port name, value is port number.
	Ports map[string]uint32 `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Persistent volume used to launch task.
	Volume *Volume `protobuf:"bytes,4,opt,name=volume,proto3" json:"volume,omitempty"`
	// Peloton task id of the task to be launched
	Id                   *peloton.TaskID `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LaunchableTask) Reset()         { *m = LaunchableTask{} }
func (m *LaunchableTask) String() string { return proto.CompactTextString(m) }
func (*LaunchableTask) ProtoMessage()    {}
func (*LaunchableTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{4}
}

func (m *LaunchableTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LaunchableTask.Unmarshal(m, b)
}
func (m *LaunchableTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LaunchableTask.Marshal(b, m, deterministic)
}
func (m *LaunchableTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaunchableTask.Merge(m, src)
}
func (m *LaunchableTask) XXX_Size() int {
	return xxx_messageInfo_LaunchableTask.Size(m)
}
func (m *LaunchableTask) XXX_DiscardUnknown() {
	xxx_messageInfo_LaunchableTask.DiscardUnknown(m)
}

var xxx_messageInfo_LaunchableTask proto.InternalMessageInfo

func (m *LaunchableTask) GetTaskId() *v1.TaskID {
	if m != nil {
		return m.TaskId
	}
	return nil
}

func (m *LaunchableTask) GetConfig() *task.TaskConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *LaunchableTask) GetPorts() map[string]uint32 {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *LaunchableTask) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

func (m *LaunchableTask) GetId() *peloton.TaskID {
	if m != nil {
		return m.Id
	}
	return nil
}

//*
//  ExecutorOnAgent describes the executor to be shutdown by host manager including Mesos
//  agent id and executor id.
type ExecutorOnAgent struct {
	ExecutorId           *v1.ExecutorID `protobuf:"bytes,1,opt,name=executorId,proto3" json:"executorId,omitempty"`
	AgentId              *v1.AgentID    `protobuf:"bytes,2,opt,name=agentId,proto3" json:"agentId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ExecutorOnAgent) Reset()         { *m = ExecutorOnAgent{} }
func (m *ExecutorOnAgent) String() string { return proto.CompactTextString(m) }
func (*ExecutorOnAgent) ProtoMessage()    {}
func (*ExecutorOnAgent) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{5}
}

func (m *ExecutorOnAgent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutorOnAgent.Unmarshal(m, b)
}
func (m *ExecutorOnAgent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutorOnAgent.Marshal(b, m, deterministic)
}
func (m *ExecutorOnAgent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutorOnAgent.Merge(m, src)
}
func (m *ExecutorOnAgent) XXX_Size() int {
	return xxx_messageInfo_ExecutorOnAgent.Size(m)
}
func (m *ExecutorOnAgent) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutorOnAgent.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutorOnAgent proto.InternalMessageInfo

func (m *ExecutorOnAgent) GetExecutorId() *v1.ExecutorID {
	if m != nil {
		return m.ExecutorId
	}
	return nil
}

func (m *ExecutorOnAgent) GetAgentId() *v1.AgentID {
	if m != nil {
		return m.AgentId
	}
	return nil
}

//* QuantityControl includes input from placement engine to control how many
// host offers need to be returned.
type QuantityControl struct {
	// Optinoal maximum number of hosts to return. Default zero value is no-op.
	MaxHosts             uint32   `protobuf:"varint,1,opt,name=maxHosts,proto3" json:"maxHosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuantityControl) Reset()         { *m = QuantityControl{} }
func (m *QuantityControl) String() string { return proto.CompactTextString(m) }
func (*QuantityControl) ProtoMessage()    {}
func (*QuantityControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{6}
}

func (m *QuantityControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuantityControl.Unmarshal(m, b)
}
func (m *QuantityControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuantityControl.Marshal(b, m, deterministic)
}
func (m *QuantityControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuantityControl.Merge(m, src)
}
func (m *QuantityControl) XXX_Size() int {
	return xxx_messageInfo_QuantityControl.Size(m)
}
func (m *QuantityControl) XXX_DiscardUnknown() {
	xxx_messageInfo_QuantityControl.DiscardUnknown(m)
}

var xxx_messageInfo_QuantityControl proto.InternalMessageInfo

func (m *QuantityControl) GetMaxHosts() uint32 {
	if m != nil {
		return m.MaxHosts
	}
	return 0
}

//* FilterHint includes hint provided to host manager to decide
//  which hosts to return. The hint is provided as an optimization
//  and host manager can ignore them if hint cannot be satisfied.
type FilterHint struct {
	HostHint []*FilterHint_Host `protobuf:"bytes,1,rep,name=hostHint,proto3" json:"hostHint,omitempty"`
	// Hint for ranking hosts
	RankHint             FilterHint_Ranking `protobuf:"varint,2,opt,name=rankHint,proto3,enum=peloton.private.hostmgr.hostsvc.FilterHint_Ranking" json:"rankHint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FilterHint) Reset()         { *m = FilterHint{} }
func (m *FilterHint) String() string { return proto.CompactTextString(m) }
func (*FilterHint) ProtoMessage()    {}
func (*FilterHint) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{7}
}

func (m *FilterHint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterHint.Unmarshal(m, b)
}
func (m *FilterHint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterHint.Marshal(b, m, deterministic)
}
func (m *FilterHint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterHint.Merge(m, src)
}
func (m *FilterHint) XXX_Size() int {
	return xxx_messageInfo_FilterHint.Size(m)
}
func (m *FilterHint) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterHint.DiscardUnknown(m)
}

var xxx_messageInfo_FilterHint proto.InternalMessageInfo

func (m *FilterHint) GetHostHint() []*FilterHint_Host {
	if m != nil {
		return m.HostHint
	}
	return nil
}

func (m *FilterHint) GetRankHint() FilterHint_Ranking {
	if m != nil {
		return m.RankHint
	}
	return FilterHint_FILTER_HINT_RANKING_INVALID
}

// Hint for which host to return
type FilterHint_Host struct {
	// return the host if it satisfies constraints
	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// indicates for which task the host is for
	TaskID               *peloton.TaskID `protobuf:"bytes,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FilterHint_Host) Reset()         { *m = FilterHint_Host{} }
func (m *FilterHint_Host) String() string { return proto.CompactTextString(m) }
func (*FilterHint_Host) ProtoMessage()    {}
func (*FilterHint_Host) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{7, 0}
}

func (m *FilterHint_Host) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterHint_Host.Unmarshal(m, b)
}
func (m *FilterHint_Host) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterHint_Host.Marshal(b, m, deterministic)
}
func (m *FilterHint_Host) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterHint_Host.Merge(m, src)
}
func (m *FilterHint_Host) XXX_Size() int {
	return xxx_messageInfo_FilterHint_Host.Size(m)
}
func (m *FilterHint_Host) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterHint_Host.DiscardUnknown(m)
}

var xxx_messageInfo_FilterHint_Host proto.InternalMessageInfo

func (m *FilterHint_Host) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *FilterHint_Host) GetTaskID() *peloton.TaskID {
	if m != nil {
		return m.TaskID
	}
	return nil
}

//*
// HostFilter can be used to control whether offers from a given host should
// be returned to placement engine to use.
type HostFilter struct {
	// Resource constraint which must be satisfied.
	ResourceConstraint *ResourceConstraint `protobuf:"bytes,2,opt,name=resourceConstraint,proto3" json:"resourceConstraint,omitempty"`
	// Attribute based affinity/anti-affinity scheduling constraints, which is
	// typically copied from original task scheduling constraint.
	// Only constraint with kind == HOST will be considered.
	SchedulingConstraint *task.Constraint `protobuf:"bytes,3,opt,name=schedulingConstraint,proto3" json:"schedulingConstraint,omitempty"`
	// Extra quantity control message which can be used to influence how many
	// host offers are returned.
	Quantity *QuantityControl `protobuf:"bytes,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Provides hint to about which hosts should return, host manager may
	// ignore the hint
	Hint                 *FilterHint `protobuf:"bytes,5,opt,name=hint,proto3" json:"hint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *HostFilter) Reset()         { *m = HostFilter{} }
func (m *HostFilter) String() string { return proto.CompactTextString(m) }
func (*HostFilter) ProtoMessage()    {}
func (*HostFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{8}
}

func (m *HostFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostFilter.Unmarshal(m, b)
}
func (m *HostFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostFilter.Marshal(b, m, deterministic)
}
func (m *HostFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostFilter.Merge(m, src)
}
func (m *HostFilter) XXX_Size() int {
	return xxx_messageInfo_HostFilter.Size(m)
}
func (m *HostFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_HostFilter.DiscardUnknown(m)
}

var xxx_messageInfo_HostFilter proto.InternalMessageInfo

func (m *HostFilter) GetResourceConstraint() *ResourceConstraint {
	if m != nil {
		return m.ResourceConstraint
	}
	return nil
}

func (m *HostFilter) GetSchedulingConstraint() *task.Constraint {
	if m != nil {
		return m.SchedulingConstraint
	}
	return nil
}

func (m *HostFilter) GetQuantity() *QuantityControl {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *HostFilter) GetHint() *FilterHint {
	if m != nil {
		return m.Hint
	}
	return nil
}

//*
// ResourceConstraint describes a condition for which aggregated resources from
// a host must meet in order for it to be returned in `AcquireHostOffers`.
type ResourceConstraint struct {
	// Minimum amount of resources
	// NOTE: gpu resources are specially protected in the following way:
	//   - if `gpuLimit` is specified, only hosts with enough gpu resources are returned;
	//   - if `gpuLimit` is not specified, only hosts without gpu resource will be returned.
	Minimum *task.ResourceConfig `protobuf:"bytes,1,opt,name=minimum,proto3" json:"minimum,omitempty"`
	// Number of dynamic ports
	NumPorts uint32 `protobuf:"varint,2,opt,name=numPorts,proto3" json:"numPorts,omitempty"`
	// revocable adds a constraint to use revocable/non-revocable resources.
	Revocable            bool     `protobuf:"varint,3,opt,name=revocable,proto3" json:"revocable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceConstraint) Reset()         { *m = ResourceConstraint{} }
func (m *ResourceConstraint) String() string { return proto.CompactTextString(m) }
func (*ResourceConstraint) ProtoMessage()    {}
func (*ResourceConstraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{9}
}

func (m *ResourceConstraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceConstraint.Unmarshal(m, b)
}
func (m *ResourceConstraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceConstraint.Marshal(b, m, deterministic)
}
func (m *ResourceConstraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceConstraint.Merge(m, src)
}
func (m *ResourceConstraint) XXX_Size() int {
	return xxx_messageInfo_ResourceConstraint.Size(m)
}
func (m *ResourceConstraint) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceConstraint.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceConstraint proto.InternalMessageInfo

func (m *ResourceConstraint) GetMinimum() *task.ResourceConfig {
	if m != nil {
		return m.Minimum
	}
	return nil
}

func (m *ResourceConstraint) GetNumPorts() uint32 {
	if m != nil {
		return m.NumPorts
	}
	return 0
}

func (m *ResourceConstraint) GetRevocable() bool {
	if m != nil {
		return m.Revocable
	}
	return false
}

//*
// Error for invalid argument.
type InvalidArgument struct {
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Any LaunchableTask whose content is invalid.
	InvalidTasks         []*LaunchableTask `protobuf:"bytes,2,rep,name=invalidTasks,proto3" json:"invalidTasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InvalidArgument) Reset()         { *m = InvalidArgument{} }
func (m *InvalidArgument) String() string { return proto.CompactTextString(m) }
func (*InvalidArgument) ProtoMessage()    {}
func (*InvalidArgument) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{10}
}

func (m *InvalidArgument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidArgument.Unmarshal(m, b)
}
func (m *InvalidArgument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidArgument.Marshal(b, m, deterministic)
}
func (m *InvalidArgument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidArgument.Merge(m, src)
}
func (m *InvalidArgument) XXX_Size() int {
	return xxx_messageInfo_InvalidArgument.Size(m)
}
func (m *InvalidArgument) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidArgument.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidArgument proto.InternalMessageInfo

func (m *InvalidArgument) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *InvalidArgument) GetInvalidTasks() []*LaunchableTask {
	if m != nil {
		return m.InvalidTasks
	}
	return nil
}

//*
// Error for invalid task ids.
type InvalidTaskIDs struct {
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Any LaunchableTask whose content is invalid.
	TaskIds              []*v1.TaskID `protobuf:"bytes,2,rep,name=taskIds,proto3" json:"taskIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *InvalidTaskIDs) Reset()         { *m = InvalidTaskIDs{} }
func (m *InvalidTaskIDs) String() string { return proto.CompactTextString(m) }
func (*InvalidTaskIDs) ProtoMessage()    {}
func (*InvalidTaskIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{11}
}

func (m *InvalidTaskIDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidTaskIDs.Unmarshal(m, b)
}
func (m *InvalidTaskIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidTaskIDs.Marshal(b, m, deterministic)
}
func (m *InvalidTaskIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidTaskIDs.Merge(m, src)
}
func (m *InvalidTaskIDs) XXX_Size() int {
	return xxx_messageInfo_InvalidTaskIDs.Size(m)
}
func (m *InvalidTaskIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidTaskIDs.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidTaskIDs proto.InternalMessageInfo

func (m *InvalidTaskIDs) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *InvalidTaskIDs) GetTaskIds() []*v1.TaskID {
	if m != nil {
		return m.TaskIds
	}
	return nil
}

//*
// Error for invalid offers.
type InvalidOffers struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvalidOffers) Reset()         { *m = InvalidOffers{} }
func (m *InvalidOffers) String() string { return proto.CompactTextString(m) }
func (*InvalidOffers) ProtoMessage()    {}
func (*InvalidOffers) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{12}
}

func (m *InvalidOffers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidOffers.Unmarshal(m, b)
}
func (m *InvalidOffers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidOffers.Marshal(b, m, deterministic)
}
func (m *InvalidOffers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidOffers.Merge(m, src)
}
func (m *InvalidOffers) XXX_Size() int {
	return xxx_messageInfo_InvalidOffers.Size(m)
}
func (m *InvalidOffers) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidOffers.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidOffers proto.InternalMessageInfo

func (m *InvalidOffers) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//*
// Error for invalid shutdown executors.
type InvalidExecutors struct {
	Message              string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Executors            []*ExecutorOnAgent `protobuf:"bytes,2,rep,name=executors,proto3" json:"executors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *InvalidExecutors) Reset()         { *m = InvalidExecutors{} }
func (m *InvalidExecutors) String() string { return proto.CompactTextString(m) }
func (*InvalidExecutors) ProtoMessage()    {}
func (*InvalidExecutors) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{13}
}

func (m *InvalidExecutors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidExecutors.Unmarshal(m, b)
}
func (m *InvalidExecutors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidExecutors.Marshal(b, m, deterministic)
}
func (m *InvalidExecutors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidExecutors.Merge(m, src)
}
func (m *InvalidExecutors) XXX_Size() int {
	return xxx_messageInfo_InvalidExecutors.Size(m)
}
func (m *InvalidExecutors) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidExecutors.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidExecutors proto.InternalMessageInfo

func (m *InvalidExecutors) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *InvalidExecutors) GetExecutors() []*ExecutorOnAgent {
	if m != nil {
		return m.Executors
	}
	return nil
}

//*
// Error for failed shutdown executors.
type ShutdownFailure struct {
	Message              string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Executors            []*ExecutorOnAgent `protobuf:"bytes,2,rep,name=executors,proto3" json:"executors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ShutdownFailure) Reset()         { *m = ShutdownFailure{} }
func (m *ShutdownFailure) String() string { return proto.CompactTextString(m) }
func (*ShutdownFailure) ProtoMessage()    {}
func (*ShutdownFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{14}
}

func (m *ShutdownFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownFailure.Unmarshal(m, b)
}
func (m *ShutdownFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownFailure.Marshal(b, m, deterministic)
}
func (m *ShutdownFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownFailure.Merge(m, src)
}
func (m *ShutdownFailure) XXX_Size() int {
	return xxx_messageInfo_ShutdownFailure.Size(m)
}
func (m *ShutdownFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownFailure.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownFailure proto.InternalMessageInfo

func (m *ShutdownFailure) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ShutdownFailure) GetExecutors() []*ExecutorOnAgent {
	if m != nil {
		return m.Executors
	}
	return nil
}

//*
// Error when actually tasks launch failed.
type LaunchFailure struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LaunchFailure) Reset()         { *m = LaunchFailure{} }
func (m *LaunchFailure) String() string { return proto.CompactTextString(m) }
func (*LaunchFailure) ProtoMessage()    {}
func (*LaunchFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{15}
}

func (m *LaunchFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LaunchFailure.Unmarshal(m, b)
}
func (m *LaunchFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LaunchFailure.Marshal(b, m, deterministic)
}
func (m *LaunchFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaunchFailure.Merge(m, src)
}
func (m *LaunchFailure) XXX_Size() int {
	return xxx_messageInfo_LaunchFailure.Size(m)
}
func (m *LaunchFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_LaunchFailure.DiscardUnknown(m)
}

var xxx_messageInfo_LaunchFailure proto.InternalMessageInfo

func (m *LaunchFailure) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//*
// Error when actually tasks kill failed.
type KillFailure struct {
	Message              string       `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	TaskIds              []*v1.TaskID `protobuf:"bytes,2,rep,name=taskIds,proto3" json:"taskIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *KillFailure) Reset()         { *m = KillFailure{} }
func (m *KillFailure) String() string { return proto.CompactTextString(m) }
func (*KillFailure) ProtoMessage()    {}
func (*KillFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{16}
}

func (m *KillFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillFailure.Unmarshal(m, b)
}
func (m *KillFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillFailure.Marshal(b, m, deterministic)
}
func (m *KillFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillFailure.Merge(m, src)
}
func (m *KillFailure) XXX_Size() int {
	return xxx_messageInfo_KillFailure.Size(m)
}
func (m *KillFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_KillFailure.DiscardUnknown(m)
}

var xxx_messageInfo_KillFailure proto.InternalMessageInfo

func (m *KillFailure) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *KillFailure) GetTaskIds() []*v1.TaskID {
	if m != nil {
		return m.TaskIds
	}
	return nil
}

//*
// Error for invalid filter.
type InvalidHostFilter struct {
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Invalid filter from input.
	Invalid              *HostFilter `protobuf:"bytes,2,opt,name=invalid,proto3" json:"invalid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *InvalidHostFilter) Reset()         { *m = InvalidHostFilter{} }
func (m *InvalidHostFilter) String() string { return proto.CompactTextString(m) }
func (*InvalidHostFilter) ProtoMessage()    {}
func (*InvalidHostFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{17}
}

func (m *InvalidHostFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidHostFilter.Unmarshal(m, b)
}
func (m *InvalidHostFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidHostFilter.Marshal(b, m, deterministic)
}
func (m *InvalidHostFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidHostFilter.Merge(m, src)
}
func (m *InvalidHostFilter) XXX_Size() int {
	return xxx_messageInfo_InvalidHostFilter.Size(m)
}
func (m *InvalidHostFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidHostFilter.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidHostFilter proto.InternalMessageInfo

func (m *InvalidHostFilter) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *InvalidHostFilter) GetInvalid() *HostFilter {
	if m != nil {
		return m.Invalid
	}
	return nil
}

//*
// Error when AcquireHostOffers failed.
type AcquireHostOffersFailure struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcquireHostOffersFailure) Reset()         { *m = AcquireHostOffersFailure{} }
func (m *AcquireHostOffersFailure) String() string { return proto.CompactTextString(m) }
func (*AcquireHostOffersFailure) ProtoMessage()    {}
func (*AcquireHostOffersFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{18}
}

func (m *AcquireHostOffersFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireHostOffersFailure.Unmarshal(m, b)
}
func (m *AcquireHostOffersFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireHostOffersFailure.Marshal(b, m, deterministic)
}
func (m *AcquireHostOffersFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireHostOffersFailure.Merge(m, src)
}
func (m *AcquireHostOffersFailure) XXX_Size() int {
	return xxx_messageInfo_AcquireHostOffersFailure.Size(m)
}
func (m *AcquireHostOffersFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireHostOffersFailure.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireHostOffersFailure proto.InternalMessageInfo

func (m *AcquireHostOffersFailure) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//*
// Error when GetHosts failed.
type GetHostsFailure struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHostsFailure) Reset()         { *m = GetHostsFailure{} }
func (m *GetHostsFailure) String() string { return proto.CompactTextString(m) }
func (*GetHostsFailure) ProtoMessage()    {}
func (*GetHostsFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{19}
}

func (m *GetHostsFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostsFailure.Unmarshal(m, b)
}
func (m *GetHostsFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostsFailure.Marshal(b, m, deterministic)
}
func (m *GetHostsFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostsFailure.Merge(m, src)
}
func (m *GetHostsFailure) XXX_Size() int {
	return xxx_messageInfo_GetHostsFailure.Size(m)
}
func (m *GetHostsFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostsFailure.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostsFailure proto.InternalMessageInfo

func (m *GetHostsFailure) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//*
// Error when cluster is Unavailable
type ClusterUnavailable struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterUnavailable) Reset()         { *m = ClusterUnavailable{} }
func (m *ClusterUnavailable) String() string { return proto.CompactTextString(m) }
func (*ClusterUnavailable) ProtoMessage()    {}
func (*ClusterUnavailable) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{20}
}

func (m *ClusterUnavailable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterUnavailable.Unmarshal(m, b)
}
func (m *ClusterUnavailable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterUnavailable.Marshal(b, m, deterministic)
}
func (m *ClusterUnavailable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterUnavailable.Merge(m, src)
}
func (m *ClusterUnavailable) XXX_Size() int {
	return xxx_messageInfo_ClusterUnavailable.Size(m)
}
func (m *ClusterUnavailable) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterUnavailable.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterUnavailable proto.InternalMessageInfo

func (m *ClusterUnavailable) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//*
// Error for offer operations call to mesos failed.
type OperationsFailure struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperationsFailure) Reset()         { *m = OperationsFailure{} }
func (m *OperationsFailure) String() string { return proto.CompactTextString(m) }
func (*OperationsFailure) ProtoMessage()    {}
func (*OperationsFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{21}
}

func (m *OperationsFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationsFailure.Unmarshal(m, b)
}
func (m *OperationsFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationsFailure.Marshal(b, m, deterministic)
}
func (m *OperationsFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationsFailure.Merge(m, src)
}
func (m *OperationsFailure) XXX_Size() int {
	return xxx_messageInfo_OperationsFailure.Size(m)
}
func (m *OperationsFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationsFailure.DiscardUnknown(m)
}

var xxx_messageInfo_OperationsFailure proto.InternalMessageInfo

func (m *OperationsFailure) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//*
// Request for mesos master hostname and port.
// NOTE: required for protobuf RPC call.
type MesosMasterHostPortRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MesosMasterHostPortRequest) Reset()         { *m = MesosMasterHostPortRequest{} }
func (m *MesosMasterHostPortRequest) String() string { return proto.CompactTextString(m) }
func (*MesosMasterHostPortRequest) ProtoMessage()    {}
func (*MesosMasterHostPortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{22}
}

func (m *MesosMasterHostPortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MesosMasterHostPortRequest.Unmarshal(m, b)
}
func (m *MesosMasterHostPortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MesosMasterHostPortRequest.Marshal(b, m, deterministic)
}
func (m *MesosMasterHostPortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MesosMasterHostPortRequest.Merge(m, src)
}
func (m *MesosMasterHostPortRequest) XXX_Size() int {
	return xxx_messageInfo_MesosMasterHostPortRequest.Size(m)
}
func (m *MesosMasterHostPortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MesosMasterHostPortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MesosMasterHostPortRequest proto.InternalMessageInfo

//*
// Response for leader mesos master hostname and port.
type MesosMasterHostPortResponse struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MesosMasterHostPortResponse) Reset()         { *m = MesosMasterHostPortResponse{} }
func (m *MesosMasterHostPortResponse) String() string { return proto.CompactTextString(m) }
func (*MesosMasterHostPortResponse) ProtoMessage()    {}
func (*MesosMasterHostPortResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{23}
}

func (m *MesosMasterHostPortResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MesosMasterHostPortResponse.Unmarshal(m, b)
}
func (m *MesosMasterHostPortResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MesosMasterHostPortResponse.Marshal(b, m, deterministic)
}
func (m *MesosMasterHostPortResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MesosMasterHostPortResponse.Merge(m, src)
}
func (m *MesosMasterHostPortResponse) XXX_Size() int {
	return xxx_messageInfo_MesosMasterHostPortResponse.Size(m)
}
func (m *MesosMasterHostPortResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MesosMasterHostPortResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MesosMasterHostPortResponse proto.InternalMessageInfo

func (m *MesosMasterHostPortResponse) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *MesosMasterHostPortResponse) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

//*
// Request to get all outstanding offers from offer pool.
type GetOutstandingOffersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOutstandingOffersRequest) Reset()         { *m = GetOutstandingOffersRequest{} }
func (m *GetOutstandingOffersRequest) String() string { return proto.CompactTextString(m) }
func (*GetOutstandingOffersRequest) ProtoMessage()    {}
func (*GetOutstandingOffersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{24}
}

func (m *GetOutstandingOffersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOutstandingOffersRequest.Unmarshal(m, b)
}
func (m *GetOutstandingOffersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOutstandingOffersRequest.Marshal(b, m, deterministic)
}
func (m *GetOutstandingOffersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOutstandingOffersRequest.Merge(m, src)
}
func (m *GetOutstandingOffersRequest) XXX_Size() int {
	return xxx_messageInfo_GetOutstandingOffersRequest.Size(m)
}
func (m *GetOutstandingOffersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOutstandingOffersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOutstandingOffersRequest proto.InternalMessageInfo

//*
// Responds all outstanding offers of offer pool.
type GetOutstandingOffersResponse struct {
	Offers               []*v1.Offer                         `protobuf:"bytes,1,rep,name=offers,proto3" json:"offers,omitempty"`
	Error                *GetOutstandingOffersResponse_Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *GetOutstandingOffersResponse) Reset()         { *m = GetOutstandingOffersResponse{} }
func (m *GetOutstandingOffersResponse) String() string { return proto.CompactTextString(m) }
func (*GetOutstandingOffersResponse) ProtoMessage()    {}
func (*GetOutstandingOffersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{25}
}

func (m *GetOutstandingOffersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOutstandingOffersResponse.Unmarshal(m, b)
}
func (m *GetOutstandingOffersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOutstandingOffersResponse.Marshal(b, m, deterministic)
}
func (m *GetOutstandingOffersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOutstandingOffersResponse.Merge(m, src)
}
func (m *GetOutstandingOffersResponse) XXX_Size() int {
	return xxx_messageInfo_GetOutstandingOffersResponse.Size(m)
}
func (m *GetOutstandingOffersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOutstandingOffersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOutstandingOffersResponse proto.InternalMessageInfo

func (m *GetOutstandingOffersResponse) GetOffers() []*v1.Offer {
	if m != nil {
		return m.Offers
	}
	return nil
}

func (m *GetOutstandingOffersResponse) GetError() *GetOutstandingOffersResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetOutstandingOffersResponse_Error struct {
	NoOffers             *NoOffersError `protobuf:"bytes,1,opt,name=noOffers,proto3" json:"noOffers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetOutstandingOffersResponse_Error) Reset()         { *m = GetOutstandingOffersResponse_Error{} }
func (m *GetOutstandingOffersResponse_Error) String() string { return proto.CompactTextString(m) }
func (*GetOutstandingOffersResponse_Error) ProtoMessage()    {}
func (*GetOutstandingOffersResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{25, 0}
}

func (m *GetOutstandingOffersResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOutstandingOffersResponse_Error.Unmarshal(m, b)
}
func (m *GetOutstandingOffersResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOutstandingOffersResponse_Error.Marshal(b, m, deterministic)
}
func (m *GetOutstandingOffersResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOutstandingOffersResponse_Error.Merge(m, src)
}
func (m *GetOutstandingOffersResponse_Error) XXX_Size() int {
	return xxx_messageInfo_GetOutstandingOffersResponse_Error.Size(m)
}
func (m *GetOutstandingOffersResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOutstandingOffersResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_GetOutstandingOffersResponse_Error proto.InternalMessageInfo

func (m *GetOutstandingOffersResponse_Error) GetNoOffers() *NoOffersError {
	if m != nil {
		return m.NoOffers
	}
	return nil
}

//*
// Request to get all the hosts with available resources matching the query,
// used in cli.
type GetHostsByQueryRequest struct {
	// Resource limit, currently only cpu and gpu count are used.
	// The field is ignore if the value is 0.
	Resource *task.ResourceConfig `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// Set to true if wants to return hosts with resources less than provided
	// in the "resource" field, otherwise returns hosts with resources
	// greater than and equal to the resources provided.
	CmpLess bool `protobuf:"varint,2,opt,name=cmpLess,proto3" json:"cmpLess,omitempty"`
	// Match the agent hostnames if provided.
	Hostnames            []string `protobuf:"bytes,3,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHostsByQueryRequest) Reset()         { *m = GetHostsByQueryRequest{} }
func (m *GetHostsByQueryRequest) String() string { return proto.CompactTextString(m) }
func (*GetHostsByQueryRequest) ProtoMessage()    {}
func (*GetHostsByQueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{26}
}

func (m *GetHostsByQueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostsByQueryRequest.Unmarshal(m, b)
}
func (m *GetHostsByQueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostsByQueryRequest.Marshal(b, m, deterministic)
}
func (m *GetHostsByQueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostsByQueryRequest.Merge(m, src)
}
func (m *GetHostsByQueryRequest) XXX_Size() int {
	return xxx_messageInfo_GetHostsByQueryRequest.Size(m)
}
func (m *GetHostsByQueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostsByQueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostsByQueryRequest proto.InternalMessageInfo

func (m *GetHostsByQueryRequest) GetResource() *task.ResourceConfig {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *GetHostsByQueryRequest) GetCmpLess() bool {
	if m != nil {
		return m.CmpLess
	}
	return false
}

func (m *GetHostsByQueryRequest) GetHostnames() []string {
	if m != nil {
		return m.Hostnames
	}
	return nil
}

//*
// Responds all the hosts with available resources matching the query,
// used in cli.
type GetHostsByQueryResponse struct {
	Hosts                []*GetHostsByQueryResponse_Host `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *GetHostsByQueryResponse) Reset()         { *m = GetHostsByQueryResponse{} }
func (m *GetHostsByQueryResponse) String() string { return proto.CompactTextString(m) }
func (*GetHostsByQueryResponse) ProtoMessage()    {}
func (*GetHostsByQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{27}
}

func (m *GetHostsByQueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostsByQueryResponse.Unmarshal(m, b)
}
func (m *GetHostsByQueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostsByQueryResponse.Marshal(b, m, deterministic)
}
func (m *GetHostsByQueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostsByQueryResponse.Merge(m, src)
}
func (m *GetHostsByQueryResponse) XXX_Size() int {
	return xxx_messageInfo_GetHostsByQueryResponse.Size(m)
}
func (m *GetHostsByQueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostsByQueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostsByQueryResponse proto.InternalMessageInfo

func (m *GetHostsByQueryResponse) GetHosts() []*GetHostsByQueryResponse_Host {
	if m != nil {
		return m.Hosts
	}
	return nil
}

// Host information by aggregating a list of Mesos offers
type GetHostsByQueryResponse_Host struct {
	// name of the host
	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// list of mesos resources for the host
	Resources []*v1.Resource `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	// host status - ready, placing, reserved
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// list of tasks the host is held for, if the
	// host is held for in-place update
	HeldTasks            []*peloton.TaskID `protobuf:"bytes,4,rep,name=held_tasks,json=heldTasks,proto3" json:"held_tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetHostsByQueryResponse_Host) Reset()         { *m = GetHostsByQueryResponse_Host{} }
func (m *GetHostsByQueryResponse_Host) String() string { return proto.CompactTextString(m) }
func (*GetHostsByQueryResponse_Host) ProtoMessage()    {}
func (*GetHostsByQueryResponse_Host) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{27, 0}
}

func (m *GetHostsByQueryResponse_Host) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostsByQueryResponse_Host.Unmarshal(m, b)
}
func (m *GetHostsByQueryResponse_Host) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostsByQueryResponse_Host.Marshal(b, m, deterministic)
}
func (m *GetHostsByQueryResponse_Host) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostsByQueryResponse_Host.Merge(m, src)
}
func (m *GetHostsByQueryResponse_Host) XXX_Size() int {
	return xxx_messageInfo_GetHostsByQueryResponse_Host.Size(m)
}
func (m *GetHostsByQueryResponse_Host) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostsByQueryResponse_Host.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostsByQueryResponse_Host proto.InternalMessageInfo

func (m *GetHostsByQueryResponse_Host) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *GetHostsByQueryResponse_Host) GetResources() []*v1.Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *GetHostsByQueryResponse_Host) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GetHostsByQueryResponse_Host) GetHeldTasks() []*peloton.TaskID {
	if m != nil {
		return m.HeldTasks
	}
	return nil
}

//*
// Request object to watch request by client
type WatchEventRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchEventRequest) Reset()         { *m = WatchEventRequest{} }
func (m *WatchEventRequest) String() string { return proto.CompactTextString(m) }
func (*WatchEventRequest) ProtoMessage()    {}
func (*WatchEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{28}
}

func (m *WatchEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchEventRequest.Unmarshal(m, b)
}
func (m *WatchEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchEventRequest.Marshal(b, m, deterministic)
}
func (m *WatchEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchEventRequest.Merge(m, src)
}
func (m *WatchEventRequest) XXX_Size() int {
	return xxx_messageInfo_WatchEventRequest.Size(m)
}
func (m *WatchEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchEventRequest proto.InternalMessageInfo

//*
// Responds to all pending status update events.
type WatchEventResponse struct {
	// Unique identifier for the watch session
	WatchId              string               `protobuf:"bytes,1,opt,name=watch_id,json=watchId,proto3" json:"watch_id,omitempty"`
	Events               []*eventstream.Event `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WatchEventResponse) Reset()         { *m = WatchEventResponse{} }
func (m *WatchEventResponse) String() string { return proto.CompactTextString(m) }
func (*WatchEventResponse) ProtoMessage()    {}
func (*WatchEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{29}
}

func (m *WatchEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchEventResponse.Unmarshal(m, b)
}
func (m *WatchEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchEventResponse.Marshal(b, m, deterministic)
}
func (m *WatchEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchEventResponse.Merge(m, src)
}
func (m *WatchEventResponse) XXX_Size() int {
	return xxx_messageInfo_WatchEventResponse.Size(m)
}
func (m *WatchEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchEventResponse proto.InternalMessageInfo

func (m *WatchEventResponse) GetWatchId() string {
	if m != nil {
		return m.WatchId
	}
	return ""
}

func (m *WatchEventResponse) GetEvents() []*eventstream.Event {
	if m != nil {
		return m.Events
	}
	return nil
}

// CancelRequest is request for method WatchService.Cancel
type CancelWatchRequest struct {
	// ID of the watch session to cancel.
	WatchId              string   `protobuf:"bytes,1,opt,name=watch_id,json=watchId,proto3" json:"watch_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelWatchRequest) Reset()         { *m = CancelWatchRequest{} }
func (m *CancelWatchRequest) String() string { return proto.CompactTextString(m) }
func (*CancelWatchRequest) ProtoMessage()    {}
func (*CancelWatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{30}
}

func (m *CancelWatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelWatchRequest.Unmarshal(m, b)
}
func (m *CancelWatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelWatchRequest.Marshal(b, m, deterministic)
}
func (m *CancelWatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelWatchRequest.Merge(m, src)
}
func (m *CancelWatchRequest) XXX_Size() int {
	return xxx_messageInfo_CancelWatchRequest.Size(m)
}
func (m *CancelWatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelWatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelWatchRequest proto.InternalMessageInfo

func (m *CancelWatchRequest) GetWatchId() string {
	if m != nil {
		return m.WatchId
	}
	return ""
}

// CancelRequest is response for method WatchService.Cancel
// Return errors:
//    NOT_FOUND: Watch ID not found
type CancelWatchResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelWatchResponse) Reset()         { *m = CancelWatchResponse{} }
func (m *CancelWatchResponse) String() string { return proto.CompactTextString(m) }
func (*CancelWatchResponse) ProtoMessage()    {}
func (*CancelWatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{31}
}

func (m *CancelWatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelWatchResponse.Unmarshal(m, b)
}
func (m *CancelWatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelWatchResponse.Marshal(b, m, deterministic)
}
func (m *CancelWatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelWatchResponse.Merge(m, src)
}
func (m *CancelWatchResponse) XXX_Size() int {
	return xxx_messageInfo_CancelWatchResponse.Size(m)
}
func (m *CancelWatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelWatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelWatchResponse proto.InternalMessageInfo

//*
// NoOffersError represents on outstanding offers are present.
type NoOffersError struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoOffersError) Reset()         { *m = NoOffersError{} }
func (m *NoOffersError) String() string { return proto.CompactTextString(m) }
func (*NoOffersError) ProtoMessage()    {}
func (*NoOffersError) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{32}
}

func (m *NoOffersError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoOffersError.Unmarshal(m, b)
}
func (m *NoOffersError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoOffersError.Marshal(b, m, deterministic)
}
func (m *NoOffersError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoOffersError.Merge(m, src)
}
func (m *NoOffersError) XXX_Size() int {
	return xxx_messageInfo_NoOffersError.Size(m)
}
func (m *NoOffersError) XXX_DiscardUnknown() {
	xxx_messageInfo_NoOffersError.DiscardUnknown(m)
}

var xxx_messageInfo_NoOffersError proto.InternalMessageInfo

func (m *NoOffersError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//*
// Volume config used for offer create/launch operation.
type Volume struct {
	// ID of the persistent volume.
	Id *peloton.VolumeID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the relative volume path inside the container.
	ContainerPath string `protobuf:"bytes,2,opt,name=containerPath,proto3" json:"containerPath,omitempty"`
	// Resource needed for the volume.
	Resource             *v1.Resource `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{33}
}

func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (m *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(m, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetId() *peloton.VolumeID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Volume) GetContainerPath() string {
	if m != nil {
		return m.ContainerPath
	}
	return ""
}

func (m *Volume) GetResource() *v1.Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

type OfferOperation struct {
	// Type of the operation.
	Type OfferOperation_Type `protobuf:"varint,1,opt,name=type,proto3,enum=peloton.private.hostmgr.hostsvc.OfferOperation_Type" json:"type,omitempty"`
	// Reservation labels used for operations.
	ReservationLabels    *v1.Labels                `protobuf:"bytes,2,opt,name=reservationLabels,proto3" json:"reservationLabels,omitempty"`
	Reserve              *OfferOperation_Reserve   `protobuf:"bytes,3,opt,name=reserve,proto3" json:"reserve,omitempty"`
	Create               *OfferOperation_Create    `protobuf:"bytes,4,opt,name=create,proto3" json:"create,omitempty"`
	Launch               *OfferOperation_Launch    `protobuf:"bytes,5,opt,name=launch,proto3" json:"launch,omitempty"`
	Destroy              *OfferOperation_Destroy   `protobuf:"bytes,6,opt,name=destroy,proto3" json:"destroy,omitempty"`
	Unreserve            *OfferOperation_Unreserve `protobuf:"bytes,7,opt,name=unreserve,proto3" json:"unreserve,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *OfferOperation) Reset()         { *m = OfferOperation{} }
func (m *OfferOperation) String() string { return proto.CompactTextString(m) }
func (*OfferOperation) ProtoMessage()    {}
func (*OfferOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{34}
}

func (m *OfferOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferOperation.Unmarshal(m, b)
}
func (m *OfferOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferOperation.Marshal(b, m, deterministic)
}
func (m *OfferOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferOperation.Merge(m, src)
}
func (m *OfferOperation) XXX_Size() int {
	return xxx_messageInfo_OfferOperation.Size(m)
}
func (m *OfferOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferOperation.DiscardUnknown(m)
}

var xxx_messageInfo_OfferOperation proto.InternalMessageInfo

func (m *OfferOperation) GetType() OfferOperation_Type {
	if m != nil {
		return m.Type
	}
	return OfferOperation_UNKNOWN
}

func (m *OfferOperation) GetReservationLabels() *v1.Labels {
	if m != nil {
		return m.ReservationLabels
	}
	return nil
}

func (m *OfferOperation) GetReserve() *OfferOperation_Reserve {
	if m != nil {
		return m.Reserve
	}
	return nil
}

func (m *OfferOperation) GetCreate() *OfferOperation_Create {
	if m != nil {
		return m.Create
	}
	return nil
}

func (m *OfferOperation) GetLaunch() *OfferOperation_Launch {
	if m != nil {
		return m.Launch
	}
	return nil
}

func (m *OfferOperation) GetDestroy() *OfferOperation_Destroy {
	if m != nil {
		return m.Destroy
	}
	return nil
}

func (m *OfferOperation) GetUnreserve() *OfferOperation_Unreserve {
	if m != nil {
		return m.Unreserve
	}
	return nil
}

type OfferOperation_Reserve struct {
	// Mesos resources to be reserved.
	Resources            []*v1.Resource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *OfferOperation_Reserve) Reset()         { *m = OfferOperation_Reserve{} }
func (m *OfferOperation_Reserve) String() string { return proto.CompactTextString(m) }
func (*OfferOperation_Reserve) ProtoMessage()    {}
func (*OfferOperation_Reserve) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{34, 0}
}

func (m *OfferOperation_Reserve) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferOperation_Reserve.Unmarshal(m, b)
}
func (m *OfferOperation_Reserve) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferOperation_Reserve.Marshal(b, m, deterministic)
}
func (m *OfferOperation_Reserve) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferOperation_Reserve.Merge(m, src)
}
func (m *OfferOperation_Reserve) XXX_Size() int {
	return xxx_messageInfo_OfferOperation_Reserve.Size(m)
}
func (m *OfferOperation_Reserve) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferOperation_Reserve.DiscardUnknown(m)
}

var xxx_messageInfo_OfferOperation_Reserve proto.InternalMessageInfo

func (m *OfferOperation_Reserve) GetResources() []*v1.Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

type OfferOperation_Create struct {
	// Persistent volume to be created.
	Volume               *Volume  `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfferOperation_Create) Reset()         { *m = OfferOperation_Create{} }
func (m *OfferOperation_Create) String() string { return proto.CompactTextString(m) }
func (*OfferOperation_Create) ProtoMessage()    {}
func (*OfferOperation_Create) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{34, 1}
}

func (m *OfferOperation_Create) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferOperation_Create.Unmarshal(m, b)
}
func (m *OfferOperation_Create) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferOperation_Create.Marshal(b, m, deterministic)
}
func (m *OfferOperation_Create) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferOperation_Create.Merge(m, src)
}
func (m *OfferOperation_Create) XXX_Size() int {
	return xxx_messageInfo_OfferOperation_Create.Size(m)
}
func (m *OfferOperation_Create) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferOperation_Create.DiscardUnknown(m)
}

var xxx_messageInfo_OfferOperation_Create proto.InternalMessageInfo

func (m *OfferOperation_Create) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

type OfferOperation_Launch struct {
	// List of tasks to be launched.
	Tasks                []*LaunchableTask `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OfferOperation_Launch) Reset()         { *m = OfferOperation_Launch{} }
func (m *OfferOperation_Launch) String() string { return proto.CompactTextString(m) }
func (*OfferOperation_Launch) ProtoMessage()    {}
func (*OfferOperation_Launch) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{34, 2}
}

func (m *OfferOperation_Launch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferOperation_Launch.Unmarshal(m, b)
}
func (m *OfferOperation_Launch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferOperation_Launch.Marshal(b, m, deterministic)
}
func (m *OfferOperation_Launch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferOperation_Launch.Merge(m, src)
}
func (m *OfferOperation_Launch) XXX_Size() int {
	return xxx_messageInfo_OfferOperation_Launch.Size(m)
}
func (m *OfferOperation_Launch) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferOperation_Launch.DiscardUnknown(m)
}

var xxx_messageInfo_OfferOperation_Launch proto.InternalMessageInfo

func (m *OfferOperation_Launch) GetTasks() []*LaunchableTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type OfferOperation_Destroy struct {
	// Persistent volume ID to be destroyed.
	VolumeID             string   `protobuf:"bytes,1,opt,name=volumeID,proto3" json:"volumeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfferOperation_Destroy) Reset()         { *m = OfferOperation_Destroy{} }
func (m *OfferOperation_Destroy) String() string { return proto.CompactTextString(m) }
func (*OfferOperation_Destroy) ProtoMessage()    {}
func (*OfferOperation_Destroy) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{34, 3}
}

func (m *OfferOperation_Destroy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferOperation_Destroy.Unmarshal(m, b)
}
func (m *OfferOperation_Destroy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferOperation_Destroy.Marshal(b, m, deterministic)
}
func (m *OfferOperation_Destroy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferOperation_Destroy.Merge(m, src)
}
func (m *OfferOperation_Destroy) XXX_Size() int {
	return xxx_messageInfo_OfferOperation_Destroy.Size(m)
}
func (m *OfferOperation_Destroy) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferOperation_Destroy.DiscardUnknown(m)
}

var xxx_messageInfo_OfferOperation_Destroy proto.InternalMessageInfo

func (m *OfferOperation_Destroy) GetVolumeID() string {
	if m != nil {
		return m.VolumeID
	}
	return ""
}

type OfferOperation_Unreserve struct {
	// The reservation label string to be unreserved.
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfferOperation_Unreserve) Reset()         { *m = OfferOperation_Unreserve{} }
func (m *OfferOperation_Unreserve) String() string { return proto.CompactTextString(m) }
func (*OfferOperation_Unreserve) ProtoMessage()    {}
func (*OfferOperation_Unreserve) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{34, 4}
}

func (m *OfferOperation_Unreserve) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferOperation_Unreserve.Unmarshal(m, b)
}
func (m *OfferOperation_Unreserve) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferOperation_Unreserve.Marshal(b, m, deterministic)
}
func (m *OfferOperation_Unreserve) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferOperation_Unreserve.Merge(m, src)
}
func (m *OfferOperation_Unreserve) XXX_Size() int {
	return xxx_messageInfo_OfferOperation_Unreserve.Size(m)
}
func (m *OfferOperation_Unreserve) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferOperation_Unreserve.DiscardUnknown(m)
}

var xxx_messageInfo_OfferOperation_Unreserve proto.InternalMessageInfo

func (m *OfferOperation_Unreserve) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type OfferOperationsRequest struct {
	// Repeated Operations will be performed in sequential manner.
	Operations []*OfferOperation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// The host name of the host where the operations will be performed
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// The host offer id of the host where the operations will be performed
	Id                   *peloton.HostOfferID `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OfferOperationsRequest) Reset()         { *m = OfferOperationsRequest{} }
func (m *OfferOperationsRequest) String() string { return proto.CompactTextString(m) }
func (*OfferOperationsRequest) ProtoMessage()    {}
func (*OfferOperationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{35}
}

func (m *OfferOperationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferOperationsRequest.Unmarshal(m, b)
}
func (m *OfferOperationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferOperationsRequest.Marshal(b, m, deterministic)
}
func (m *OfferOperationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferOperationsRequest.Merge(m, src)
}
func (m *OfferOperationsRequest) XXX_Size() int {
	return xxx_messageInfo_OfferOperationsRequest.Size(m)
}
func (m *OfferOperationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferOperationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OfferOperationsRequest proto.InternalMessageInfo

func (m *OfferOperationsRequest) GetOperations() []*OfferOperation {
	if m != nil {
		return m.Operations
	}
	return nil
}

func (m *OfferOperationsRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *OfferOperationsRequest) GetId() *peloton.HostOfferID {
	if m != nil {
		return m.Id
	}
	return nil
}

type OfferOperationsResponse struct {
	Error                *OfferOperationsResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *OfferOperationsResponse) Reset()         { *m = OfferOperationsResponse{} }
func (m *OfferOperationsResponse) String() string { return proto.CompactTextString(m) }
func (*OfferOperationsResponse) ProtoMessage()    {}
func (*OfferOperationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{36}
}

func (m *OfferOperationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferOperationsResponse.Unmarshal(m, b)
}
func (m *OfferOperationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferOperationsResponse.Marshal(b, m, deterministic)
}
func (m *OfferOperationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferOperationsResponse.Merge(m, src)
}
func (m *OfferOperationsResponse) XXX_Size() int {
	return xxx_messageInfo_OfferOperationsResponse.Size(m)
}
func (m *OfferOperationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferOperationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OfferOperationsResponse proto.InternalMessageInfo

func (m *OfferOperationsResponse) GetError() *OfferOperationsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type OfferOperationsResponse_Error struct {
	Failure              *OperationsFailure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	InvalidArgument      *InvalidArgument   `protobuf:"bytes,2,opt,name=invalidArgument,proto3" json:"invalidArgument,omitempty"`
	InvalidOffers        *InvalidOffers     `protobuf:"bytes,3,opt,name=invalidOffers,proto3" json:"invalidOffers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OfferOperationsResponse_Error) Reset()         { *m = OfferOperationsResponse_Error{} }
func (m *OfferOperationsResponse_Error) String() string { return proto.CompactTextString(m) }
func (*OfferOperationsResponse_Error) ProtoMessage()    {}
func (*OfferOperationsResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{36, 0}
}

func (m *OfferOperationsResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferOperationsResponse_Error.Unmarshal(m, b)
}
func (m *OfferOperationsResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferOperationsResponse_Error.Marshal(b, m, deterministic)
}
func (m *OfferOperationsResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferOperationsResponse_Error.Merge(m, src)
}
func (m *OfferOperationsResponse_Error) XXX_Size() int {
	return xxx_messageInfo_OfferOperationsResponse_Error.Size(m)
}
func (m *OfferOperationsResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferOperationsResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_OfferOperationsResponse_Error proto.InternalMessageInfo

func (m *OfferOperationsResponse_Error) GetFailure() *OperationsFailure {
	if m != nil {
		return m.Failure
	}
	return nil
}

func (m *OfferOperationsResponse_Error) GetInvalidArgument() *InvalidArgument {
	if m != nil {
		return m.InvalidArgument
	}
	return nil
}

func (m *OfferOperationsResponse_Error) GetInvalidOffers() *InvalidOffers {
	if m != nil {
		return m.InvalidOffers
	}
	return nil
}

type AcquireHostOffersRequest struct {
	Filter               *HostFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AcquireHostOffersRequest) Reset()         { *m = AcquireHostOffersRequest{} }
func (m *AcquireHostOffersRequest) String() string { return proto.CompactTextString(m) }
func (*AcquireHostOffersRequest) ProtoMessage()    {}
func (*AcquireHostOffersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{37}
}

func (m *AcquireHostOffersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireHostOffersRequest.Unmarshal(m, b)
}
func (m *AcquireHostOffersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireHostOffersRequest.Marshal(b, m, deterministic)
}
func (m *AcquireHostOffersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireHostOffersRequest.Merge(m, src)
}
func (m *AcquireHostOffersRequest) XXX_Size() int {
	return xxx_messageInfo_AcquireHostOffersRequest.Size(m)
}
func (m *AcquireHostOffersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireHostOffersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireHostOffersRequest proto.InternalMessageInfo

func (m *AcquireHostOffersRequest) GetFilter() *HostFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type DisableKillTasksRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableKillTasksRequest) Reset()         { *m = DisableKillTasksRequest{} }
func (m *DisableKillTasksRequest) String() string { return proto.CompactTextString(m) }
func (*DisableKillTasksRequest) ProtoMessage()    {}
func (*DisableKillTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{38}
}

func (m *DisableKillTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableKillTasksRequest.Unmarshal(m, b)
}
func (m *DisableKillTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableKillTasksRequest.Marshal(b, m, deterministic)
}
func (m *DisableKillTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableKillTasksRequest.Merge(m, src)
}
func (m *DisableKillTasksRequest) XXX_Size() int {
	return xxx_messageInfo_DisableKillTasksRequest.Size(m)
}
func (m *DisableKillTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableKillTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisableKillTasksRequest proto.InternalMessageInfo

type DisableKillTasksResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableKillTasksResponse) Reset()         { *m = DisableKillTasksResponse{} }
func (m *DisableKillTasksResponse) String() string { return proto.CompactTextString(m) }
func (*DisableKillTasksResponse) ProtoMessage()    {}
func (*DisableKillTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{39}
}

func (m *DisableKillTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableKillTasksResponse.Unmarshal(m, b)
}
func (m *DisableKillTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableKillTasksResponse.Marshal(b, m, deterministic)
}
func (m *DisableKillTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableKillTasksResponse.Merge(m, src)
}
func (m *DisableKillTasksResponse) XXX_Size() int {
	return xxx_messageInfo_DisableKillTasksResponse.Size(m)
}
func (m *DisableKillTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableKillTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisableKillTasksResponse proto.InternalMessageInfo

// GetHostsRequest is the request which is been
// used to call the GetHosts call
type GetHostsRequest struct {
	// HostFilter required for matching the desired hosts
	// in cluster
	Filter               *HostFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetHostsRequest) Reset()         { *m = GetHostsRequest{} }
func (m *GetHostsRequest) String() string { return proto.CompactTextString(m) }
func (*GetHostsRequest) ProtoMessage()    {}
func (*GetHostsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{40}
}

func (m *GetHostsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostsRequest.Unmarshal(m, b)
}
func (m *GetHostsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostsRequest.Marshal(b, m, deterministic)
}
func (m *GetHostsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostsRequest.Merge(m, src)
}
func (m *GetHostsRequest) XXX_Size() int {
	return xxx_messageInfo_GetHostsRequest.Size(m)
}
func (m *GetHostsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostsRequest proto.InternalMessageInfo

func (m *GetHostsRequest) GetFilter() *HostFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type AcquireHostOffersResponse struct {
	Error *AcquireHostOffersResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// The list of host offers that have been returned
	HostOffers []*HostOffer `protobuf:"bytes,2,rep,name=hostOffers,proto3" json:"hostOffers,omitempty"`
	// key: HostFilterResult's string form, value: count. used for debugging purpose.
	FilterResultCounts   map[string]uint32 `protobuf:"bytes,3,rep,name=filterResultCounts,proto3" json:"filterResultCounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AcquireHostOffersResponse) Reset()         { *m = AcquireHostOffersResponse{} }
func (m *AcquireHostOffersResponse) String() string { return proto.CompactTextString(m) }
func (*AcquireHostOffersResponse) ProtoMessage()    {}
func (*AcquireHostOffersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{41}
}

func (m *AcquireHostOffersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireHostOffersResponse.Unmarshal(m, b)
}
func (m *AcquireHostOffersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireHostOffersResponse.Marshal(b, m, deterministic)
}
func (m *AcquireHostOffersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireHostOffersResponse.Merge(m, src)
}
func (m *AcquireHostOffersResponse) XXX_Size() int {
	return xxx_messageInfo_AcquireHostOffersResponse.Size(m)
}
func (m *AcquireHostOffersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireHostOffersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireHostOffersResponse proto.InternalMessageInfo

func (m *AcquireHostOffersResponse) GetError() *AcquireHostOffersResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *AcquireHostOffersResponse) GetHostOffers() []*HostOffer {
	if m != nil {
		return m.HostOffers
	}
	return nil
}

func (m *AcquireHostOffersResponse) GetFilterResultCounts() map[string]uint32 {
	if m != nil {
		return m.FilterResultCounts
	}
	return nil
}

type AcquireHostOffersResponse_Error struct {
	InvalidHostFilter    *InvalidHostFilter        `protobuf:"bytes,1,opt,name=invalidHostFilter,proto3" json:"invalidHostFilter,omitempty"`
	Failure              *AcquireHostOffersFailure `protobuf:"bytes,2,opt,name=failure,proto3" json:"failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AcquireHostOffersResponse_Error) Reset()         { *m = AcquireHostOffersResponse_Error{} }
func (m *AcquireHostOffersResponse_Error) String() string { return proto.CompactTextString(m) }
func (*AcquireHostOffersResponse_Error) ProtoMessage()    {}
func (*AcquireHostOffersResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{41, 0}
}

func (m *AcquireHostOffersResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireHostOffersResponse_Error.Unmarshal(m, b)
}
func (m *AcquireHostOffersResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireHostOffersResponse_Error.Marshal(b, m, deterministic)
}
func (m *AcquireHostOffersResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireHostOffersResponse_Error.Merge(m, src)
}
func (m *AcquireHostOffersResponse_Error) XXX_Size() int {
	return xxx_messageInfo_AcquireHostOffersResponse_Error.Size(m)
}
func (m *AcquireHostOffersResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireHostOffersResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireHostOffersResponse_Error proto.InternalMessageInfo

func (m *AcquireHostOffersResponse_Error) GetInvalidHostFilter() *InvalidHostFilter {
	if m != nil {
		return m.InvalidHostFilter
	}
	return nil
}

func (m *AcquireHostOffersResponse_Error) GetFailure() *AcquireHostOffersFailure {
	if m != nil {
		return m.Failure
	}
	return nil
}

// GetHostsResponse is the reponse for GetHosts call
// it returns the list of hosts if matched or error
type GetHostsResponse struct {
	Error *GetHostsResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// The list of host that have been matched the HostFilter
	Hosts                []*HostInfo `protobuf:"bytes,2,rep,name=hosts,proto3" json:"hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetHostsResponse) Reset()         { *m = GetHostsResponse{} }
func (m *GetHostsResponse) String() string { return proto.CompactTextString(m) }
func (*GetHostsResponse) ProtoMessage()    {}
func (*GetHostsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{42}
}

func (m *GetHostsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostsResponse.Unmarshal(m, b)
}
func (m *GetHostsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostsResponse.Marshal(b, m, deterministic)
}
func (m *GetHostsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostsResponse.Merge(m, src)
}
func (m *GetHostsResponse) XXX_Size() int {
	return xxx_messageInfo_GetHostsResponse.Size(m)
}
func (m *GetHostsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostsResponse proto.InternalMessageInfo

func (m *GetHostsResponse) GetError() *GetHostsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetHostsResponse) GetHosts() []*HostInfo {
	if m != nil {
		return m.Hosts
	}
	return nil
}

// Error for the response
type GetHostsResponse_Error struct {
	// InvalidHostFilter if the filter is invalid
	InvalidHostFilter *InvalidHostFilter `protobuf:"bytes,1,opt,name=invalidHostFilter,proto3" json:"invalidHostFilter,omitempty"`
	// GetHostsFailure if any other error occurs during
	// fetching the host map
	Failure              *GetHostsFailure `protobuf:"bytes,2,opt,name=failure,proto3" json:"failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetHostsResponse_Error) Reset()         { *m = GetHostsResponse_Error{} }
func (m *GetHostsResponse_Error) String() string { return proto.CompactTextString(m) }
func (*GetHostsResponse_Error) ProtoMessage()    {}
func (*GetHostsResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{42, 0}
}

func (m *GetHostsResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostsResponse_Error.Unmarshal(m, b)
}
func (m *GetHostsResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostsResponse_Error.Marshal(b, m, deterministic)
}
func (m *GetHostsResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostsResponse_Error.Merge(m, src)
}
func (m *GetHostsResponse_Error) XXX_Size() int {
	return xxx_messageInfo_GetHostsResponse_Error.Size(m)
}
func (m *GetHostsResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostsResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostsResponse_Error proto.InternalMessageInfo

func (m *GetHostsResponse_Error) GetInvalidHostFilter() *InvalidHostFilter {
	if m != nil {
		return m.InvalidHostFilter
	}
	return nil
}

func (m *GetHostsResponse_Error) GetFailure() *GetHostsFailure {
	if m != nil {
		return m.Failure
	}
	return nil
}

type ReleaseHostOffersRequest struct {
	HostOffers           []*HostOffer `protobuf:"bytes,1,rep,name=hostOffers,proto3" json:"hostOffers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReleaseHostOffersRequest) Reset()         { *m = ReleaseHostOffersRequest{} }
func (m *ReleaseHostOffersRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseHostOffersRequest) ProtoMessage()    {}
func (*ReleaseHostOffersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{43}
}

func (m *ReleaseHostOffersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseHostOffersRequest.Unmarshal(m, b)
}
func (m *ReleaseHostOffersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseHostOffersRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseHostOffersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseHostOffersRequest.Merge(m, src)
}
func (m *ReleaseHostOffersRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseHostOffersRequest.Size(m)
}
func (m *ReleaseHostOffersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseHostOffersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseHostOffersRequest proto.InternalMessageInfo

func (m *ReleaseHostOffersRequest) GetHostOffers() []*HostOffer {
	if m != nil {
		return m.HostOffers
	}
	return nil
}

type ReleaseHostOffersResponse struct {
	Error                *ReleaseHostOffersResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ReleaseHostOffersResponse) Reset()         { *m = ReleaseHostOffersResponse{} }
func (m *ReleaseHostOffersResponse) String() string { return proto.CompactTextString(m) }
func (*ReleaseHostOffersResponse) ProtoMessage()    {}
func (*ReleaseHostOffersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{44}
}

func (m *ReleaseHostOffersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseHostOffersResponse.Unmarshal(m, b)
}
func (m *ReleaseHostOffersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseHostOffersResponse.Marshal(b, m, deterministic)
}
func (m *ReleaseHostOffersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseHostOffersResponse.Merge(m, src)
}
func (m *ReleaseHostOffersResponse) XXX_Size() int {
	return xxx_messageInfo_ReleaseHostOffersResponse.Size(m)
}
func (m *ReleaseHostOffersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseHostOffersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseHostOffersResponse proto.InternalMessageInfo

func (m *ReleaseHostOffersResponse) GetError() *ReleaseHostOffersResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ReleaseHostOffersResponse_Error struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseHostOffersResponse_Error) Reset()         { *m = ReleaseHostOffersResponse_Error{} }
func (m *ReleaseHostOffersResponse_Error) String() string { return proto.CompactTextString(m) }
func (*ReleaseHostOffersResponse_Error) ProtoMessage()    {}
func (*ReleaseHostOffersResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{44, 0}
}

func (m *ReleaseHostOffersResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseHostOffersResponse_Error.Unmarshal(m, b)
}
func (m *ReleaseHostOffersResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseHostOffersResponse_Error.Marshal(b, m, deterministic)
}
func (m *ReleaseHostOffersResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseHostOffersResponse_Error.Merge(m, src)
}
func (m *ReleaseHostOffersResponse_Error) XXX_Size() int {
	return xxx_messageInfo_ReleaseHostOffersResponse_Error.Size(m)
}
func (m *ReleaseHostOffersResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseHostOffersResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseHostOffersResponse_Error proto.InternalMessageInfo

type LaunchTasksRequest struct {
	Hostname             string               `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Tasks                []*LaunchableTask    `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	AgentId              *v1.AgentID          `protobuf:"bytes,3,opt,name=agentId,proto3" json:"agentId,omitempty"`
	Id                   *peloton.HostOfferID `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LaunchTasksRequest) Reset()         { *m = LaunchTasksRequest{} }
func (m *LaunchTasksRequest) String() string { return proto.CompactTextString(m) }
func (*LaunchTasksRequest) ProtoMessage()    {}
func (*LaunchTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{45}
}

func (m *LaunchTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LaunchTasksRequest.Unmarshal(m, b)
}
func (m *LaunchTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LaunchTasksRequest.Marshal(b, m, deterministic)
}
func (m *LaunchTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaunchTasksRequest.Merge(m, src)
}
func (m *LaunchTasksRequest) XXX_Size() int {
	return xxx_messageInfo_LaunchTasksRequest.Size(m)
}
func (m *LaunchTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LaunchTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LaunchTasksRequest proto.InternalMessageInfo

func (m *LaunchTasksRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *LaunchTasksRequest) GetTasks() []*LaunchableTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *LaunchTasksRequest) GetAgentId() *v1.AgentID {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *LaunchTasksRequest) GetId() *peloton.HostOfferID {
	if m != nil {
		return m.Id
	}
	return nil
}

type LaunchTasksResponse struct {
	Error                *LaunchTasksResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *LaunchTasksResponse) Reset()         { *m = LaunchTasksResponse{} }
func (m *LaunchTasksResponse) String() string { return proto.CompactTextString(m) }
func (*LaunchTasksResponse) ProtoMessage()    {}
func (*LaunchTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{46}
}

func (m *LaunchTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LaunchTasksResponse.Unmarshal(m, b)
}
func (m *LaunchTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LaunchTasksResponse.Marshal(b, m, deterministic)
}
func (m *LaunchTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaunchTasksResponse.Merge(m, src)
}
func (m *LaunchTasksResponse) XXX_Size() int {
	return xxx_messageInfo_LaunchTasksResponse.Size(m)
}
func (m *LaunchTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LaunchTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LaunchTasksResponse proto.InternalMessageInfo

func (m *LaunchTasksResponse) GetError() *LaunchTasksResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type LaunchTasksResponse_Error struct {
	InvalidArgument      *InvalidArgument `protobuf:"bytes,1,opt,name=invalidArgument,proto3" json:"invalidArgument,omitempty"`
	LaunchFailure        *LaunchFailure   `protobuf:"bytes,2,opt,name=launchFailure,proto3" json:"launchFailure,omitempty"`
	InvalidOffers        *InvalidOffers   `protobuf:"bytes,3,opt,name=invalidOffers,proto3" json:"invalidOffers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LaunchTasksResponse_Error) Reset()         { *m = LaunchTasksResponse_Error{} }
func (m *LaunchTasksResponse_Error) String() string { return proto.CompactTextString(m) }
func (*LaunchTasksResponse_Error) ProtoMessage()    {}
func (*LaunchTasksResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{46, 0}
}

func (m *LaunchTasksResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LaunchTasksResponse_Error.Unmarshal(m, b)
}
func (m *LaunchTasksResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LaunchTasksResponse_Error.Marshal(b, m, deterministic)
}
func (m *LaunchTasksResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaunchTasksResponse_Error.Merge(m, src)
}
func (m *LaunchTasksResponse_Error) XXX_Size() int {
	return xxx_messageInfo_LaunchTasksResponse_Error.Size(m)
}
func (m *LaunchTasksResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_LaunchTasksResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_LaunchTasksResponse_Error proto.InternalMessageInfo

func (m *LaunchTasksResponse_Error) GetInvalidArgument() *InvalidArgument {
	if m != nil {
		return m.InvalidArgument
	}
	return nil
}

func (m *LaunchTasksResponse_Error) GetLaunchFailure() *LaunchFailure {
	if m != nil {
		return m.LaunchFailure
	}
	return nil
}

func (m *LaunchTasksResponse_Error) GetInvalidOffers() *InvalidOffers {
	if m != nil {
		return m.InvalidOffers
	}
	return nil
}

type ShutdownExecutorsRequest struct {
	Executors            []*ExecutorOnAgent `protobuf:"bytes,1,rep,name=executors,proto3" json:"executors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ShutdownExecutorsRequest) Reset()         { *m = ShutdownExecutorsRequest{} }
func (m *ShutdownExecutorsRequest) String() string { return proto.CompactTextString(m) }
func (*ShutdownExecutorsRequest) ProtoMessage()    {}
func (*ShutdownExecutorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{47}
}

func (m *ShutdownExecutorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownExecutorsRequest.Unmarshal(m, b)
}
func (m *ShutdownExecutorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownExecutorsRequest.Marshal(b, m, deterministic)
}
func (m *ShutdownExecutorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownExecutorsRequest.Merge(m, src)
}
func (m *ShutdownExecutorsRequest) XXX_Size() int {
	return xxx_messageInfo_ShutdownExecutorsRequest.Size(m)
}
func (m *ShutdownExecutorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownExecutorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownExecutorsRequest proto.InternalMessageInfo

func (m *ShutdownExecutorsRequest) GetExecutors() []*ExecutorOnAgent {
	if m != nil {
		return m.Executors
	}
	return nil
}

type ShutdownExecutorsResponse struct {
	Error                *ShutdownExecutorsResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ShutdownExecutorsResponse) Reset()         { *m = ShutdownExecutorsResponse{} }
func (m *ShutdownExecutorsResponse) String() string { return proto.CompactTextString(m) }
func (*ShutdownExecutorsResponse) ProtoMessage()    {}
func (*ShutdownExecutorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{48}
}

func (m *ShutdownExecutorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownExecutorsResponse.Unmarshal(m, b)
}
func (m *ShutdownExecutorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownExecutorsResponse.Marshal(b, m, deterministic)
}
func (m *ShutdownExecutorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownExecutorsResponse.Merge(m, src)
}
func (m *ShutdownExecutorsResponse) XXX_Size() int {
	return xxx_messageInfo_ShutdownExecutorsResponse.Size(m)
}
func (m *ShutdownExecutorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownExecutorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownExecutorsResponse proto.InternalMessageInfo

func (m *ShutdownExecutorsResponse) GetError() *ShutdownExecutorsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ShutdownExecutorsResponse_Error struct {
	InvalidExecutors     *InvalidExecutors `protobuf:"bytes,1,opt,name=invalidExecutors,proto3" json:"invalidExecutors,omitempty"`
	ShutdownFailure      *ShutdownFailure  `protobuf:"bytes,2,opt,name=shutdownFailure,proto3" json:"shutdownFailure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ShutdownExecutorsResponse_Error) Reset()         { *m = ShutdownExecutorsResponse_Error{} }
func (m *ShutdownExecutorsResponse_Error) String() string { return proto.CompactTextString(m) }
func (*ShutdownExecutorsResponse_Error) ProtoMessage()    {}
func (*ShutdownExecutorsResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{48, 0}
}

func (m *ShutdownExecutorsResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownExecutorsResponse_Error.Unmarshal(m, b)
}
func (m *ShutdownExecutorsResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownExecutorsResponse_Error.Marshal(b, m, deterministic)
}
func (m *ShutdownExecutorsResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownExecutorsResponse_Error.Merge(m, src)
}
func (m *ShutdownExecutorsResponse_Error) XXX_Size() int {
	return xxx_messageInfo_ShutdownExecutorsResponse_Error.Size(m)
}
func (m *ShutdownExecutorsResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownExecutorsResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownExecutorsResponse_Error proto.InternalMessageInfo

func (m *ShutdownExecutorsResponse_Error) GetInvalidExecutors() *InvalidExecutors {
	if m != nil {
		return m.InvalidExecutors
	}
	return nil
}

func (m *ShutdownExecutorsResponse_Error) GetShutdownFailure() *ShutdownFailure {
	if m != nil {
		return m.ShutdownFailure
	}
	return nil
}

type KillAndReserveTasksRequest struct {
	Entries              []*KillAndReserveTasksRequest_Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *KillAndReserveTasksRequest) Reset()         { *m = KillAndReserveTasksRequest{} }
func (m *KillAndReserveTasksRequest) String() string { return proto.CompactTextString(m) }
func (*KillAndReserveTasksRequest) ProtoMessage()    {}
func (*KillAndReserveTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{49}
}

func (m *KillAndReserveTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillAndReserveTasksRequest.Unmarshal(m, b)
}
func (m *KillAndReserveTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillAndReserveTasksRequest.Marshal(b, m, deterministic)
}
func (m *KillAndReserveTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillAndReserveTasksRequest.Merge(m, src)
}
func (m *KillAndReserveTasksRequest) XXX_Size() int {
	return xxx_messageInfo_KillAndReserveTasksRequest.Size(m)
}
func (m *KillAndReserveTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KillAndReserveTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KillAndReserveTasksRequest proto.InternalMessageInfo

func (m *KillAndReserveTasksRequest) GetEntries() []*KillAndReserveTasksRequest_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type KillAndReserveTasksRequest_Entry struct {
	TaskId               *v1.TaskID      `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Id                   *peloton.TaskID `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	HostToReserve        string          `protobuf:"bytes,3,opt,name=hostToReserve,proto3" json:"hostToReserve,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *KillAndReserveTasksRequest_Entry) Reset()         { *m = KillAndReserveTasksRequest_Entry{} }
func (m *KillAndReserveTasksRequest_Entry) String() string { return proto.CompactTextString(m) }
func (*KillAndReserveTasksRequest_Entry) ProtoMessage()    {}
func (*KillAndReserveTasksRequest_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{49, 0}
}

func (m *KillAndReserveTasksRequest_Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillAndReserveTasksRequest_Entry.Unmarshal(m, b)
}
func (m *KillAndReserveTasksRequest_Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillAndReserveTasksRequest_Entry.Marshal(b, m, deterministic)
}
func (m *KillAndReserveTasksRequest_Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillAndReserveTasksRequest_Entry.Merge(m, src)
}
func (m *KillAndReserveTasksRequest_Entry) XXX_Size() int {
	return xxx_messageInfo_KillAndReserveTasksRequest_Entry.Size(m)
}
func (m *KillAndReserveTasksRequest_Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_KillAndReserveTasksRequest_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_KillAndReserveTasksRequest_Entry proto.InternalMessageInfo

func (m *KillAndReserveTasksRequest_Entry) GetTaskId() *v1.TaskID {
	if m != nil {
		return m.TaskId
	}
	return nil
}

func (m *KillAndReserveTasksRequest_Entry) GetId() *peloton.TaskID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *KillAndReserveTasksRequest_Entry) GetHostToReserve() string {
	if m != nil {
		return m.HostToReserve
	}
	return ""
}

type KillAndReserveTasksResponse struct {
	Error                *KillAndReserveTasksResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *KillAndReserveTasksResponse) Reset()         { *m = KillAndReserveTasksResponse{} }
func (m *KillAndReserveTasksResponse) String() string { return proto.CompactTextString(m) }
func (*KillAndReserveTasksResponse) ProtoMessage()    {}
func (*KillAndReserveTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{50}
}

func (m *KillAndReserveTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillAndReserveTasksResponse.Unmarshal(m, b)
}
func (m *KillAndReserveTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillAndReserveTasksResponse.Marshal(b, m, deterministic)
}
func (m *KillAndReserveTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillAndReserveTasksResponse.Merge(m, src)
}
func (m *KillAndReserveTasksResponse) XXX_Size() int {
	return xxx_messageInfo_KillAndReserveTasksResponse.Size(m)
}
func (m *KillAndReserveTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KillAndReserveTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KillAndReserveTasksResponse proto.InternalMessageInfo

func (m *KillAndReserveTasksResponse) GetError() *KillAndReserveTasksResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type KillAndReserveTasksResponse_Error struct {
	InvalidTaskIDs       *InvalidTaskIDs `protobuf:"bytes,1,opt,name=invalidTaskIDs,proto3" json:"invalidTaskIDs,omitempty"`
	KillFailure          *KillFailure    `protobuf:"bytes,2,opt,name=killFailure,proto3" json:"killFailure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *KillAndReserveTasksResponse_Error) Reset()         { *m = KillAndReserveTasksResponse_Error{} }
func (m *KillAndReserveTasksResponse_Error) String() string { return proto.CompactTextString(m) }
func (*KillAndReserveTasksResponse_Error) ProtoMessage()    {}
func (*KillAndReserveTasksResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{50, 0}
}

func (m *KillAndReserveTasksResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillAndReserveTasksResponse_Error.Unmarshal(m, b)
}
func (m *KillAndReserveTasksResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillAndReserveTasksResponse_Error.Marshal(b, m, deterministic)
}
func (m *KillAndReserveTasksResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillAndReserveTasksResponse_Error.Merge(m, src)
}
func (m *KillAndReserveTasksResponse_Error) XXX_Size() int {
	return xxx_messageInfo_KillAndReserveTasksResponse_Error.Size(m)
}
func (m *KillAndReserveTasksResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_KillAndReserveTasksResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_KillAndReserveTasksResponse_Error proto.InternalMessageInfo

func (m *KillAndReserveTasksResponse_Error) GetInvalidTaskIDs() *InvalidTaskIDs {
	if m != nil {
		return m.InvalidTaskIDs
	}
	return nil
}

func (m *KillAndReserveTasksResponse_Error) GetKillFailure() *KillFailure {
	if m != nil {
		return m.KillFailure
	}
	return nil
}

type KillTasksRequest struct {
	TaskIds              []*v1.TaskID `protobuf:"bytes,1,rep,name=taskIds,proto3" json:"taskIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *KillTasksRequest) Reset()         { *m = KillTasksRequest{} }
func (m *KillTasksRequest) String() string { return proto.CompactTextString(m) }
func (*KillTasksRequest) ProtoMessage()    {}
func (*KillTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{51}
}

func (m *KillTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillTasksRequest.Unmarshal(m, b)
}
func (m *KillTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillTasksRequest.Marshal(b, m, deterministic)
}
func (m *KillTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillTasksRequest.Merge(m, src)
}
func (m *KillTasksRequest) XXX_Size() int {
	return xxx_messageInfo_KillTasksRequest.Size(m)
}
func (m *KillTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KillTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KillTasksRequest proto.InternalMessageInfo

func (m *KillTasksRequest) GetTaskIds() []*v1.TaskID {
	if m != nil {
		return m.TaskIds
	}
	return nil
}

type KillTasksResponse struct {
	Error                *KillTasksResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *KillTasksResponse) Reset()         { *m = KillTasksResponse{} }
func (m *KillTasksResponse) String() string { return proto.CompactTextString(m) }
func (*KillTasksResponse) ProtoMessage()    {}
func (*KillTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{52}
}

func (m *KillTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillTasksResponse.Unmarshal(m, b)
}
func (m *KillTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillTasksResponse.Marshal(b, m, deterministic)
}
func (m *KillTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillTasksResponse.Merge(m, src)
}
func (m *KillTasksResponse) XXX_Size() int {
	return xxx_messageInfo_KillTasksResponse.Size(m)
}
func (m *KillTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KillTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KillTasksResponse proto.InternalMessageInfo

func (m *KillTasksResponse) GetError() *KillTasksResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type KillTasksResponse_Error struct {
	InvalidTaskIDs       *InvalidTaskIDs `protobuf:"bytes,1,opt,name=invalidTaskIDs,proto3" json:"invalidTaskIDs,omitempty"`
	KillFailure          *KillFailure    `protobuf:"bytes,2,opt,name=killFailure,proto3" json:"killFailure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *KillTasksResponse_Error) Reset()         { *m = KillTasksResponse_Error{} }
func (m *KillTasksResponse_Error) String() string { return proto.CompactTextString(m) }
func (*KillTasksResponse_Error) ProtoMessage()    {}
func (*KillTasksResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{52, 0}
}

func (m *KillTasksResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillTasksResponse_Error.Unmarshal(m, b)
}
func (m *KillTasksResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillTasksResponse_Error.Marshal(b, m, deterministic)
}
func (m *KillTasksResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillTasksResponse_Error.Merge(m, src)
}
func (m *KillTasksResponse_Error) XXX_Size() int {
	return xxx_messageInfo_KillTasksResponse_Error.Size(m)
}
func (m *KillTasksResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_KillTasksResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_KillTasksResponse_Error proto.InternalMessageInfo

func (m *KillTasksResponse_Error) GetInvalidTaskIDs() *InvalidTaskIDs {
	if m != nil {
		return m.InvalidTaskIDs
	}
	return nil
}

func (m *KillTasksResponse_Error) GetKillFailure() *KillFailure {
	if m != nil {
		return m.KillFailure
	}
	return nil
}

type ReserveResourcesRequest struct {
	Resources            []*v1.Resource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReserveResourcesRequest) Reset()         { *m = ReserveResourcesRequest{} }
func (m *ReserveResourcesRequest) String() string { return proto.CompactTextString(m) }
func (*ReserveResourcesRequest) ProtoMessage()    {}
func (*ReserveResourcesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{53}
}

func (m *ReserveResourcesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveResourcesRequest.Unmarshal(m, b)
}
func (m *ReserveResourcesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveResourcesRequest.Marshal(b, m, deterministic)
}
func (m *ReserveResourcesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveResourcesRequest.Merge(m, src)
}
func (m *ReserveResourcesRequest) XXX_Size() int {
	return xxx_messageInfo_ReserveResourcesRequest.Size(m)
}
func (m *ReserveResourcesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveResourcesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveResourcesRequest proto.InternalMessageInfo

func (m *ReserveResourcesRequest) GetResources() []*v1.Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

type ReserveResourcesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveResourcesResponse) Reset()         { *m = ReserveResourcesResponse{} }
func (m *ReserveResourcesResponse) String() string { return proto.CompactTextString(m) }
func (*ReserveResourcesResponse) ProtoMessage()    {}
func (*ReserveResourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{54}
}

func (m *ReserveResourcesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveResourcesResponse.Unmarshal(m, b)
}
func (m *ReserveResourcesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveResourcesResponse.Marshal(b, m, deterministic)
}
func (m *ReserveResourcesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveResourcesResponse.Merge(m, src)
}
func (m *ReserveResourcesResponse) XXX_Size() int {
	return xxx_messageInfo_ReserveResourcesResponse.Size(m)
}
func (m *ReserveResourcesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveResourcesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveResourcesResponse proto.InternalMessageInfo

type UnreserveResourcesRequest struct {
	Resources            []*v1.Resource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UnreserveResourcesRequest) Reset()         { *m = UnreserveResourcesRequest{} }
func (m *UnreserveResourcesRequest) String() string { return proto.CompactTextString(m) }
func (*UnreserveResourcesRequest) ProtoMessage()    {}
func (*UnreserveResourcesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{55}
}

func (m *UnreserveResourcesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnreserveResourcesRequest.Unmarshal(m, b)
}
func (m *UnreserveResourcesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnreserveResourcesRequest.Marshal(b, m, deterministic)
}
func (m *UnreserveResourcesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnreserveResourcesRequest.Merge(m, src)
}
func (m *UnreserveResourcesRequest) XXX_Size() int {
	return xxx_messageInfo_UnreserveResourcesRequest.Size(m)
}
func (m *UnreserveResourcesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnreserveResourcesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnreserveResourcesRequest proto.InternalMessageInfo

func (m *UnreserveResourcesRequest) GetResources() []*v1.Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

type UnreserveResourcesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnreserveResourcesResponse) Reset()         { *m = UnreserveResourcesResponse{} }
func (m *UnreserveResourcesResponse) String() string { return proto.CompactTextString(m) }
func (*UnreserveResourcesResponse) ProtoMessage()    {}
func (*UnreserveResourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{56}
}

func (m *UnreserveResourcesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnreserveResourcesResponse.Unmarshal(m, b)
}
func (m *UnreserveResourcesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnreserveResourcesResponse.Marshal(b, m, deterministic)
}
func (m *UnreserveResourcesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnreserveResourcesResponse.Merge(m, src)
}
func (m *UnreserveResourcesResponse) XXX_Size() int {
	return xxx_messageInfo_UnreserveResourcesResponse.Size(m)
}
func (m *UnreserveResourcesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnreserveResourcesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnreserveResourcesResponse proto.InternalMessageInfo

type CreateVolumesRequest struct {
	Volumes              []*v1.Resource `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateVolumesRequest) Reset()         { *m = CreateVolumesRequest{} }
func (m *CreateVolumesRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVolumesRequest) ProtoMessage()    {}
func (*CreateVolumesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{57}
}

func (m *CreateVolumesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVolumesRequest.Unmarshal(m, b)
}
func (m *CreateVolumesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVolumesRequest.Marshal(b, m, deterministic)
}
func (m *CreateVolumesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVolumesRequest.Merge(m, src)
}
func (m *CreateVolumesRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVolumesRequest.Size(m)
}
func (m *CreateVolumesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVolumesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVolumesRequest proto.InternalMessageInfo

func (m *CreateVolumesRequest) GetVolumes() []*v1.Resource {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type CreateVolumesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVolumesResponse) Reset()         { *m = CreateVolumesResponse{} }
func (m *CreateVolumesResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVolumesResponse) ProtoMessage()    {}
func (*CreateVolumesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{58}
}

func (m *CreateVolumesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVolumesResponse.Unmarshal(m, b)
}
func (m *CreateVolumesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVolumesResponse.Marshal(b, m, deterministic)
}
func (m *CreateVolumesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVolumesResponse.Merge(m, src)
}
func (m *CreateVolumesResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVolumesResponse.Size(m)
}
func (m *CreateVolumesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVolumesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVolumesResponse proto.InternalMessageInfo

type DestroyVolumesRequest struct {
	Volumes              []*v1.Resource `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DestroyVolumesRequest) Reset()         { *m = DestroyVolumesRequest{} }
func (m *DestroyVolumesRequest) String() string { return proto.CompactTextString(m) }
func (*DestroyVolumesRequest) ProtoMessage()    {}
func (*DestroyVolumesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{59}
}

func (m *DestroyVolumesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DestroyVolumesRequest.Unmarshal(m, b)
}
func (m *DestroyVolumesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DestroyVolumesRequest.Marshal(b, m, deterministic)
}
func (m *DestroyVolumesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DestroyVolumesRequest.Merge(m, src)
}
func (m *DestroyVolumesRequest) XXX_Size() int {
	return xxx_messageInfo_DestroyVolumesRequest.Size(m)
}
func (m *DestroyVolumesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DestroyVolumesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DestroyVolumesRequest proto.InternalMessageInfo

func (m *DestroyVolumesRequest) GetVolumes() []*v1.Resource {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type DestroyVolumesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DestroyVolumesResponse) Reset()         { *m = DestroyVolumesResponse{} }
func (m *DestroyVolumesResponse) String() string { return proto.CompactTextString(m) }
func (*DestroyVolumesResponse) ProtoMessage()    {}
func (*DestroyVolumesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{60}
}

func (m *DestroyVolumesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DestroyVolumesResponse.Unmarshal(m, b)
}
func (m *DestroyVolumesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DestroyVolumesResponse.Marshal(b, m, deterministic)
}
func (m *DestroyVolumesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DestroyVolumesResponse.Merge(m, src)
}
func (m *DestroyVolumesResponse) XXX_Size() int {
	return xxx_messageInfo_DestroyVolumesResponse.Size(m)
}
func (m *DestroyVolumesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DestroyVolumesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DestroyVolumesResponse proto.InternalMessageInfo

//*
//  Resource allocation for a resource
type Resource struct {
	// Type of the resource
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// capacity of the resource
	Capacity             float64  `protobuf:"fixed64,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{61}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Resource) GetCapacity() float64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

type ClusterCapacityRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterCapacityRequest) Reset()         { *m = ClusterCapacityRequest{} }
func (m *ClusterCapacityRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterCapacityRequest) ProtoMessage()    {}
func (*ClusterCapacityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{62}
}

func (m *ClusterCapacityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterCapacityRequest.Unmarshal(m, b)
}
func (m *ClusterCapacityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterCapacityRequest.Marshal(b, m, deterministic)
}
func (m *ClusterCapacityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterCapacityRequest.Merge(m, src)
}
func (m *ClusterCapacityRequest) XXX_Size() int {
	return xxx_messageInfo_ClusterCapacityRequest.Size(m)
}
func (m *ClusterCapacityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterCapacityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterCapacityRequest proto.InternalMessageInfo

type ClusterCapacityResponse struct {
	Error *ClusterCapacityResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// Resources allocated
	Resources []*Resource `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	// Resources for total physical capacity.
	PhysicalResources []*Resource `protobuf:"bytes,3,rep,name=physicalResources,proto3" json:"physicalResources,omitempty"`
	// Represents total usage slack alloacted.
	AllocatedSlackResources []*Resource `protobuf:"bytes,4,rep,name=allocatedSlackResources,proto3" json:"allocatedSlackResources,omitempty"`
	// Represents total slack resources at Cluster.
	PhysicalSlackResources []*Resource `protobuf:"bytes,5,rep,name=physicalSlackResources,proto3" json:"physicalSlackResources,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}    `json:"-"`
	XXX_unrecognized       []byte      `json:"-"`
	XXX_sizecache          int32       `json:"-"`
}

func (m *ClusterCapacityResponse) Reset()         { *m = ClusterCapacityResponse{} }
func (m *ClusterCapacityResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterCapacityResponse) ProtoMessage()    {}
func (*ClusterCapacityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{63}
}

func (m *ClusterCapacityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterCapacityResponse.Unmarshal(m, b)
}
func (m *ClusterCapacityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterCapacityResponse.Marshal(b, m, deterministic)
}
func (m *ClusterCapacityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterCapacityResponse.Merge(m, src)
}
func (m *ClusterCapacityResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterCapacityResponse.Size(m)
}
func (m *ClusterCapacityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterCapacityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterCapacityResponse proto.InternalMessageInfo

func (m *ClusterCapacityResponse) GetError() *ClusterCapacityResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ClusterCapacityResponse) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ClusterCapacityResponse) GetPhysicalResources() []*Resource {
	if m != nil {
		return m.PhysicalResources
	}
	return nil
}

func (m *ClusterCapacityResponse) GetAllocatedSlackResources() []*Resource {
	if m != nil {
		return m.AllocatedSlackResources
	}
	return nil
}

func (m *ClusterCapacityResponse) GetPhysicalSlackResources() []*Resource {
	if m != nil {
		return m.PhysicalSlackResources
	}
	return nil
}

type ClusterCapacityResponse_Error struct {
	ClusterUnavailable   *ClusterUnavailable `protobuf:"bytes,1,opt,name=clusterUnavailable,proto3" json:"clusterUnavailable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ClusterCapacityResponse_Error) Reset()         { *m = ClusterCapacityResponse_Error{} }
func (m *ClusterCapacityResponse_Error) String() string { return proto.CompactTextString(m) }
func (*ClusterCapacityResponse_Error) ProtoMessage()    {}
func (*ClusterCapacityResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{63, 0}
}

func (m *ClusterCapacityResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterCapacityResponse_Error.Unmarshal(m, b)
}
func (m *ClusterCapacityResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterCapacityResponse_Error.Marshal(b, m, deterministic)
}
func (m *ClusterCapacityResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterCapacityResponse_Error.Merge(m, src)
}
func (m *ClusterCapacityResponse_Error) XXX_Size() int {
	return xxx_messageInfo_ClusterCapacityResponse_Error.Size(m)
}
func (m *ClusterCapacityResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterCapacityResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterCapacityResponse_Error proto.InternalMessageInfo

func (m *ClusterCapacityResponse_Error) GetClusterUnavailable() *ClusterUnavailable {
	if m != nil {
		return m.ClusterUnavailable
	}
	return nil
}

//
// ReserveHostsRequest is the request for making reservation for the task
type ReserveHostsRequest struct {
	// reservation object for the host reservation
	Reservation          *Reservation `protobuf:"bytes,1,opt,name=reservation,proto3" json:"reservation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReserveHostsRequest) Reset()         { *m = ReserveHostsRequest{} }
func (m *ReserveHostsRequest) String() string { return proto.CompactTextString(m) }
func (*ReserveHostsRequest) ProtoMessage()    {}
func (*ReserveHostsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{64}
}

func (m *ReserveHostsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveHostsRequest.Unmarshal(m, b)
}
func (m *ReserveHostsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveHostsRequest.Marshal(b, m, deterministic)
}
func (m *ReserveHostsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveHostsRequest.Merge(m, src)
}
func (m *ReserveHostsRequest) XXX_Size() int {
	return xxx_messageInfo_ReserveHostsRequest.Size(m)
}
func (m *ReserveHostsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveHostsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveHostsRequest proto.InternalMessageInfo

func (m *ReserveHostsRequest) GetReservation() *Reservation {
	if m != nil {
		return m.Reservation
	}
	return nil
}

//
// ReservationFailed is the failed reservation
type ReservationFailed struct {
	// message for the failed reason
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReservationFailed) Reset()         { *m = ReservationFailed{} }
func (m *ReservationFailed) String() string { return proto.CompactTextString(m) }
func (*ReservationFailed) ProtoMessage()    {}
func (*ReservationFailed) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{65}
}

func (m *ReservationFailed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReservationFailed.Unmarshal(m, b)
}
func (m *ReservationFailed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReservationFailed.Marshal(b, m, deterministic)
}
func (m *ReservationFailed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReservationFailed.Merge(m, src)
}
func (m *ReservationFailed) XXX_Size() int {
	return xxx_messageInfo_ReservationFailed.Size(m)
}
func (m *ReservationFailed) XXX_DiscardUnknown() {
	xxx_messageInfo_ReservationFailed.DiscardUnknown(m)
}

var xxx_messageInfo_ReservationFailed proto.InternalMessageInfo

func (m *ReservationFailed) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//
// ReservationAlreadyExist error , when reservation already exist
type ReservationAlreadyExist struct {
	// message for the failed reason
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReservationAlreadyExist) Reset()         { *m = ReservationAlreadyExist{} }
func (m *ReservationAlreadyExist) String() string { return proto.CompactTextString(m) }
func (*ReservationAlreadyExist) ProtoMessage()    {}
func (*ReservationAlreadyExist) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{66}
}

func (m *ReservationAlreadyExist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReservationAlreadyExist.Unmarshal(m, b)
}
func (m *ReservationAlreadyExist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReservationAlreadyExist.Marshal(b, m, deterministic)
}
func (m *ReservationAlreadyExist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReservationAlreadyExist.Merge(m, src)
}
func (m *ReservationAlreadyExist) XXX_Size() int {
	return xxx_messageInfo_ReservationAlreadyExist.Size(m)
}
func (m *ReservationAlreadyExist) XXX_DiscardUnknown() {
	xxx_messageInfo_ReservationAlreadyExist.DiscardUnknown(m)
}

var xxx_messageInfo_ReservationAlreadyExist proto.InternalMessageInfo

func (m *ReservationAlreadyExist) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//
// HostUnavailable error , when host is unavailable for reservation
type HostUnavailable struct {
	// message for the failed reason
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostUnavailable) Reset()         { *m = HostUnavailable{} }
func (m *HostUnavailable) String() string { return proto.CompactTextString(m) }
func (*HostUnavailable) ProtoMessage()    {}
func (*HostUnavailable) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{67}
}

func (m *HostUnavailable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostUnavailable.Unmarshal(m, b)
}
func (m *HostUnavailable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostUnavailable.Marshal(b, m, deterministic)
}
func (m *HostUnavailable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostUnavailable.Merge(m, src)
}
func (m *HostUnavailable) XXX_Size() int {
	return xxx_messageInfo_HostUnavailable.Size(m)
}
func (m *HostUnavailable) XXX_DiscardUnknown() {
	xxx_messageInfo_HostUnavailable.DiscardUnknown(m)
}

var xxx_messageInfo_HostUnavailable proto.InternalMessageInfo

func (m *HostUnavailable) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//
// HostAlreadyReserved error , when host is already reserved
type HostAlreadyReserved struct {
	// message for the failed reason
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostAlreadyReserved) Reset()         { *m = HostAlreadyReserved{} }
func (m *HostAlreadyReserved) String() string { return proto.CompactTextString(m) }
func (*HostAlreadyReserved) ProtoMessage()    {}
func (*HostAlreadyReserved) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{68}
}

func (m *HostAlreadyReserved) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostAlreadyReserved.Unmarshal(m, b)
}
func (m *HostAlreadyReserved) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostAlreadyReserved.Marshal(b, m, deterministic)
}
func (m *HostAlreadyReserved) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostAlreadyReserved.Merge(m, src)
}
func (m *HostAlreadyReserved) XXX_Size() int {
	return xxx_messageInfo_HostAlreadyReserved.Size(m)
}
func (m *HostAlreadyReserved) XXX_DiscardUnknown() {
	xxx_messageInfo_HostAlreadyReserved.DiscardUnknown(m)
}

var xxx_messageInfo_HostAlreadyReserved proto.InternalMessageInfo

func (m *HostAlreadyReserved) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//
// ReserveHostsResponse is the response for the reservation request
type ReserveHostsResponse struct {
	// Error message if reservation request failed
	Error *ReserveHostsResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// Host info which host is reserved
	Host                 *HostInfo `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReserveHostsResponse) Reset()         { *m = ReserveHostsResponse{} }
func (m *ReserveHostsResponse) String() string { return proto.CompactTextString(m) }
func (*ReserveHostsResponse) ProtoMessage()    {}
func (*ReserveHostsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{69}
}

func (m *ReserveHostsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveHostsResponse.Unmarshal(m, b)
}
func (m *ReserveHostsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveHostsResponse.Marshal(b, m, deterministic)
}
func (m *ReserveHostsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveHostsResponse.Merge(m, src)
}
func (m *ReserveHostsResponse) XXX_Size() int {
	return xxx_messageInfo_ReserveHostsResponse.Size(m)
}
func (m *ReserveHostsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveHostsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveHostsResponse proto.InternalMessageInfo

func (m *ReserveHostsResponse) GetError() *ReserveHostsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ReserveHostsResponse) GetHost() *HostInfo {
	if m != nil {
		return m.Host
	}
	return nil
}

type ReserveHostsResponse_Error struct {
	// Failed reservation for the request
	Failed *ReservationFailed `protobuf:"bytes,1,opt,name=failed,proto3" json:"failed,omitempty"`
	// Error when reservation already exist
	AlreadyExist *ReservationAlreadyExist `protobuf:"bytes,2,opt,name=alreadyExist,proto3" json:"alreadyExist,omitempty"`
	// Host is unavailable for the request
	HostUnavailable *HostUnavailable `protobuf:"bytes,3,opt,name=hostUnavailable,proto3" json:"hostUnavailable,omitempty"`
	// Host is already reserved
	HostAlreadyReserved  *HostAlreadyReserved `protobuf:"bytes,4,opt,name=hostAlreadyReserved,proto3" json:"hostAlreadyReserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReserveHostsResponse_Error) Reset()         { *m = ReserveHostsResponse_Error{} }
func (m *ReserveHostsResponse_Error) String() string { return proto.CompactTextString(m) }
func (*ReserveHostsResponse_Error) ProtoMessage()    {}
func (*ReserveHostsResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{69, 0}
}

func (m *ReserveHostsResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveHostsResponse_Error.Unmarshal(m, b)
}
func (m *ReserveHostsResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveHostsResponse_Error.Marshal(b, m, deterministic)
}
func (m *ReserveHostsResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveHostsResponse_Error.Merge(m, src)
}
func (m *ReserveHostsResponse_Error) XXX_Size() int {
	return xxx_messageInfo_ReserveHostsResponse_Error.Size(m)
}
func (m *ReserveHostsResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveHostsResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveHostsResponse_Error proto.InternalMessageInfo

func (m *ReserveHostsResponse_Error) GetFailed() *ReservationFailed {
	if m != nil {
		return m.Failed
	}
	return nil
}

func (m *ReserveHostsResponse_Error) GetAlreadyExist() *ReservationAlreadyExist {
	if m != nil {
		return m.AlreadyExist
	}
	return nil
}

func (m *ReserveHostsResponse_Error) GetHostUnavailable() *HostUnavailable {
	if m != nil {
		return m.HostUnavailable
	}
	return nil
}

func (m *ReserveHostsResponse_Error) GetHostAlreadyReserved() *HostAlreadyReserved {
	if m != nil {
		return m.HostAlreadyReserved
	}
	return nil
}

//
// GetCompletedReservationRequest is the request for GetCompletedReservation
type GetCompletedReservationRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCompletedReservationRequest) Reset()         { *m = GetCompletedReservationRequest{} }
func (m *GetCompletedReservationRequest) String() string { return proto.CompactTextString(m) }
func (*GetCompletedReservationRequest) ProtoMessage()    {}
func (*GetCompletedReservationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{70}
}

func (m *GetCompletedReservationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCompletedReservationRequest.Unmarshal(m, b)
}
func (m *GetCompletedReservationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCompletedReservationRequest.Marshal(b, m, deterministic)
}
func (m *GetCompletedReservationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCompletedReservationRequest.Merge(m, src)
}
func (m *GetCompletedReservationRequest) XXX_Size() int {
	return xxx_messageInfo_GetCompletedReservationRequest.Size(m)
}
func (m *GetCompletedReservationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCompletedReservationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCompletedReservationRequest proto.InternalMessageInfo

//
// GetCompletedReservationResponse is the response for GetCompletedReservation
type GetCompletedReservationResponse struct {
	Error *GetCompletedReservationResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// list of completed reservations
	CompletedReservations []*CompletedReservation `protobuf:"bytes,2,rep,name=completedReservations,proto3" json:"completedReservations,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *GetCompletedReservationResponse) Reset()         { *m = GetCompletedReservationResponse{} }
func (m *GetCompletedReservationResponse) String() string { return proto.CompactTextString(m) }
func (*GetCompletedReservationResponse) ProtoMessage()    {}
func (*GetCompletedReservationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{71}
}

func (m *GetCompletedReservationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCompletedReservationResponse.Unmarshal(m, b)
}
func (m *GetCompletedReservationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCompletedReservationResponse.Marshal(b, m, deterministic)
}
func (m *GetCompletedReservationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCompletedReservationResponse.Merge(m, src)
}
func (m *GetCompletedReservationResponse) XXX_Size() int {
	return xxx_messageInfo_GetCompletedReservationResponse.Size(m)
}
func (m *GetCompletedReservationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCompletedReservationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCompletedReservationResponse proto.InternalMessageInfo

func (m *GetCompletedReservationResponse) GetError() *GetCompletedReservationResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetCompletedReservationResponse) GetCompletedReservations() []*CompletedReservation {
	if m != nil {
		return m.CompletedReservations
	}
	return nil
}

// Error message for GetCompletedReservationResponse
type GetCompletedReservationResponse_Error struct {
	// No completed reservations found
	NotFound             *NotFound `protobuf:"bytes,1,opt,name=notFound,proto3" json:"notFound,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetCompletedReservationResponse_Error) Reset()         { *m = GetCompletedReservationResponse_Error{} }
func (m *GetCompletedReservationResponse_Error) String() string { return proto.CompactTextString(m) }
func (*GetCompletedReservationResponse_Error) ProtoMessage()    {}
func (*GetCompletedReservationResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{71, 0}
}

func (m *GetCompletedReservationResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCompletedReservationResponse_Error.Unmarshal(m, b)
}
func (m *GetCompletedReservationResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCompletedReservationResponse_Error.Marshal(b, m, deterministic)
}
func (m *GetCompletedReservationResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCompletedReservationResponse_Error.Merge(m, src)
}
func (m *GetCompletedReservationResponse_Error) XXX_Size() int {
	return xxx_messageInfo_GetCompletedReservationResponse_Error.Size(m)
}
func (m *GetCompletedReservationResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCompletedReservationResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_GetCompletedReservationResponse_Error proto.InternalMessageInfo

func (m *GetCompletedReservationResponse_Error) GetNotFound() *NotFound {
	if m != nil {
		return m.NotFound
	}
	return nil
}

// NotFound is error message for not valid completed reservation found
type NotFound struct {
	// message for the failed reason
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotFound) Reset()         { *m = NotFound{} }
func (m *NotFound) String() string { return proto.CompactTextString(m) }
func (*NotFound) ProtoMessage()    {}
func (*NotFound) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{72}
}

func (m *NotFound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotFound.Unmarshal(m, b)
}
func (m *NotFound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotFound.Marshal(b, m, deterministic)
}
func (m *NotFound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotFound.Merge(m, src)
}
func (m *NotFound) XXX_Size() int {
	return xxx_messageInfo_NotFound.Size(m)
}
func (m *NotFound) XXX_DiscardUnknown() {
	xxx_messageInfo_NotFound.DiscardUnknown(m)
}

var xxx_messageInfo_NotFound proto.InternalMessageInfo

func (m *NotFound) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//
// GetDrainingHostsRequest is the request message for InternalHostService.GetDrainingHosts
type GetDrainingHostsRequest struct {
	// Max number of draining hosts to dequeue
	Limit uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Timeout in milliseconds if no hosts are draining
	Timeout              uint32   `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDrainingHostsRequest) Reset()         { *m = GetDrainingHostsRequest{} }
func (m *GetDrainingHostsRequest) String() string { return proto.CompactTextString(m) }
func (*GetDrainingHostsRequest) ProtoMessage()    {}
func (*GetDrainingHostsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{73}
}

func (m *GetDrainingHostsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDrainingHostsRequest.Unmarshal(m, b)
}
func (m *GetDrainingHostsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDrainingHostsRequest.Marshal(b, m, deterministic)
}
func (m *GetDrainingHostsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDrainingHostsRequest.Merge(m, src)
}
func (m *GetDrainingHostsRequest) XXX_Size() int {
	return xxx_messageInfo_GetDrainingHostsRequest.Size(m)
}
func (m *GetDrainingHostsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDrainingHostsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDrainingHostsRequest proto.InternalMessageInfo

func (m *GetDrainingHostsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetDrainingHostsRequest) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

//
// GetDrainingHostsResponse is the response message for InternalHostService.GetDrainingHosts
type GetDrainingHostsResponse struct {
	// Hostnames of the hosts dequeued
	Hostnames            []string `protobuf:"bytes,1,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDrainingHostsResponse) Reset()         { *m = GetDrainingHostsResponse{} }
func (m *GetDrainingHostsResponse) String() string { return proto.CompactTextString(m) }
func (*GetDrainingHostsResponse) ProtoMessage()    {}
func (*GetDrainingHostsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{74}
}

func (m *GetDrainingHostsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDrainingHostsResponse.Unmarshal(m, b)
}
func (m *GetDrainingHostsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDrainingHostsResponse.Marshal(b, m, deterministic)
}
func (m *GetDrainingHostsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDrainingHostsResponse.Merge(m, src)
}
func (m *GetDrainingHostsResponse) XXX_Size() int {
	return xxx_messageInfo_GetDrainingHostsResponse.Size(m)
}
func (m *GetDrainingHostsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDrainingHostsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDrainingHostsResponse proto.InternalMessageInfo

func (m *GetDrainingHostsResponse) GetHostnames() []string {
	if m != nil {
		return m.Hostnames
	}
	return nil
}

//
// MarkHostsDrainedRequest is the request message for InternalHostService.MarkHostsDrained
type MarkHostsDrainedRequest struct {
	// Hostnames of the hosts to be marked as drained
	Hostnames            []string `protobuf:"bytes,1,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkHostsDrainedRequest) Reset()         { *m = MarkHostsDrainedRequest{} }
func (m *MarkHostsDrainedRequest) String() string { return proto.CompactTextString(m) }
func (*MarkHostsDrainedRequest) ProtoMessage()    {}
func (*MarkHostsDrainedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{75}
}

func (m *MarkHostsDrainedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkHostsDrainedRequest.Unmarshal(m, b)
}
func (m *MarkHostsDrainedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkHostsDrainedRequest.Marshal(b, m, deterministic)
}
func (m *MarkHostsDrainedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkHostsDrainedRequest.Merge(m, src)
}
func (m *MarkHostsDrainedRequest) XXX_Size() int {
	return xxx_messageInfo_MarkHostsDrainedRequest.Size(m)
}
func (m *MarkHostsDrainedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkHostsDrainedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarkHostsDrainedRequest proto.InternalMessageInfo

func (m *MarkHostsDrainedRequest) GetHostnames() []string {
	if m != nil {
		return m.Hostnames
	}
	return nil
}

//
// MarkHostsDrainedResponse is the response message for InternalHostService.MarkHostsDrained
type MarkHostsDrainedResponse struct {
	// Hostnames of the hosts successfully marked as drained
	MarkedHosts          []string `protobuf:"bytes,1,rep,name=marked_hosts,json=markedHosts,proto3" json:"marked_hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkHostsDrainedResponse) Reset()         { *m = MarkHostsDrainedResponse{} }
func (m *MarkHostsDrainedResponse) String() string { return proto.CompactTextString(m) }
func (*MarkHostsDrainedResponse) ProtoMessage()    {}
func (*MarkHostsDrainedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{76}
}

func (m *MarkHostsDrainedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkHostsDrainedResponse.Unmarshal(m, b)
}
func (m *MarkHostsDrainedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkHostsDrainedResponse.Marshal(b, m, deterministic)
}
func (m *MarkHostsDrainedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkHostsDrainedResponse.Merge(m, src)
}
func (m *MarkHostsDrainedResponse) XXX_Size() int {
	return xxx_messageInfo_MarkHostsDrainedResponse.Size(m)
}
func (m *MarkHostsDrainedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkHostsDrainedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarkHostsDrainedResponse proto.InternalMessageInfo

func (m *MarkHostsDrainedResponse) GetMarkedHosts() []string {
	if m != nil {
		return m.MarkedHosts
	}
	return nil
}

//*
// Request for Mesos agent's information as reported by Mesos.
type GetMesosAgentInfoRequest struct {
	// Hostname of the agent whose information is being requested.
	// If not provided, information about all agents will be returned.
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMesosAgentInfoRequest) Reset()         { *m = GetMesosAgentInfoRequest{} }
func (m *GetMesosAgentInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetMesosAgentInfoRequest) ProtoMessage()    {}
func (*GetMesosAgentInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{77}
}

func (m *GetMesosAgentInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMesosAgentInfoRequest.Unmarshal(m, b)
}
func (m *GetMesosAgentInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMesosAgentInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetMesosAgentInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMesosAgentInfoRequest.Merge(m, src)
}
func (m *GetMesosAgentInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetMesosAgentInfoRequest.Size(m)
}
func (m *GetMesosAgentInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMesosAgentInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMesosAgentInfoRequest proto.InternalMessageInfo

func (m *GetMesosAgentInfoRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

// HostNotFound is an error message for GetMesosAgentInfo
type HostNotFound struct {
	// Failure message.
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostNotFound) Reset()         { *m = HostNotFound{} }
func (m *HostNotFound) String() string { return proto.CompactTextString(m) }
func (*HostNotFound) ProtoMessage()    {}
func (*HostNotFound) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{78}
}

func (m *HostNotFound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostNotFound.Unmarshal(m, b)
}
func (m *HostNotFound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostNotFound.Marshal(b, m, deterministic)
}
func (m *HostNotFound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostNotFound.Merge(m, src)
}
func (m *HostNotFound) XXX_Size() int {
	return xxx_messageInfo_HostNotFound.Size(m)
}
func (m *HostNotFound) XXX_DiscardUnknown() {
	xxx_messageInfo_HostNotFound.DiscardUnknown(m)
}

var xxx_messageInfo_HostNotFound proto.InternalMessageInfo

func (m *HostNotFound) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//*
// Response containing Mesos agents' information.
type GetMesosAgentInfoResponse struct {
	Error                *GetMesosAgentInfoResponse_Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Agents               []*master.Response_GetAgents_Agent `protobuf:"bytes,2,rep,name=agents,proto3" json:"agents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *GetMesosAgentInfoResponse) Reset()         { *m = GetMesosAgentInfoResponse{} }
func (m *GetMesosAgentInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetMesosAgentInfoResponse) ProtoMessage()    {}
func (*GetMesosAgentInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{79}
}

func (m *GetMesosAgentInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMesosAgentInfoResponse.Unmarshal(m, b)
}
func (m *GetMesosAgentInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMesosAgentInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetMesosAgentInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMesosAgentInfoResponse.Merge(m, src)
}
func (m *GetMesosAgentInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetMesosAgentInfoResponse.Size(m)
}
func (m *GetMesosAgentInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMesosAgentInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMesosAgentInfoResponse proto.InternalMessageInfo

func (m *GetMesosAgentInfoResponse) GetError() *GetMesosAgentInfoResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetMesosAgentInfoResponse) GetAgents() []*master.Response_GetAgents_Agent {
	if m != nil {
		return m.Agents
	}
	return nil
}

// Error message for GetMesosAgentInfo
type GetMesosAgentInfoResponse_Error struct {
	// No information found for host
	HostNotFound         *HostNotFound `protobuf:"bytes,1,opt,name=hostNotFound,proto3" json:"hostNotFound,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetMesosAgentInfoResponse_Error) Reset()         { *m = GetMesosAgentInfoResponse_Error{} }
func (m *GetMesosAgentInfoResponse_Error) String() string { return proto.CompactTextString(m) }
func (*GetMesosAgentInfoResponse_Error) ProtoMessage()    {}
func (*GetMesosAgentInfoResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{79, 0}
}

func (m *GetMesosAgentInfoResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMesosAgentInfoResponse_Error.Unmarshal(m, b)
}
func (m *GetMesosAgentInfoResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMesosAgentInfoResponse_Error.Marshal(b, m, deterministic)
}
func (m *GetMesosAgentInfoResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMesosAgentInfoResponse_Error.Merge(m, src)
}
func (m *GetMesosAgentInfoResponse_Error) XXX_Size() int {
	return xxx_messageInfo_GetMesosAgentInfoResponse_Error.Size(m)
}
func (m *GetMesosAgentInfoResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMesosAgentInfoResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_GetMesosAgentInfoResponse_Error proto.InternalMessageInfo

func (m *GetMesosAgentInfoResponse_Error) GetHostNotFound() *HostNotFound {
	if m != nil {
		return m.HostNotFound
	}
	return nil
}

type ReleaseHostsHeldForTasksRequest struct {
	Ids                  []*peloton.TaskID `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReleaseHostsHeldForTasksRequest) Reset()         { *m = ReleaseHostsHeldForTasksRequest{} }
func (m *ReleaseHostsHeldForTasksRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseHostsHeldForTasksRequest) ProtoMessage()    {}
func (*ReleaseHostsHeldForTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{80}
}

func (m *ReleaseHostsHeldForTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseHostsHeldForTasksRequest.Unmarshal(m, b)
}
func (m *ReleaseHostsHeldForTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseHostsHeldForTasksRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseHostsHeldForTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseHostsHeldForTasksRequest.Merge(m, src)
}
func (m *ReleaseHostsHeldForTasksRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseHostsHeldForTasksRequest.Size(m)
}
func (m *ReleaseHostsHeldForTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseHostsHeldForTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseHostsHeldForTasksRequest proto.InternalMessageInfo

func (m *ReleaseHostsHeldForTasksRequest) GetIds() []*peloton.TaskID {
	if m != nil {
		return m.Ids
	}
	return nil
}

type ReleaseHostsHeldForTasksResponse struct {
	Error                *ReleaseHostsHeldForTasksResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ReleaseHostsHeldForTasksResponse) Reset()         { *m = ReleaseHostsHeldForTasksResponse{} }
func (m *ReleaseHostsHeldForTasksResponse) String() string { return proto.CompactTextString(m) }
func (*ReleaseHostsHeldForTasksResponse) ProtoMessage()    {}
func (*ReleaseHostsHeldForTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{81}
}

func (m *ReleaseHostsHeldForTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseHostsHeldForTasksResponse.Unmarshal(m, b)
}
func (m *ReleaseHostsHeldForTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseHostsHeldForTasksResponse.Marshal(b, m, deterministic)
}
func (m *ReleaseHostsHeldForTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseHostsHeldForTasksResponse.Merge(m, src)
}
func (m *ReleaseHostsHeldForTasksResponse) XXX_Size() int {
	return xxx_messageInfo_ReleaseHostsHeldForTasksResponse.Size(m)
}
func (m *ReleaseHostsHeldForTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseHostsHeldForTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseHostsHeldForTasksResponse proto.InternalMessageInfo

func (m *ReleaseHostsHeldForTasksResponse) GetError() *ReleaseHostsHeldForTasksResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ReleaseHostsHeldForTasksResponse_Error struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseHostsHeldForTasksResponse_Error) Reset() {
	*m = ReleaseHostsHeldForTasksResponse_Error{}
}
func (m *ReleaseHostsHeldForTasksResponse_Error) String() string { return proto.CompactTextString(m) }
func (*ReleaseHostsHeldForTasksResponse_Error) ProtoMessage()    {}
func (*ReleaseHostsHeldForTasksResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_62608de4acad125a, []int{81, 0}
}

func (m *ReleaseHostsHeldForTasksResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseHostsHeldForTasksResponse_Error.Unmarshal(m, b)
}
func (m *ReleaseHostsHeldForTasksResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseHostsHeldForTasksResponse_Error.Marshal(b, m, deterministic)
}
func (m *ReleaseHostsHeldForTasksResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseHostsHeldForTasksResponse_Error.Merge(m, src)
}
func (m *ReleaseHostsHeldForTasksResponse_Error) XXX_Size() int {
	return xxx_messageInfo_ReleaseHostsHeldForTasksResponse_Error.Size(m)
}
func (m *ReleaseHostsHeldForTasksResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseHostsHeldForTasksResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseHostsHeldForTasksResponse_Error proto.InternalMessageInfo

func (m *ReleaseHostsHeldForTasksResponse_Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("peloton.private.hostmgr.hostsvc.HostFilterResult", HostFilterResult_name, HostFilterResult_value)
	proto.RegisterEnum("peloton.private.hostmgr.hostsvc.FilterHint_Ranking", FilterHint_Ranking_name, FilterHint_Ranking_value)
	proto.RegisterEnum("peloton.private.hostmgr.hostsvc.OfferOperation_Type", OfferOperation_Type_name, OfferOperation_Type_value)
	proto.RegisterType((*HostOffer)(nil), "peloton.private.hostmgr.hostsvc.HostOffer")
	proto.RegisterType((*HostInfo)(nil), "peloton.private.hostmgr.hostsvc.HostInfo")
	proto.RegisterType((*Reservation)(nil), "peloton.private.hostmgr.hostsvc.Reservation")
	proto.RegisterType((*CompletedReservation)(nil), "peloton.private.hostmgr.hostsvc.CompletedReservation")
	proto.RegisterType((*LaunchableTask)(nil), "peloton.private.hostmgr.hostsvc.LaunchableTask")
	proto.RegisterMapType((map[string]uint32)(nil), "peloton.private.hostmgr.hostsvc.LaunchableTask.PortsEntry")
	proto.RegisterType((*ExecutorOnAgent)(nil), "peloton.private.hostmgr.hostsvc.ExecutorOnAgent")
	proto.RegisterType((*QuantityControl)(nil), "peloton.private.hostmgr.hostsvc.QuantityControl")
	proto.RegisterType((*FilterHint)(nil), "peloton.private.hostmgr.hostsvc.FilterHint")
	proto.RegisterType((*FilterHint_Host)(nil), "peloton.private.hostmgr.hostsvc.FilterHint.Host")
	proto.RegisterType((*HostFilter)(nil), "peloton.private.hostmgr.hostsvc.HostFilter")
	proto.RegisterType((*ResourceConstraint)(nil), "peloton.private.hostmgr.hostsvc.ResourceConstraint")
	proto.RegisterType((*InvalidArgument)(nil), "peloton.private.hostmgr.hostsvc.InvalidArgument")
	proto.RegisterType((*InvalidTaskIDs)(nil), "peloton.private.hostmgr.hostsvc.InvalidTaskIDs")
	proto.RegisterType((*InvalidOffers)(nil), "peloton.private.hostmgr.hostsvc.InvalidOffers")
	proto.RegisterType((*InvalidExecutors)(nil), "peloton.private.hostmgr.hostsvc.InvalidExecutors")
	proto.RegisterType((*ShutdownFailure)(nil), "peloton.private.hostmgr.hostsvc.ShutdownFailure")
	proto.RegisterType((*LaunchFailure)(nil), "peloton.private.hostmgr.hostsvc.LaunchFailure")
	proto.RegisterType((*KillFailure)(nil), "peloton.private.hostmgr.hostsvc.KillFailure")
	proto.RegisterType((*InvalidHostFilter)(nil), "peloton.private.hostmgr.hostsvc.InvalidHostFilter")
	proto.RegisterType((*AcquireHostOffersFailure)(nil), "peloton.private.hostmgr.hostsvc.AcquireHostOffersFailure")
	proto.RegisterType((*GetHostsFailure)(nil), "peloton.private.hostmgr.hostsvc.GetHostsFailure")
	proto.RegisterType((*ClusterUnavailable)(nil), "peloton.private.hostmgr.hostsvc.ClusterUnavailable")
	proto.RegisterType((*OperationsFailure)(nil), "peloton.private.hostmgr.hostsvc.OperationsFailure")
	proto.RegisterType((*MesosMasterHostPortRequest)(nil), "peloton.private.hostmgr.hostsvc.MesosMasterHostPortRequest")
	proto.RegisterType((*MesosMasterHostPortResponse)(nil), "peloton.private.hostmgr.hostsvc.MesosMasterHostPortResponse")
	proto.RegisterType((*GetOutstandingOffersRequest)(nil), "peloton.private.hostmgr.hostsvc.GetOutstandingOffersRequest")
	proto.RegisterType((*GetOutstandingOffersResponse)(nil), "peloton.private.hostmgr.hostsvc.GetOutstandingOffersResponse")
	proto.RegisterType((*GetOutstandingOffersResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.GetOutstandingOffersResponse.Error")
	proto.RegisterType((*GetHostsByQueryRequest)(nil), "peloton.private.hostmgr.hostsvc.GetHostsByQueryRequest")
	proto.RegisterType((*GetHostsByQueryResponse)(nil), "peloton.private.hostmgr.hostsvc.GetHostsByQueryResponse")
	proto.RegisterType((*GetHostsByQueryResponse_Host)(nil), "peloton.private.hostmgr.hostsvc.GetHostsByQueryResponse.Host")
	proto.RegisterType((*WatchEventRequest)(nil), "peloton.private.hostmgr.hostsvc.WatchEventRequest")
	proto.RegisterType((*WatchEventResponse)(nil), "peloton.private.hostmgr.hostsvc.WatchEventResponse")
	proto.RegisterType((*CancelWatchRequest)(nil), "peloton.private.hostmgr.hostsvc.CancelWatchRequest")
	proto.RegisterType((*CancelWatchResponse)(nil), "peloton.private.hostmgr.hostsvc.CancelWatchResponse")
	proto.RegisterType((*NoOffersError)(nil), "peloton.private.hostmgr.hostsvc.NoOffersError")
	proto.RegisterType((*Volume)(nil), "peloton.private.hostmgr.hostsvc.Volume")
	proto.RegisterType((*OfferOperation)(nil), "peloton.private.hostmgr.hostsvc.OfferOperation")
	proto.RegisterType((*OfferOperation_Reserve)(nil), "peloton.private.hostmgr.hostsvc.OfferOperation.Reserve")
	proto.RegisterType((*OfferOperation_Create)(nil), "peloton.private.hostmgr.hostsvc.OfferOperation.Create")
	proto.RegisterType((*OfferOperation_Launch)(nil), "peloton.private.hostmgr.hostsvc.OfferOperation.Launch")
	proto.RegisterType((*OfferOperation_Destroy)(nil), "peloton.private.hostmgr.hostsvc.OfferOperation.Destroy")
	proto.RegisterType((*OfferOperation_Unreserve)(nil), "peloton.private.hostmgr.hostsvc.OfferOperation.Unreserve")
	proto.RegisterType((*OfferOperationsRequest)(nil), "peloton.private.hostmgr.hostsvc.OfferOperationsRequest")
	proto.RegisterType((*OfferOperationsResponse)(nil), "peloton.private.hostmgr.hostsvc.OfferOperationsResponse")
	proto.RegisterType((*OfferOperationsResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.OfferOperationsResponse.Error")
	proto.RegisterType((*AcquireHostOffersRequest)(nil), "peloton.private.hostmgr.hostsvc.AcquireHostOffersRequest")
	proto.RegisterType((*DisableKillTasksRequest)(nil), "peloton.private.hostmgr.hostsvc.DisableKillTasksRequest")
	proto.RegisterType((*DisableKillTasksResponse)(nil), "peloton.private.hostmgr.hostsvc.DisableKillTasksResponse")
	proto.RegisterType((*GetHostsRequest)(nil), "peloton.private.hostmgr.hostsvc.GetHostsRequest")
	proto.RegisterType((*AcquireHostOffersResponse)(nil), "peloton.private.hostmgr.hostsvc.AcquireHostOffersResponse")
	proto.RegisterMapType((map[string]uint32)(nil), "peloton.private.hostmgr.hostsvc.AcquireHostOffersResponse.FilterResultCountsEntry")
	proto.RegisterType((*AcquireHostOffersResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.AcquireHostOffersResponse.Error")
	proto.RegisterType((*GetHostsResponse)(nil), "peloton.private.hostmgr.hostsvc.GetHostsResponse")
	proto.RegisterType((*GetHostsResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.GetHostsResponse.Error")
	proto.RegisterType((*ReleaseHostOffersRequest)(nil), "peloton.private.hostmgr.hostsvc.ReleaseHostOffersRequest")
	proto.RegisterType((*ReleaseHostOffersResponse)(nil), "peloton.private.hostmgr.hostsvc.ReleaseHostOffersResponse")
	proto.RegisterType((*ReleaseHostOffersResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.ReleaseHostOffersResponse.Error")
	proto.RegisterType((*LaunchTasksRequest)(nil), "peloton.private.hostmgr.hostsvc.LaunchTasksRequest")
	proto.RegisterType((*LaunchTasksResponse)(nil), "peloton.private.hostmgr.hostsvc.LaunchTasksResponse")
	proto.RegisterType((*LaunchTasksResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.LaunchTasksResponse.Error")
	proto.RegisterType((*ShutdownExecutorsRequest)(nil), "peloton.private.hostmgr.hostsvc.ShutdownExecutorsRequest")
	proto.RegisterType((*ShutdownExecutorsResponse)(nil), "peloton.private.hostmgr.hostsvc.ShutdownExecutorsResponse")
	proto.RegisterType((*ShutdownExecutorsResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.ShutdownExecutorsResponse.Error")
	proto.RegisterType((*KillAndReserveTasksRequest)(nil), "peloton.private.hostmgr.hostsvc.KillAndReserveTasksRequest")
	proto.RegisterType((*KillAndReserveTasksRequest_Entry)(nil), "peloton.private.hostmgr.hostsvc.KillAndReserveTasksRequest.Entry")
	proto.RegisterType((*KillAndReserveTasksResponse)(nil), "peloton.private.hostmgr.hostsvc.KillAndReserveTasksResponse")
	proto.RegisterType((*KillAndReserveTasksResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.KillAndReserveTasksResponse.Error")
	proto.RegisterType((*KillTasksRequest)(nil), "peloton.private.hostmgr.hostsvc.KillTasksRequest")
	proto.RegisterType((*KillTasksResponse)(nil), "peloton.private.hostmgr.hostsvc.KillTasksResponse")
	proto.RegisterType((*KillTasksResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.KillTasksResponse.Error")
	proto.RegisterType((*ReserveResourcesRequest)(nil), "peloton.private.hostmgr.hostsvc.ReserveResourcesRequest")
	proto.RegisterType((*ReserveResourcesResponse)(nil), "peloton.private.hostmgr.hostsvc.ReserveResourcesResponse")
	proto.RegisterType((*UnreserveResourcesRequest)(nil), "peloton.private.hostmgr.hostsvc.UnreserveResourcesRequest")
	proto.RegisterType((*UnreserveResourcesResponse)(nil), "peloton.private.hostmgr.hostsvc.UnreserveResourcesResponse")
	proto.RegisterType((*CreateVolumesRequest)(nil), "peloton.private.hostmgr.hostsvc.CreateVolumesRequest")
	proto.RegisterType((*CreateVolumesResponse)(nil), "peloton.private.hostmgr.hostsvc.CreateVolumesResponse")
	proto.RegisterType((*DestroyVolumesRequest)(nil), "peloton.private.hostmgr.hostsvc.DestroyVolumesRequest")
	proto.RegisterType((*DestroyVolumesResponse)(nil), "peloton.private.hostmgr.hostsvc.DestroyVolumesResponse")
	proto.RegisterType((*Resource)(nil), "peloton.private.hostmgr.hostsvc.Resource")
	proto.RegisterType((*ClusterCapacityRequest)(nil), "peloton.private.hostmgr.hostsvc.ClusterCapacityRequest")
	proto.RegisterType((*ClusterCapacityResponse)(nil), "peloton.private.hostmgr.hostsvc.ClusterCapacityResponse")
	proto.RegisterType((*ClusterCapacityResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.ClusterCapacityResponse.Error")
	proto.RegisterType((*ReserveHostsRequest)(nil), "peloton.private.hostmgr.hostsvc.ReserveHostsRequest")
	proto.RegisterType((*ReservationFailed)(nil), "peloton.private.hostmgr.hostsvc.ReservationFailed")
	proto.RegisterType((*ReservationAlreadyExist)(nil), "peloton.private.hostmgr.hostsvc.ReservationAlreadyExist")
	proto.RegisterType((*HostUnavailable)(nil), "peloton.private.hostmgr.hostsvc.HostUnavailable")
	proto.RegisterType((*HostAlreadyReserved)(nil), "peloton.private.hostmgr.hostsvc.HostAlreadyReserved")
	proto.RegisterType((*ReserveHostsResponse)(nil), "peloton.private.hostmgr.hostsvc.ReserveHostsResponse")
	proto.RegisterType((*ReserveHostsResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.ReserveHostsResponse.Error")
	proto.RegisterType((*GetCompletedReservationRequest)(nil), "peloton.private.hostmgr.hostsvc.GetCompletedReservationRequest")
	proto.RegisterType((*GetCompletedReservationResponse)(nil), "peloton.private.hostmgr.hostsvc.GetCompletedReservationResponse")
	proto.RegisterType((*GetCompletedReservationResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.GetCompletedReservationResponse.Error")
	proto.RegisterType((*NotFound)(nil), "peloton.private.hostmgr.hostsvc.NotFound")
	proto.RegisterType((*GetDrainingHostsRequest)(nil), "peloton.private.hostmgr.hostsvc.GetDrainingHostsRequest")
	proto.RegisterType((*GetDrainingHostsResponse)(nil), "peloton.private.hostmgr.hostsvc.GetDrainingHostsResponse")
	proto.RegisterType((*MarkHostsDrainedRequest)(nil), "peloton.private.hostmgr.hostsvc.MarkHostsDrainedRequest")
	proto.RegisterType((*MarkHostsDrainedResponse)(nil), "peloton.private.hostmgr.hostsvc.MarkHostsDrainedResponse")
	proto.RegisterType((*GetMesosAgentInfoRequest)(nil), "peloton.private.hostmgr.hostsvc.GetMesosAgentInfoRequest")
	proto.RegisterType((*HostNotFound)(nil), "peloton.private.hostmgr.hostsvc.HostNotFound")
	proto.RegisterType((*GetMesosAgentInfoResponse)(nil), "peloton.private.hostmgr.hostsvc.GetMesosAgentInfoResponse")
	proto.RegisterType((*GetMesosAgentInfoResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.GetMesosAgentInfoResponse.Error")
	proto.RegisterType((*ReleaseHostsHeldForTasksRequest)(nil), "peloton.private.hostmgr.hostsvc.ReleaseHostsHeldForTasksRequest")
	proto.RegisterType((*ReleaseHostsHeldForTasksResponse)(nil), "peloton.private.hostmgr.hostsvc.ReleaseHostsHeldForTasksResponse")
	proto.RegisterType((*ReleaseHostsHeldForTasksResponse_Error)(nil), "peloton.private.hostmgr.hostsvc.ReleaseHostsHeldForTasksResponse.Error")
}

func init() {
	proto.RegisterFile("peloton/private/hostmgr/hostsvc/hostsvc.proto", fileDescriptor_62608de4acad125a)
}

var fileDescriptor_62608de4acad125a = []byte{
	// 3705 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5b, 0x4f, 0x6f, 0x1b, 0x59,
	0x72, 0xdf, 0xa6, 0x28, 0x52, 0x2c, 0x59, 0x16, 0xf5, 0xa4, 0xb1, 0xe8, 0xb6, 0x33, 0xf6, 0xf4,
	0x4c, 0xb0, 0xf6, 0xcc, 0x98, 0x92, 0x2d, 0xef, 0xc8, 0xe3, 0x59, 0x8f, 0x87, 0x43, 0x51, 0x12,
	0x67, 0x24, 0xd2, 0x7e, 0xa4, 0xec, 0xdd, 0xc9, 0x2e, 0x94, 0x1e, 0xf2, 0x49, 0xea, 0x88, 0xec,
	0xd6, 0x74, 0x37, 0x35, 0x16, 0x76, 0x13, 0x24, 0x9b, 0x00, 0x03, 0x04, 0x58, 0x64, 0x93, 0x05,
	0x72, 0x4a, 0x90, 0x1c, 0x72, 0x4a, 0x2e, 0x41, 0x80, 0x00, 0xc1, 0x22, 0xc8, 0x21, 0x97, 0x5c,
	0x72, 0xc9, 0x21, 0x87, 0xe4, 0x23, 0xe4, 0x92, 0xbd, 0x04, 0x41, 0x6e, 0xc1, 0xfb, 0xd7, 0xec,
	0x66, 0x77, 0x93, 0xdd, 0xd4, 0x66, 0x80, 0xec, 0xc5, 0x62, 0x77, 0x57, 0xfd, 0xaa, 0x5e, 0xbd,
	0x7a, 0xf5, 0xaa, 0xea, 0x3d, 0xc3, 0xbd, 0x33, 0xd2, 0xb3, 0x5c, 0xcb, 0x5c, 0x3b, 0xb3, 0x8d,
	0x73, 0xdd, 0x25, 0x6b, 0x27, 0x96, 0xe3, 0xf6, 0x8f, 0x6d, 0xf6, 0xd7, 0x39, 0xef, 0xc8, 0xbf,
	0xe5, 0x33, 0xdb, 0x72, 0x2d, 0x74, 0x4b, 0x90, 0x97, 0x05, 0x79, 0x59, 0x90, 0x97, 0x05, 0x99,
	0xba, 0xd2, 0x27, 0x8e, 0xe5, 0xac, 0x9d, 0xdf, 0x5f, 0x63, 0x3f, 0x38, 0x9b, 0x7a, 0x73, 0xf8,
	0x56, 0x77, 0x5c, 0x62, 0x8b, 0x3f, 0xf2, 0xab, 0xd4, 0x41, 0x3f, 0x33, 0xd6, 0xce, 0xd7, 0xd7,
	0x86, 0x32, 0xe8, 0xd7, 0xd7, 0x47, 0xbe, 0xba, 0xba, 0x73, 0xca, 0xfe, 0x11, 0xdf, 0xdf, 0x1c,
	0x1d, 0x81, 0x4d, 0x1c, 0x3a, 0x00, 0xfe, 0x47, 0x10, 0x85, 0x86, 0x49, 0xce, 0x89, 0xe9, 0x3a,
	0xae, 0x4d, 0xf4, 0xbe, 0xff, 0x37, 0x27, 0xd7, 0x7e, 0xae, 0x40, 0x61, 0xd7, 0x72, 0xdc, 0xe6,
	0xd1, 0x11, 0xb1, 0x91, 0x0a, 0x73, 0x74, 0x78, 0xa6, 0xde, 0x27, 0x25, 0xe5, 0xb6, 0x72, 0xa7,
	0x80, 0xbd, 0x67, 0xf4, 0x0e, 0xe4, 0xf5, 0x63, 0x62, 0xba, 0xf5, 0x6e, 0x29, 0x73, 0x5b, 0xb9,
	0x33, 0xff, 0x60, 0xa9, 0xcc, 0x07, 0x7e, 0x7e, 0xbf, 0x5c, 0x61, 0x1f, 0xb6, 0xb0, 0xa4, 0x40,
	0xeb, 0x50, 0xb0, 0x89, 0x63, 0x0d, 0xec, 0x0e, 0x71, 0x4a, 0x33, 0xb7, 0x67, 0xee, 0xcc, 0x3f,
	0x40, 0x43, 0x72, 0x2c, 0x3e, 0xe1, 0x21, 0x11, 0xda, 0x00, 0xd0, 0x5d, 0xd7, 0x36, 0x3e, 0x1f,
	0xb8, 0xc4, 0x29, 0x65, 0x19, 0xcb, 0xb2, 0x4f, 0x82, 0xfc, 0x86, 0x7d, 0x64, 0x68, 0x03, 0x32,
	0x46, 0xb7, 0x34, 0xcb, 0xd4, 0x79, 0xb3, 0x2c, 0xad, 0xa9, 0x9f, 0x19, 0xe5, 0xf3, 0x75, 0xef,
	0xd1, 0x1b, 0x5e, 0x7d, 0x0b, 0x67, 0x8c, 0xae, 0xf6, 0x33, 0x05, 0xe6, 0xe8, 0xbb, 0xba, 0x79,
	0x64, 0xfd, 0x7f, 0x1b, 0xb1, 0xf6, 0xdb, 0x0a, 0xcc, 0x63, 0xe2, 0x10, 0xfb, 0x5c, 0x77, 0x0d,
	0xcb, 0x44, 0x4f, 0x61, 0x96, 0x39, 0x64, 0x49, 0x61, 0xfc, 0x77, 0xcb, 0x13, 0xdc, 0xb6, 0x2c,
	0x47, 0x8e, 0x39, 0x1f, 0x5a, 0x87, 0x2c, 0x75, 0x31, 0x31, 0xc2, 0x9b, 0x21, 0x7e, 0xe1, 0x5c,
	0x6d, 0xdd, 0x39, 0xc5, 0x8c, 0x52, 0xfb, 0x17, 0x05, 0x56, 0xaa, 0x56, 0xff, 0xac, 0x47, 0x5c,
	0xd2, 0xf5, 0xeb, 0xf2, 0x04, 0xb2, 0x14, 0x93, 0xd9, 0x31, 0x95, 0x2a, 0x8c, 0x2d, 0xbd, 0x26,
	0x68, 0x17, 0x0a, 0x27, 0x72, 0x72, 0x4b, 0x33, 0x8c, 0xed, 0xed, 0x44, 0x52, 0x19, 0x07, 0x1e,
	0x32, 0x6b, 0x3f, 0xcf, 0xc0, 0xd5, 0x3d, 0x7d, 0x60, 0x76, 0x4e, 0xf4, 0xcf, 0x7b, 0x84, 0x8a,
	0x40, 0x77, 0x20, 0x47, 0x85, 0xd4, 0xbb, 0x62, 0x3c, 0xc5, 0xe1, 0xd4, 0xd0, 0xef, 0xf5, 0x2d,
	0x2c, 0xbe, 0xa3, 0x4d, 0xc8, 0x75, 0x2c, 0xf3, 0xc8, 0x38, 0x16, 0xaa, 0xdf, 0x1a, 0xf5, 0x44,
	0xb6, 0x86, 0x29, 0x53, 0x95, 0x91, 0x61, 0x41, 0x8e, 0x9e, 0xc1, 0xec, 0x99, 0x65, 0xbb, 0xd2,
	0x5f, 0x1e, 0x4f, 0xd4, 0x3d, 0xa8, 0x62, 0xf9, 0x19, 0x65, 0xae, 0x99, 0xae, 0x7d, 0x81, 0x39,
	0x10, 0x7a, 0x0a, 0xb9, 0x73, 0xab, 0x37, 0xe8, 0x93, 0x52, 0x96, 0xa9, 0xf2, 0xcd, 0x89, 0x90,
	0x2f, 0x18, 0x39, 0x16, 0x6c, 0xa8, 0xec, 0x5b, 0x51, 0xaf, 0xc7, 0xad, 0x28, 0x31, 0xfe, 0x8c,
	0xd1, 0x55, 0x1f, 0x01, 0x0c, 0xb5, 0x40, 0x45, 0x98, 0x39, 0x25, 0x17, 0x62, 0x21, 0xd1, 0x9f,
	0x68, 0x05, 0x66, 0xcf, 0xf5, 0xde, 0x80, 0x30, 0xd3, 0x2c, 0x60, 0xfe, 0xf0, 0x38, 0xf3, 0x48,
	0xd1, 0x5c, 0x58, 0xac, 0xbd, 0x22, 0x9d, 0x81, 0x6b, 0xd9, 0x4d, 0x93, 0x2d, 0x27, 0xf4, 0x10,
	0x80, 0x88, 0x57, 0x9e, 0xd9, 0x57, 0x86, 0x66, 0x97, 0xe4, 0xf5, 0x2d, 0xec, 0xa3, 0x4b, 0xb5,
	0x4c, 0xb5, 0x7b, 0xb0, 0xf8, 0x7c, 0xa0, 0x9b, 0xae, 0xe1, 0x5e, 0x54, 0x2d, 0xd3, 0xb5, 0xad,
	0x1e, 0x0d, 0x01, 0x7d, 0xfd, 0xd5, 0xae, 0x58, 0x45, 0x54, 0x4b, 0xef, 0x59, 0xfb, 0xd1, 0x0c,
	0xc0, 0xb6, 0xd1, 0x73, 0x89, 0xbd, 0x6b, 0x98, 0x2e, 0xda, 0xe3, 0xd1, 0x82, 0xfe, 0x16, 0x0b,
	0x6e, 0x7d, 0xa2, 0x81, 0x87, 0xec, 0xcc, 0xf5, 0xb0, 0x87, 0x80, 0x9a, 0x30, 0x67, 0xeb, 0xe6,
	0x29, 0x43, 0xa3, 0x9a, 0x5f, 0x7d, 0xb0, 0x91, 0x06, 0x0d, 0xeb, 0xe6, 0xa9, 0x61, 0x1e, 0x63,
	0x0f, 0x44, 0xfd, 0x0c, 0xb2, 0x54, 0xc4, 0xd8, 0xa0, 0xf6, 0x9e, 0x70, 0xeb, 0x2d, 0x61, 0xac,
	0x49, 0x93, 0x2c, 0xa8, 0xb5, 0x0b, 0xc8, 0x0b, 0x81, 0xe8, 0x16, 0xdc, 0xd8, 0xae, 0xef, 0xb5,
	0x6b, 0xf8, 0x70, 0xb7, 0xde, 0x68, 0x1f, 0xe2, 0x4a, 0xe3, 0xd3, 0x7a, 0x63, 0xe7, 0xb0, 0xde,
	0x78, 0x51, 0xd9, 0xab, 0x6f, 0x15, 0xbf, 0x81, 0x5e, 0x07, 0x35, 0x8a, 0x00, 0x57, 0x1a, 0x5b,
	0xcd, 0xfd, 0xa2, 0x82, 0xee, 0xc1, 0xdd, 0xa8, 0xef, 0x7b, 0xb5, 0x4a, 0xab, 0x7d, 0x58, 0x79,
	0x51, 0xa9, 0xef, 0x55, 0x3e, 0xde, 0xab, 0x1d, 0x6e, 0xd7, 0x71, 0xab, 0x5d, 0xcc, 0x68, 0xff,
	0x9a, 0x01, 0xa0, 0xe3, 0xe2, 0x63, 0x47, 0x1d, 0x40, 0x32, 0x88, 0x56, 0x2d, 0xd3, 0x71, 0x6d,
	0x5d, 0x1a, 0x70, 0x3e, 0x81, 0x01, 0x71, 0x88, 0x15, 0x47, 0xc0, 0xa1, 0x16, 0xac, 0x38, 0x9d,
	0x13, 0xd2, 0x1d, 0xf4, 0x0c, 0xf3, 0xd8, 0x27, 0x66, 0x66, 0xcc, 0x0a, 0xf7, 0x41, 0x46, 0x32,
	0x53, 0xf7, 0xf9, 0x42, 0x38, 0x9f, 0x58, 0x9f, 0x93, 0xdd, 0x67, 0xc4, 0x5b, 0xb1, 0x87, 0x80,
	0x9e, 0x42, 0xf6, 0x84, 0xaa, 0xc4, 0x17, 0xeb, 0x3b, 0x29, 0x5c, 0x07, 0x33, 0x46, 0xed, 0xc7,
	0x0a, 0xa0, 0xb0, 0x39, 0xd0, 0x13, 0xc8, 0xf7, 0x0d, 0xd3, 0xe8, 0x0f, 0xfa, 0x62, 0x09, 0xbe,
	0x19, 0x39, 0x5a, 0x1f, 0x27, 0x8d, 0x69, 0x92, 0x87, 0x3a, 0x9f, 0x39, 0xe8, 0xb3, 0xa0, 0x20,
	0x16, 0xbd, 0xf7, 0x8c, 0x6e, 0xd2, 0x4d, 0xf2, 0xdc, 0xea, 0xd0, 0x08, 0xc6, 0x4c, 0x39, 0x87,
	0x87, 0x2f, 0xe8, 0xde, 0xb6, 0x58, 0x37, 0xcf, 0xf5, 0x9e, 0xd1, 0xad, 0xd8, 0xc7, 0x83, 0x3e,
	0x0d, 0x09, 0x25, 0xc8, 0xf7, 0x89, 0xe3, 0xe8, 0xc7, 0xd2, 0x93, 0xe5, 0x23, 0x6a, 0xc1, 0x15,
	0x83, 0x13, 0x53, 0x4f, 0xa5, 0xb2, 0xe8, 0x7a, 0x5c, 0x4b, 0x19, 0x43, 0x71, 0x00, 0x44, 0x7b,
	0x01, 0x57, 0xeb, 0xc3, 0xe7, 0xfa, 0x96, 0x33, 0x46, 0x81, 0xb7, 0x21, 0xcf, 0x37, 0x00, 0x29,
	0x3b, 0xbc, 0x43, 0x48, 0x02, 0xed, 0x2e, 0x2c, 0x08, 0x5c, 0xb6, 0xdf, 0x8c, 0x81, 0xd5, 0x7e,
	0x08, 0x45, 0x41, 0x2a, 0xe3, 0xdd, 0x38, 0x25, 0x1a, 0x50, 0x90, 0xa1, 0x50, 0xaa, 0x31, 0xd9,
	0xa7, 0x46, 0xe2, 0x2e, 0x1e, 0x42, 0x68, 0x3f, 0x80, 0xc5, 0xd6, 0xc9, 0xc0, 0xed, 0x5a, 0x5f,
	0x9a, 0xdb, 0xba, 0xd1, 0x1b, 0xd8, 0xe4, 0x6b, 0x14, 0x7e, 0x17, 0x16, 0xf8, 0xec, 0x4c, 0x14,
	0xad, 0xb5, 0x60, 0xfe, 0x53, 0xa3, 0xd7, 0x9b, 0xac, 0x63, 0x9a, 0x59, 0x72, 0x61, 0x49, 0x98,
	0xde, 0x17, 0x6e, 0xe2, 0xa1, 0x6b, 0x90, 0x17, 0xce, 0x23, 0xa2, 0xcf, 0x3b, 0x89, 0x92, 0x0f,
	0x8e, 0x8b, 0x25, 0xaf, 0xf6, 0x10, 0x4a, 0x95, 0xce, 0x17, 0x03, 0xc3, 0x26, 0x5e, 0x6a, 0xe2,
	0x4c, 0x36, 0xc0, 0x3b, 0xb0, 0xb8, 0x43, 0x5c, 0xb6, 0x4b, 0x4d, 0x26, 0x2e, 0x03, 0xaa, 0xf6,
	0x06, 0xb4, 0x10, 0x39, 0x30, 0xf5, 0x73, 0xdd, 0xe8, 0x51, 0xf7, 0x1f, 0x43, 0x7f, 0x0f, 0x96,
	0x9a, 0x67, 0xc4, 0x66, 0x69, 0x5d, 0x02, 0xf8, 0x9b, 0xa0, 0xee, 0x53, 0x9b, 0xee, 0xb3, 0x5a,
	0x87, 0xea, 0x44, 0x97, 0x3b, 0x26, 0x5f, 0x0c, 0x88, 0xe3, 0x6a, 0xfb, 0x70, 0x23, 0xf2, 0xab,
	0x73, 0x66, 0x99, 0x0e, 0x19, 0xbb, 0x59, 0x21, 0xc8, 0xd2, 0xbc, 0x86, 0x99, 0xb7, 0x80, 0xd9,
	0x6f, 0xed, 0x57, 0xe0, 0xc6, 0x0e, 0x71, 0x9b, 0x03, 0xd7, 0x71, 0x75, 0xb3, 0x6b, 0x98, 0xc7,
	0xdc, 0x62, 0x52, 0xda, 0x7f, 0x2b, 0x70, 0x33, 0xfa, 0xbb, 0x90, 0xf7, 0x4d, 0xc8, 0x59, 0xec,
	0x8d, 0xd8, 0xc1, 0x17, 0x87, 0xfe, 0xc0, 0xd3, 0x42, 0xf1, 0x19, 0x7d, 0x17, 0x66, 0x89, 0x6d,
	0x5b, 0xb6, 0x98, 0xdc, 0xea, 0xc4, 0xc9, 0x1d, 0x27, 0xb6, 0x5c, 0xa3, 0x50, 0x98, 0x23, 0xaa,
	0x2d, 0x98, 0x65, 0xcf, 0xe8, 0x13, 0x98, 0x33, 0xad, 0xa6, 0x54, 0x87, 0x8a, 0x29, 0x4f, 0x14,
	0xd3, 0x10, 0x0c, 0x1c, 0xd1, 0xe3, 0xd7, 0xfe, 0x50, 0x81, 0x6b, 0xd2, 0x25, 0x3e, 0xbe, 0x78,
	0x3e, 0x20, 0xf6, 0x85, 0x30, 0x0a, 0x7a, 0x0a, 0x73, 0x72, 0x8f, 0x4b, 0x13, 0xd3, 0x3d, 0x26,
	0x3a, 0xf7, 0x9d, 0xfe, 0xd9, 0x1e, 0x71, 0x78, 0x4c, 0x9f, 0xc3, 0xf2, 0x91, 0x86, 0x74, 0x39,
	0x5d, 0x3c, 0x8f, 0x2d, 0xe0, 0xe1, 0x0b, 0xed, 0x4f, 0x32, 0xb0, 0x1a, 0xd2, 0x49, 0x4c, 0x44,
	0x2b, 0x58, 0xba, 0x3c, 0x49, 0x62, 0xdf, 0x28, 0x20, 0x9e, 0x56, 0x71, 0x2c, 0xf5, 0xaf, 0x94,
	0x04, 0x39, 0x50, 0xa0, 0x56, 0xcb, 0x24, 0xa9, 0xd5, 0xae, 0x41, 0xce, 0x71, 0x75, 0x77, 0xe0,
	0xb0, 0x5d, 0xab, 0x80, 0xc5, 0x13, 0x7a, 0x02, 0x70, 0x42, 0x7a, 0xdd, 0x43, 0x97, 0x6d, 0x41,
	0xbc, 0x86, 0x9b, 0x94, 0x51, 0x15, 0x28, 0x07, 0xdf, 0x6e, 0x96, 0x61, 0xe9, 0xa5, 0xee, 0x76,
	0x4e, 0x6a, 0xb4, 0x2e, 0x97, 0x1e, 0x7c, 0x0a, 0xc8, 0xff, 0x52, 0x58, 0xeb, 0x3a, 0xcc, 0x7d,
	0x49, 0xdf, 0x1e, 0x1a, 0x5d, 0xb9, 0xfc, 0xd8, 0x73, 0xbd, 0x8b, 0x1e, 0x43, 0x8e, 0x17, 0xf6,
	0x62, 0x2c, 0x5a, 0xc8, 0x92, 0xfe, 0xba, 0x9f, 0xc3, 0x0a, 0x0e, 0x6d, 0x0d, 0x50, 0x55, 0x37,
	0x3b, 0xa4, 0xc7, 0x44, 0x4a, 0x7f, 0x89, 0x17, 0xa6, 0xbd, 0x06, 0xcb, 0x01, 0x06, 0xae, 0x1e,
	0x0d, 0xdd, 0x01, 0xbf, 0x1c, 0x13, 0x2d, 0x7e, 0xa2, 0x40, 0x8e, 0x57, 0x1d, 0x68, 0x9d, 0x55,
	0x1b, 0xdc, 0x23, 0x6f, 0xc7, 0x99, 0x8d, 0xd3, 0xf2, 0x7a, 0x03, 0xbd, 0x05, 0x0b, 0x1d, 0xcb,
	0x74, 0x75, 0xc3, 0x24, 0xf6, 0x33, 0xdd, 0x3d, 0x11, 0xa1, 0x21, 0xf8, 0x12, 0x95, 0x7d, 0xfe,
	0xce, 0x33, 0xb6, 0xa8, 0xf9, 0xf5, 0x68, 0xb4, 0xbf, 0xc9, 0xc3, 0x55, 0xa6, 0xbc, 0x17, 0xf5,
	0xd0, 0x2e, 0x64, 0xdd, 0x8b, 0x33, 0xae, 0xfc, 0xd5, 0x07, 0x0f, 0x27, 0x3a, 0x67, 0x90, 0xbd,
	0xdc, 0xbe, 0x38, 0x23, 0x98, 0x21, 0xa0, 0x0f, 0x61, 0xc9, 0x1e, 0x56, 0xc9, 0x7b, 0xfa, 0xe7,
	0xa4, 0xe7, 0x88, 0x98, 0xe2, 0xdb, 0x8b, 0xf8, 0x7b, 0x1c, 0x26, 0x45, 0xcf, 0x21, 0xcf, 0x5f,
	0xca, 0xb1, 0x6c, 0xa6, 0x55, 0x86, 0x17, 0xe9, 0x04, 0x4b, 0x1c, 0xd4, 0x80, 0x5c, 0xc7, 0x26,
	0xba, 0x2b, 0xcb, 0xc4, 0xf7, 0xd2, 0x22, 0x56, 0x19, 0x37, 0x16, 0x28, 0x14, 0xaf, 0xc7, 0x36,
	0x6e, 0x91, 0x8c, 0xa6, 0xc6, 0xe3, 0xdb, 0x3e, 0x16, 0x28, 0x74, 0xc8, 0x5d, 0xe2, 0xb8, 0xb6,
	0x75, 0x51, 0xca, 0x4d, 0x37, 0xe4, 0x2d, 0xce, 0x8e, 0x25, 0x0e, 0x7a, 0x09, 0x85, 0x81, 0x29,
	0xed, 0x98, 0x67, 0xa0, 0xef, 0xa7, 0x05, 0x3d, 0x90, 0x00, 0x78, 0x88, 0xa5, 0x7e, 0x00, 0x79,
	0x61, 0xdf, 0x60, 0x5c, 0x51, 0x12, 0xc4, 0x15, 0xb5, 0x0e, 0x39, 0x6e, 0x4a, 0x5f, 0xe5, 0xae,
	0x4c, 0x55, 0xb9, 0xab, 0x4d, 0xc8, 0x71, 0x2b, 0xa2, 0x1a, 0xcc, 0xf2, 0x78, 0xa4, 0x4c, 0x97,
	0x12, 0x73, 0x6e, 0xf5, 0x57, 0x21, 0x2f, 0xac, 0x48, 0x83, 0xe9, 0xb9, 0x58, 0x85, 0x32, 0x98,
	0xca, 0x67, 0xf5, 0x0d, 0x28, 0x78, 0x76, 0xa1, 0xe5, 0x7e, 0x8f, 0x7a, 0xad, 0xa0, 0xe2, 0x0f,
	0x5a, 0x1b, 0xb2, 0x74, 0x3d, 0xa0, 0x79, 0xc8, 0x1f, 0x34, 0x3e, 0x6d, 0x34, 0x5f, 0x36, 0x8a,
	0xdf, 0x40, 0x00, 0xb9, 0xbd, 0xca, 0x41, 0xa3, 0xba, 0x5b, 0x54, 0xe8, 0x07, 0x5c, 0x6b, 0xd5,
	0xf0, 0x8b, 0x5a, 0x31, 0x83, 0x16, 0xa0, 0x70, 0xd0, 0x90, 0x8f, 0x33, 0x94, 0xae, 0x8a, 0x6b,
	0x95, 0x76, 0xad, 0x98, 0xa5, 0x74, 0x5b, 0xb5, 0x56, 0x1b, 0x37, 0xbf, 0x5b, 0x9c, 0xd5, 0x7e,
	0xa6, 0xc0, 0xb5, 0xe0, 0x04, 0xc9, 0x24, 0x00, 0x35, 0x01, 0x2c, 0xef, 0x65, 0x62, 0x33, 0x04,
	0xc1, 0xb0, 0x0f, 0x22, 0xb0, 0x9b, 0x64, 0x46, 0x76, 0x13, 0xde, 0x84, 0x9c, 0x49, 0xd7, 0x84,
	0xfc, 0x9f, 0x0c, 0xac, 0x86, 0x94, 0x17, 0xa1, 0xbe, 0x2d, 0x13, 0x0f, 0xee, 0x09, 0x1f, 0xa6,
	0x54, 0x3c, 0x26, 0xe7, 0xf8, 0x2a, 0x23, 0x93, 0x8e, 0x3d, 0xc8, 0x1f, 0xf1, 0x9c, 0x4e, 0x48,
	0x78, 0x30, 0x59, 0xc2, 0x68, 0x36, 0x88, 0x25, 0x04, 0xfa, 0x0c, 0x16, 0x8d, 0x60, 0xd1, 0x26,
	0x82, 0xdb, 0xe4, 0x52, 0x60, 0xa4, 0xd8, 0xc3, 0xa3, 0x40, 0xa8, 0x0d, 0x0b, 0x86, 0xbf, 0x6c,
	0x12, 0x56, 0x2e, 0x27, 0x45, 0x16, 0x39, 0x58, 0x10, 0x44, 0x3b, 0x8c, 0x48, 0xb8, 0xa5, 0xe7,
	0x54, 0x21, 0x77, 0xc4, 0xf2, 0x73, 0x61, 0x9a, 0x54, 0x29, 0xbd, 0x60, 0xd5, 0xae, 0xc3, 0xea,
	0x96, 0xe1, 0xd0, 0xf5, 0x44, 0x6b, 0x14, 0xb6, 0xd5, 0xcb, 0xcd, 0x5d, 0x85, 0x52, 0xf8, 0x93,
	0xd8, 0x43, 0x5f, 0x0c, 0x53, 0xfa, 0x5f, 0xa8, 0x3a, 0xff, 0x9c, 0x85, 0xeb, 0x11, 0x03, 0x16,
	0xde, 0xf6, 0x22, 0xe8, 0x6d, 0x1f, 0x4d, 0x94, 0x10, 0x0b, 0x15, 0xf0, 0x37, 0xf4, 0x09, 0x80,
	0xd7, 0x5f, 0x95, 0x99, 0x49, 0x9a, 0xee, 0xac, 0x8f, 0x1b, 0xfd, 0x48, 0x01, 0xc4, 0x07, 0x83,
	0x89, 0x33, 0xe8, 0xb9, 0x55, 0x6b, 0x60, 0x7a, 0x6d, 0x53, 0x7c, 0x09, 0x8d, 0xb7, 0x43, 0xa0,
	0xbc, 0x9d, 0x1a, 0x21, 0x4d, 0xfd, 0x07, 0x45, 0x2e, 0xa0, 0x5f, 0x87, 0x25, 0x63, 0xb4, 0x4e,
	0x4c, 0xbc, 0x94, 0x42, 0x15, 0x26, 0x0e, 0x83, 0xa1, 0xd6, 0x70, 0x89, 0x66, 0x12, 0xee, 0x55,
	0x71, 0x35, 0xa4, 0xb7, 0x52, 0xd5, 0x1a, 0xac, 0xc6, 0x8c, 0x37, 0x55, 0xe3, 0xf6, 0xdf, 0x33,
	0x50, 0x1c, 0xfa, 0xa9, 0xf0, 0xa2, 0xfd, 0xa0, 0x17, 0x6d, 0x26, 0x4e, 0xe6, 0xa3, 0x9d, 0xc7,
	0x3b, 0xd6, 0xc8, 0x4c, 0x77, 0xac, 0xa1, 0xfe, 0xed, 0xd7, 0x38, 0x59, 0x9f, 0x8c, 0x4e, 0xd6,
	0x7a, 0xe2, 0xd1, 0x8f, 0xce, 0x91, 0x76, 0x04, 0x25, 0x4c, 0x7a, 0x44, 0x77, 0x22, 0x62, 0x53,
	0x70, 0x45, 0x29, 0x97, 0x59, 0x51, 0xda, 0x0f, 0xe1, 0x7a, 0x84, 0x9c, 0x69, 0x43, 0x42, 0x2c,
	0x54, 0x70, 0x0b, 0xca, 0x8b, 0x39, 0xd1, 0xfe, 0x4d, 0x01, 0xc4, 0x93, 0x0e, 0x7f, 0x70, 0x1c,
	0x5b, 0xb3, 0x79, 0x49, 0x4d, 0xe6, 0x32, 0x49, 0x8d, 0xff, 0xb0, 0x60, 0x66, 0xe2, 0x99, 0x1e,
	0xdf, 0xd9, 0xb3, 0xa9, 0x77, 0xf6, 0xe5, 0xc0, 0xd8, 0x84, 0x51, 0x9f, 0x05, 0x8d, 0x9a, 0xf4,
	0xb0, 0x27, 0x00, 0x12, 0x34, 0xe7, 0x1f, 0x78, 0x3b, 0x7a, 0xc4, 0x1e, 0xac, 0xfc, 0x02, 0xf7,
	0xe0, 0x9e, 0xbf, 0x29, 0x27, 0x7c, 0xbc, 0x9c, 0x50, 0x7f, 0xe9, 0xe1, 0x41, 0x90, 0xff, 0xa3,
	0x9d, 0xfd, 0x37, 0xa0, 0x24, 0xbb, 0x97, 0x5e, 0xf3, 0x54, 0x3a, 0x57, 0xa0, 0x59, 0xa9, 0x5c,
	0xbe, 0x59, 0xf9, 0x77, 0x19, 0xb8, 0x1e, 0x21, 0x6c, 0xda, 0x25, 0x14, 0x0b, 0x15, 0x9c, 0xf3,
	0x7f, 0xf4, 0xe2, 0xda, 0xf7, 0xa1, 0x68, 0x8c, 0xf4, 0x89, 0x85, 0xb0, 0xfb, 0x49, 0x8d, 0x38,
	0x94, 0x15, 0x82, 0xa2, 0x2e, 0xe5, 0x04, 0x1b, 0xc1, 0x89, 0x83, 0xdb, 0x48, 0x03, 0x19, 0x8f,
	0x02, 0x69, 0xbf, 0x9b, 0x01, 0x95, 0xa6, 0x3f, 0x15, 0x53, 0x9c, 0x1f, 0x93, 0x40, 0x18, 0xf8,
	0x35, 0xc8, 0x13, 0xd3, 0xb5, 0x0d, 0xaf, 0x88, 0xaa, 0x4c, 0x14, 0x19, 0x8f, 0x56, 0xe6, 0x1b,
	0xba, 0x44, 0x54, 0xbf, 0xa2, 0x06, 0x64, 0x7b, 0x5e, 0xf2, 0x03, 0x5e, 0x7e, 0x28, 0x9a, 0x49,
	0x7a, 0x28, 0x8a, 0xde, 0x82, 0x05, 0xaa, 0x58, 0xdb, 0xc2, 0xbe, 0xba, 0xbd, 0x80, 0x83, 0x2f,
	0xb5, 0xbf, 0xcc, 0xc0, 0x8d, 0x48, 0xbd, 0x85, 0x0b, 0x7d, 0x27, 0xe8, 0x42, 0x1f, 0x4f, 0x67,
	0x84, 0x28, 0x27, 0xfa, 0x6b, 0xcf, 0x89, 0x5e, 0xc2, 0x55, 0x23, 0x70, 0xde, 0x21, 0x84, 0xad,
	0x25, 0x75, 0x21, 0xc1, 0x86, 0x47, 0x60, 0x50, 0x03, 0xe6, 0x4f, 0x87, 0xfd, 0x79, 0x61, 0xbb,
	0x77, 0x13, 0x0d, 0x41, 0xba, 0x8d, 0x1f, 0x40, 0xfb, 0x10, 0x8a, 0xa3, 0xb9, 0xb4, 0xbf, 0xb5,
	0xaf, 0x4c, 0x6a, 0xed, 0xff, 0x71, 0x06, 0x96, 0x42, 0x19, 0x37, 0x6a, 0x04, 0x4d, 0xfc, 0x28,
	0x91, 0x7e, 0xbf, 0x5c, 0x86, 0xfd, 0x14, 0x56, 0x65, 0x7b, 0x48, 0x76, 0x25, 0xa4, 0x7d, 0x53,
	0xb7, 0x33, 0x68, 0x75, 0x13, 0x06, 0x13, 0xd5, 0xcd, 0x3e, 0x5c, 0x1f, 0xf6, 0x4f, 0x2e, 0x2f,
	0xea, 0x26, 0xa8, 0x51, 0x70, 0x42, 0xd8, 0x16, 0xac, 0xf0, 0xbe, 0x0a, 0x6f, 0x92, 0x78, 0x72,
	0xde, 0x85, 0x3c, 0x6f, 0x5c, 0x8c, 0x93, 0x22, 0x49, 0xb4, 0x55, 0x78, 0x6d, 0x04, 0x45, 0xc0,
	0xd7, 0xe0, 0x35, 0xd1, 0x1a, 0xb9, 0x14, 0x7e, 0x09, 0xae, 0x8d, 0xc2, 0x08, 0x01, 0x8f, 0x61,
	0x4e, 0x92, 0x23, 0x04, 0xd9, 0x53, 0xc3, 0x94, 0x8d, 0x58, 0xf6, 0x9b, 0x66, 0x4a, 0x1d, 0xfd,
	0x4c, 0xef, 0x18, 0xee, 0x05, 0x73, 0x01, 0x05, 0x7b, 0xcf, 0x14, 0x55, 0x1c, 0xf6, 0x54, 0xc5,
	0x2b, 0x59, 0x7c, 0xfe, 0x53, 0x16, 0x56, 0x43, 0x9f, 0xa6, 0x6d, 0x3a, 0xc4, 0x00, 0x05, 0xf3,
	0xf8, 0x9d, 0x70, 0xa7, 0xfd, 0x6e, 0xe2, 0x23, 0x7a, 0x7f, 0x03, 0xfe, 0x25, 0x2c, 0x9d, 0x9d,
	0x5c, 0x38, 0x46, 0x47, 0xef, 0xe1, 0x91, 0x6b, 0x56, 0x29, 0x00, 0xc3, 0x18, 0xa8, 0x03, 0xab,
	0x7a, 0xaf, 0x67, 0x75, 0x74, 0x97, 0x74, 0x5b, 0x3d, 0xbd, 0x73, 0x3a, 0x84, 0xcf, 0xa6, 0x85,
	0x8f, 0x43, 0x42, 0x3a, 0x5c, 0x93, 0x92, 0x47, 0x64, 0xcc, 0xa6, 0x95, 0x11, 0x03, 0xa4, 0xf6,
	0x64, 0xe4, 0xe9, 0x00, 0xea, 0x84, 0xce, 0xfa, 0xc4, 0xac, 0x6e, 0x24, 0x9d, 0x55, 0x1f, 0x2b,
	0x8e, 0x80, 0xd3, 0x08, 0x2c, 0x8b, 0x85, 0x1e, 0x68, 0x57, 0x34, 0x60, 0xde, 0xd7, 0xbf, 0x16,
	0x42, 0xdf, 0x4d, 0x32, 0x38, 0xc9, 0x83, 0xfd, 0x00, 0xda, 0x3d, 0x58, 0xf2, 0x7d, 0xa3, 0x21,
	0x8b, 0x74, 0xc7, 0x9c, 0x2c, 0x6c, 0xc8, 0x58, 0xc6, 0xc8, 0x2b, 0x3d, 0x9b, 0xe8, 0xdd, 0x8b,
	0xda, 0x2b, 0xc3, 0x71, 0xc7, 0x1f, 0xa4, 0xd2, 0x31, 0x24, 0x3b, 0x18, 0x5d, 0x83, 0x65, 0x4a,
	0x2c, 0xa0, 0x85, 0x09, 0xc6, 0xa9, 0xf4, 0xe7, 0x59, 0x58, 0x09, 0x5a, 0x4a, 0xac, 0xb7, 0xe7,
	0xc1, 0xf5, 0xf6, 0x41, 0x42, 0x23, 0x91, 0x31, 0x45, 0xb3, 0xbc, 0x7f, 0x97, 0x99, 0xea, 0xfe,
	0x9d, 0xfa, 0x5f, 0x99, 0xe1, 0xa9, 0x64, 0xee, 0x88, 0xd9, 0x3a, 0x71, 0x9d, 0x1c, 0x9a, 0x25,
	0x2c, 0x10, 0xd0, 0xf7, 0xe0, 0x8a, 0xee, 0x9b, 0x08, 0xa1, 0xdc, 0xa3, 0x34, 0x88, 0xfe, 0x89,
	0xc4, 0x01, 0x34, 0x9a, 0xa5, 0x9e, 0x04, 0x27, 0x4f, 0x14, 0x12, 0xeb, 0x89, 0x46, 0xef, 0x77,
	0xf3, 0x51, 0x20, 0x74, 0x04, 0xcb, 0x27, 0xe1, 0xb9, 0x16, 0xe5, 0xe0, 0xc3, 0x44, 0xf8, 0x23,
	0xbc, 0x38, 0x0a, 0x50, 0xbb, 0x0d, 0xaf, 0xef, 0x10, 0x37, 0xea, 0x46, 0xa5, 0x8c, 0xdb, 0x7f,
	0x9f, 0x81, 0x5b, 0xb1, 0x24, 0xc2, 0x9f, 0xbe, 0x17, 0xf4, 0xa7, 0xed, 0x24, 0x2d, 0x88, 0x71,
	0x80, 0x41, 0xd7, 0x3a, 0x85, 0xd7, 0x3a, 0x11, 0xc4, 0x32, 0xa6, 0x7f, 0x6b, 0x72, 0x5c, 0x89,
	0x12, 0x15, 0x8d, 0xa9, 0x36, 0xa4, 0x1f, 0xd6, 0x60, 0xce, 0xb4, 0xdc, 0x6d, 0x6b, 0x60, 0x76,
	0x13, 0x5f, 0x2a, 0x6d, 0x08, 0x06, 0xec, 0xb1, 0x6a, 0x6f, 0xc1, 0x9c, 0x7c, 0x3b, 0x66, 0xa5,
	0xd6, 0xd9, 0x49, 0xf5, 0x96, 0xad, 0x1b, 0xa6, 0x61, 0x1e, 0x07, 0xc2, 0xda, 0x0a, 0xcc, 0xf6,
	0x8c, 0xbe, 0xe1, 0x8a, 0xeb, 0x81, 0xfc, 0x81, 0x42, 0xb9, 0x46, 0x9f, 0x58, 0x03, 0x57, 0xf4,
	0xc8, 0xe4, 0xa3, 0xf6, 0x08, 0x4a, 0x61, 0x28, 0x31, 0x4f, 0x81, 0xf3, 0x72, 0x65, 0xf4, 0xbc,
	0x7c, 0x13, 0x56, 0xf7, 0x75, 0xfb, 0x94, 0xb1, 0x30, 0x7e, 0x6a, 0x1a, 0xae, 0xc4, 0x78, 0xc6,
	0x27, 0x50, 0x0a, 0x33, 0x0a, 0x91, 0x6f, 0xc0, 0x95, 0xbe, 0x6e, 0x9f, 0x92, 0xee, 0xe1, 0xf0,
	0xbc, 0xbd, 0x80, 0xe7, 0xf9, 0x3b, 0x7e, 0xcf, 0xf1, 0x3d, 0xa6, 0x31, 0xbb, 0xa6, 0xc1, 0xbb,
	0x20, 0x34, 0x2c, 0x4c, 0xee, 0xca, 0x68, 0x77, 0xe0, 0x0a, 0x05, 0x48, 0x60, 0xde, 0x3f, 0xca,
	0xc0, 0xf5, 0x08, 0x11, 0xd3, 0x96, 0xcb, 0xb1, 0x50, 0x41, 0xbf, 0xad, 0x40, 0x8e, 0x35, 0x73,
	0x86, 0xc9, 0x87, 0x97, 0x8e, 0x89, 0x8b, 0xf9, 0x1e, 0xdf, 0x0e, 0x71, 0x19, 0x98, 0xc3, 0xfb,
	0x40, 0x58, 0x30, 0xaa, 0x9f, 0x49, 0x6f, 0x7c, 0x0e, 0x57, 0x4e, 0x7c, 0x63, 0x15, 0xaa, 0xde,
	0x4b, 0x14, 0x08, 0x3c, 0xaf, 0x0c, 0x40, 0x68, 0x2d, 0xb8, 0xe5, 0x6b, 0x9d, 0x39, 0xbb, 0xa4,
	0xd7, 0xdd, 0xb6, 0xec, 0x40, 0x91, 0xb3, 0x0e, 0x33, 0x86, 0x57, 0xe0, 0x4c, 0x2a, 0x3e, 0x29,
	0xa9, 0xf6, 0x17, 0x0a, 0xdc, 0x8e, 0x47, 0x15, 0x06, 0xff, 0x7e, 0xd0, 0xe0, 0x3b, 0x69, 0x5a,
	0x7c, 0x91, 0x88, 0xc1, 0x42, 0xe8, 0x0d, 0x69, 0xb4, 0x58, 0x87, 0x78, 0xfb, 0x3f, 0x14, 0x28,
	0xfa, 0xfa, 0xaa, 0xac, 0x25, 0x1d, 0x3c, 0x21, 0x2c, 0xc0, 0xec, 0x7e, 0xa5, 0xcd, 0x0e, 0x08,
	0x6f, 0xc3, 0xcd, 0x7a, 0xa3, 0x75, 0xb0, 0xbd, 0x5d, 0xaf, 0xd6, 0x6b, 0x8d, 0xf6, 0x61, 0x73,
	0x7b, 0xbb, 0x86, 0x0f, 0x71, 0xad, 0xd5, 0x3c, 0xc0, 0xd5, 0x5a, 0xab, 0x98, 0x41, 0x25, 0x58,
	0xd9, 0xaf, 0xb7, 0x18, 0xfd, 0x61, 0xb5, 0xd9, 0x68, 0xb5, 0x71, 0xa5, 0xde, 0x68, 0xb7, 0x8a,
	0x33, 0xa8, 0x08, 0x57, 0xbc, 0x2f, 0x3b, 0xcf, 0x0e, 0x8a, 0x59, 0xb4, 0x0c, 0x8b, 0xde, 0x9b,
	0x56, 0xbb, 0xd2, 0x3e, 0x68, 0x15, 0x67, 0xd1, 0x0d, 0x58, 0xf5, 0x5e, 0xee, 0x57, 0xbe, 0x73,
	0xb8, 0xdb, 0x6c, 0xb5, 0x0f, 0xf7, 0xea, 0xfb, 0xf5, 0x76, 0x31, 0x87, 0xae, 0xc0, 0x5c, 0xa3,
	0xc9, 0xa5, 0x16, 0xf3, 0x48, 0x85, 0x6b, 0x01, 0x6d, 0x86, 0x7a, 0xcc, 0xa1, 0x15, 0x28, 0xb6,
	0xaa, 0x15, 0x5c, 0xad, 0xf9, 0xde, 0x16, 0x1e, 0xfc, 0xa7, 0x0a, 0xcb, 0x75, 0xd3, 0x25, 0xb6,
	0xa9, 0xf7, 0xe8, 0xa0, 0x5b, 0xc4, 0x3e, 0x37, 0x3a, 0x04, 0xfd, 0xbe, 0x02, 0x4b, 0xa1, 0xc6,
	0x3d, 0x7a, 0x7f, 0x9a, 0x13, 0x0d, 0xe6, 0x2e, 0xea, 0xe3, 0xe9, 0x0f, 0x43, 0x90, 0x05, 0x73,
	0xb2, 0x2f, 0x8d, 0xd6, 0x53, 0x34, 0xf0, 0xb9, 0xe4, 0xfb, 0xa9, 0x5b, 0xfe, 0xe8, 0x07, 0x70,
	0xc5, 0x9f, 0xd5, 0xa0, 0x87, 0x29, 0x93, 0x20, 0x2e, 0xf8, 0x5b, 0x53, 0xa5, 0x4e, 0xe8, 0x4f,
	0x15, 0x16, 0xf3, 0xa2, 0x36, 0x26, 0x07, 0x3d, 0x9d, 0x7e, 0xfb, 0xe4, 0x4a, 0x7d, 0x74, 0xd9,
	0xfd, 0x97, 0xb9, 0x46, 0xa8, 0xaf, 0x9e, 0xc0, 0x35, 0xe2, 0x8e, 0x0f, 0x12, 0xb8, 0x46, 0xfc,
	0x89, 0xc0, 0x2b, 0x98, 0xf7, 0xb5, 0xa3, 0xd1, 0x46, 0xba, 0xe6, 0x35, 0x97, 0xff, 0x70, 0x9a,
	0x8e, 0x37, 0xb2, 0xa1, 0xe0, 0x35, 0x5d, 0xd0, 0xfd, 0x34, 0x0d, 0x1a, 0x2e, 0xf5, 0x41, 0xfa,
	0x9e, 0x0e, 0xfa, 0x89, 0x02, 0xcb, 0x11, 0xcd, 0x34, 0xf4, 0xc1, 0x25, 0xfa, 0x90, 0xea, 0xb7,
	0x2f, 0xd3, 0xbf, 0x63, 0xde, 0x10, 0x6a, 0x11, 0x27, 0xf0, 0x86, 0xb8, 0x76, 0x78, 0x02, 0x6f,
	0x88, 0x6f, 0x6e, 0x7f, 0xa5, 0x40, 0x71, 0xb4, 0xcf, 0x83, 0x92, 0xa6, 0xf4, 0xa1, 0xe6, 0x8f,
	0xfa, 0xfe, 0x14, 0x9c, 0x42, 0x93, 0x1f, 0x2b, 0x80, 0xc2, 0x6d, 0x20, 0x34, 0x79, 0x70, 0xb1,
	0xad, 0x28, 0xf5, 0x83, 0xa9, 0x78, 0x85, 0x3e, 0xbf, 0x05, 0x0b, 0x81, 0x8e, 0x11, 0x4a, 0x90,
	0x19, 0x47, 0xf4, 0xa9, 0xd4, 0xf7, 0xd2, 0xb2, 0x09, 0xf9, 0xbf, 0xa3, 0xc0, 0xd5, 0x60, 0x4b,
	0x09, 0x4d, 0x86, 0x8a, 0x6c, 0x65, 0xa9, 0x9b, 0xa9, 0xf9, 0x84, 0x0e, 0xbf, 0xa7, 0xc0, 0xe2,
	0x48, 0x73, 0x08, 0x6d, 0xa6, 0x6f, 0x27, 0x71, 0x2d, 0x1e, 0x4d, 0xdb, 0x87, 0x62, 0x6a, 0x8c,
	0x5c, 0x8c, 0x41, 0x9b, 0xe9, 0xaf, 0xd2, 0x24, 0x55, 0x23, 0xee, 0x32, 0xcf, 0x4f, 0xf9, 0xad,
	0xdc, 0x88, 0x1b, 0xd0, 0x09, 0xc2, 0x49, 0xfc, 0xad, 0xea, 0x04, 0xe1, 0x64, 0xdc, 0xa5, 0xeb,
	0x9f, 0x2a, 0xb0, 0x12, 0x75, 0x5d, 0x19, 0x7d, 0x7b, 0xca, 0x5b, 0xce, 0x5c, 0xa9, 0x27, 0x97,
	0xba, 0x23, 0xcd, 0xe2, 0xca, 0xe8, 0xed, 0x98, 0x04, 0x71, 0x25, 0xe6, 0xae, 0x4d, 0x82, 0xb8,
	0x12, 0x77, 0x15, 0x87, 0x39, 0xcf, 0xc8, 0x75, 0x63, 0xb4, 0x99, 0xfe, 0x82, 0x72, 0x52, 0xe7,
	0x89, 0xbb, 0x22, 0xfd, 0x25, 0xc0, 0xf0, 0x2a, 0x30, 0x9a, 0xbc, 0x95, 0x85, 0x2e, 0x13, 0xab,
	0x1b, 0xa9, 0x78, 0xb8, 0xd8, 0x75, 0x05, 0xfd, 0x26, 0x14, 0x7d, 0xb7, 0x7c, 0xb9, 0xf8, 0x04,
	0xcd, 0xc3, 0xd0, 0x4d, 0xe2, 0x04, 0x9b, 0x7e, 0xc4, 0x6d, 0x62, 0xe6, 0x08, 0xa3, 0x15, 0x34,
	0x4a, 0x64, 0xc6, 0xa8, 0xfa, 0x3d, 0x81, 0x23, 0xc4, 0x96, 0xeb, 0x54, 0x93, 0xd1, 0xc2, 0x3a,
	0x81, 0x26, 0x31, 0x45, 0x7c, 0x02, 0x4d, 0x62, 0xab, 0x78, 0x9a, 0x01, 0x84, 0xaa, 0x5e, 0xf4,
	0xfe, 0x34, 0x95, 0x72, 0xd2, 0x0c, 0x20, 0xbe, 0x5e, 0xff, 0x33, 0x25, 0x70, 0x4f, 0x25, 0x50,
	0x11, 0xa2, 0x8f, 0x2e, 0x51, 0x4c, 0x72, 0xd5, 0x2a, 0x97, 0x2e, 0x47, 0x3f, 0x7e, 0xe3, 0xb3,
	0x5b, 0x13, 0xfe, 0xc3, 0xff, 0xe7, 0x39, 0xf6, 0x5f, 0xe0, 0x37, 0xfe, 0x37, 0x00, 0x00, 0xff,
	0xff, 0xb2, 0xb1, 0x8f, 0xc9, 0x1a, 0x40, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InternalHostServiceClient is the client API for InternalHostService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InternalHostServiceClient interface {
	//*
	//  Acquire a set of host offers from the host manager. Each host offer will
	//  only be used by one client at a given time.
	AcquireHostOffers(ctx context.Context, in *AcquireHostOffersRequest, opts ...grpc.CallOption) (*AcquireHostOffersResponse, error)
	//*
	//  Get a list of hosts from the host manager which matches the request
	//  This is just the get operation and there is no lock placed
	//  on any host.
	GetHosts(ctx context.Context, in *GetHostsRequest, opts ...grpc.CallOption) (*GetHostsResponse, error)
	//
	// ReserveHosts reserves the host for a specified task in the request.
	// Host Manager will keep the host offers to itself till the time
	// it does not have enough offers to itself and once that's fulfilled
	// it will return the reservation with the offer to placement engine.
	// till the time reservation is fulfilled or reservation timeout ,
	// offers from that host will not be given to any other placement engine.
	ReserveHosts(ctx context.Context, in *ReserveHostsRequest, opts ...grpc.CallOption) (*ReserveHostsResponse, error)
	//
	// GetCompletedReservations gets the completed host reservations from
	// reserver. Based on the reserver it returns the list of completed
	// Reservations (hostsvc.CompletedReservation) or return the NoFound Error.
	GetCompletedReservations(ctx context.Context, in *GetCompletedReservationRequest, opts ...grpc.CallOption) (*GetCompletedReservationResponse, error)
	//*
	//  Release unused host offers to the host manager.
	ReleaseHostOffers(ctx context.Context, in *ReleaseHostOffersRequest, opts ...grpc.CallOption) (*ReleaseHostOffersResponse, error)
	// Launch tasks on Mesos cluster
	LaunchTasks(ctx context.Context, in *LaunchTasksRequest, opts ...grpc.CallOption) (*LaunchTasksResponse, error)
	// Kill tasks that are running on Mesos cluster
	KillTasks(ctx context.Context, in *KillTasksRequest, opts ...grpc.CallOption) (*KillTasksResponse, error)
	// Kill tasks that are running on Mesos cluster, and reserve the host
	// for new task placement.
	// This is used for in-place update/restart.
	KillAndReserveTasks(ctx context.Context, in *KillAndReserveTasksRequest, opts ...grpc.CallOption) (*KillAndReserveTasksResponse, error)
	// Shutdown executors that running on a Mesos agent
	ShutdownExecutors(ctx context.Context, in *ShutdownExecutorsRequest, opts ...grpc.CallOption) (*ShutdownExecutorsResponse, error)
	// Reserve resources on a host
	ReserveResources(ctx context.Context, in *ReserveResourcesRequest, opts ...grpc.CallOption) (*ReserveResourcesResponse, error)
	// Unreserve resources on a host
	UnreserveResources(ctx context.Context, in *UnreserveResourcesRequest, opts ...grpc.CallOption) (*UnreserveResourcesResponse, error)
	// Create volumes on a Mesos host
	CreateVolumes(ctx context.Context, in *CreateVolumesRequest, opts ...grpc.CallOption) (*CreateVolumesResponse, error)
	// Destroy volumes on a Mesos host
	DestroyVolumes(ctx context.Context, in *DestroyVolumesRequest, opts ...grpc.CallOption) (*DestroyVolumesResponse, error)
	// TODO move out to separate service if scope widens
	// ClusterCapacity fetches the allocated resources to the framework`
	ClusterCapacity(ctx context.Context, in *ClusterCapacityRequest, opts ...grpc.CallOption) (*ClusterCapacityResponse, error)
	// Performs batch offer operations.
	OfferOperations(ctx context.Context, in *OfferOperationsRequest, opts ...grpc.CallOption) (*OfferOperationsResponse, error)
	// Return leading mesos masters host:port.
	GetMesosMasterHostPort(ctx context.Context, in *MesosMasterHostPortRequest, opts ...grpc.CallOption) (*MesosMasterHostPortResponse, error)
	// Return all the outstanding offers present in offer pool.
	GetOutstandingOffers(ctx context.Context, in *GetOutstandingOffersRequest, opts ...grpc.CallOption) (*GetOutstandingOffersResponse, error)
	// Toggles the switch to disable the kill tasks
	DisableKillTasks(ctx context.Context, in *DisableKillTasksRequest, opts ...grpc.CallOption) (*DisableKillTasksResponse, error)
	// Return all the hosts with available resources matching the query, used in cli only.
	GetHostsByQuery(ctx context.Context, in *GetHostsByQueryRequest, opts ...grpc.CallOption) (*GetHostsByQueryResponse, error)
	// Return all the outstanding status update events present in the event stream.
	WatchEvent(ctx context.Context, in *WatchEventRequest, opts ...grpc.CallOption) (InternalHostService_WatchEventClient, error)
	// Cancel a watch. The watch stream will get an error indicating
	// watch was cancelled and the stream will be closed.
	CancelWatchEvent(ctx context.Context, in *CancelWatchRequest, opts ...grpc.CallOption) (*CancelWatchResponse, error)
	// Get the hosts in DRAINING state. This method is called by Resource Manager
	// to get hosts which are to be drained.
	GetDrainingHosts(ctx context.Context, in *GetDrainingHostsRequest, opts ...grpc.CallOption) (*GetDrainingHostsResponse, error)
	// Mark the hosts as drained. This method is called by Resource Manager  to
	// notify Host Manager that specified DRAINING hosts are cleared of all tasks.
	MarkHostsDrained(ctx context.Context, in *MarkHostsDrainedRequest, opts ...grpc.CallOption) (*MarkHostsDrainedResponse, error)
	// Return Mesos agent info
	GetMesosAgentInfo(ctx context.Context, in *GetMesosAgentInfoRequest, opts ...grpc.CallOption) (*GetMesosAgentInfoResponse, error)
	// Release the hosts which are held for the tasks provided
	ReleaseHostsHeldForTasks(ctx context.Context, in *ReleaseHostsHeldForTasksRequest, opts ...grpc.CallOption) (*ReleaseHostsHeldForTasksResponse, error)
}

type internalHostServiceClient struct {
	cc *grpc.ClientConn
}

func NewInternalHostServiceClient(cc *grpc.ClientConn) InternalHostServiceClient {
	return &internalHostServiceClient{cc}
}

func (c *internalHostServiceClient) AcquireHostOffers(ctx context.Context, in *AcquireHostOffersRequest, opts ...grpc.CallOption) (*AcquireHostOffersResponse, error) {
	out := new(AcquireHostOffersResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/AcquireHostOffers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) GetHosts(ctx context.Context, in *GetHostsRequest, opts ...grpc.CallOption) (*GetHostsResponse, error) {
	out := new(GetHostsResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/GetHosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) ReserveHosts(ctx context.Context, in *ReserveHostsRequest, opts ...grpc.CallOption) (*ReserveHostsResponse, error) {
	out := new(ReserveHostsResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/ReserveHosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) GetCompletedReservations(ctx context.Context, in *GetCompletedReservationRequest, opts ...grpc.CallOption) (*GetCompletedReservationResponse, error) {
	out := new(GetCompletedReservationResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/GetCompletedReservations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) ReleaseHostOffers(ctx context.Context, in *ReleaseHostOffersRequest, opts ...grpc.CallOption) (*ReleaseHostOffersResponse, error) {
	out := new(ReleaseHostOffersResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/ReleaseHostOffers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) LaunchTasks(ctx context.Context, in *LaunchTasksRequest, opts ...grpc.CallOption) (*LaunchTasksResponse, error) {
	out := new(LaunchTasksResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/LaunchTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) KillTasks(ctx context.Context, in *KillTasksRequest, opts ...grpc.CallOption) (*KillTasksResponse, error) {
	out := new(KillTasksResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/KillTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) KillAndReserveTasks(ctx context.Context, in *KillAndReserveTasksRequest, opts ...grpc.CallOption) (*KillAndReserveTasksResponse, error) {
	out := new(KillAndReserveTasksResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/KillAndReserveTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) ShutdownExecutors(ctx context.Context, in *ShutdownExecutorsRequest, opts ...grpc.CallOption) (*ShutdownExecutorsResponse, error) {
	out := new(ShutdownExecutorsResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/ShutdownExecutors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) ReserveResources(ctx context.Context, in *ReserveResourcesRequest, opts ...grpc.CallOption) (*ReserveResourcesResponse, error) {
	out := new(ReserveResourcesResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/ReserveResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) UnreserveResources(ctx context.Context, in *UnreserveResourcesRequest, opts ...grpc.CallOption) (*UnreserveResourcesResponse, error) {
	out := new(UnreserveResourcesResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/UnreserveResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) CreateVolumes(ctx context.Context, in *CreateVolumesRequest, opts ...grpc.CallOption) (*CreateVolumesResponse, error) {
	out := new(CreateVolumesResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/CreateVolumes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) DestroyVolumes(ctx context.Context, in *DestroyVolumesRequest, opts ...grpc.CallOption) (*DestroyVolumesResponse, error) {
	out := new(DestroyVolumesResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/DestroyVolumes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) ClusterCapacity(ctx context.Context, in *ClusterCapacityRequest, opts ...grpc.CallOption) (*ClusterCapacityResponse, error) {
	out := new(ClusterCapacityResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/ClusterCapacity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) OfferOperations(ctx context.Context, in *OfferOperationsRequest, opts ...grpc.CallOption) (*OfferOperationsResponse, error) {
	out := new(OfferOperationsResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/OfferOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) GetMesosMasterHostPort(ctx context.Context, in *MesosMasterHostPortRequest, opts ...grpc.CallOption) (*MesosMasterHostPortResponse, error) {
	out := new(MesosMasterHostPortResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/GetMesosMasterHostPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) GetOutstandingOffers(ctx context.Context, in *GetOutstandingOffersRequest, opts ...grpc.CallOption) (*GetOutstandingOffersResponse, error) {
	out := new(GetOutstandingOffersResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/GetOutstandingOffers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) DisableKillTasks(ctx context.Context, in *DisableKillTasksRequest, opts ...grpc.CallOption) (*DisableKillTasksResponse, error) {
	out := new(DisableKillTasksResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/DisableKillTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) GetHostsByQuery(ctx context.Context, in *GetHostsByQueryRequest, opts ...grpc.CallOption) (*GetHostsByQueryResponse, error) {
	out := new(GetHostsByQueryResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/GetHostsByQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) WatchEvent(ctx context.Context, in *WatchEventRequest, opts ...grpc.CallOption) (InternalHostService_WatchEventClient, error) {
	stream, err := c.cc.NewStream(ctx, &_InternalHostService_serviceDesc.Streams[0], "/peloton.private.hostmgr.hostsvc.InternalHostService/WatchEvent", opts...)
	if err != nil {
		return nil, err
	}
	x := &internalHostServiceWatchEventClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type InternalHostService_WatchEventClient interface {
	Recv() (*WatchEventResponse, error)
	grpc.ClientStream
}

type internalHostServiceWatchEventClient struct {
	grpc.ClientStream
}

func (x *internalHostServiceWatchEventClient) Recv() (*WatchEventResponse, error) {
	m := new(WatchEventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *internalHostServiceClient) CancelWatchEvent(ctx context.Context, in *CancelWatchRequest, opts ...grpc.CallOption) (*CancelWatchResponse, error) {
	out := new(CancelWatchResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/CancelWatchEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) GetDrainingHosts(ctx context.Context, in *GetDrainingHostsRequest, opts ...grpc.CallOption) (*GetDrainingHostsResponse, error) {
	out := new(GetDrainingHostsResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/GetDrainingHosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) MarkHostsDrained(ctx context.Context, in *MarkHostsDrainedRequest, opts ...grpc.CallOption) (*MarkHostsDrainedResponse, error) {
	out := new(MarkHostsDrainedResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/MarkHostsDrained", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) GetMesosAgentInfo(ctx context.Context, in *GetMesosAgentInfoRequest, opts ...grpc.CallOption) (*GetMesosAgentInfoResponse, error) {
	out := new(GetMesosAgentInfoResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/GetMesosAgentInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalHostServiceClient) ReleaseHostsHeldForTasks(ctx context.Context, in *ReleaseHostsHeldForTasksRequest, opts ...grpc.CallOption) (*ReleaseHostsHeldForTasksResponse, error) {
	out := new(ReleaseHostsHeldForTasksResponse)
	err := c.cc.Invoke(ctx, "/peloton.private.hostmgr.hostsvc.InternalHostService/ReleaseHostsHeldForTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InternalHostServiceServer is the server API for InternalHostService service.
type InternalHostServiceServer interface {
	//*
	//  Acquire a set of host offers from the host manager. Each host offer will
	//  only be used by one client at a given time.
	AcquireHostOffers(context.Context, *AcquireHostOffersRequest) (*AcquireHostOffersResponse, error)
	//*
	//  Get a list of hosts from the host manager which matches the request
	//  This is just the get operation and there is no lock placed
	//  on any host.
	GetHosts(context.Context, *GetHostsRequest) (*GetHostsResponse, error)
	//
	// ReserveHosts reserves the host for a specified task in the request.
	// Host Manager will keep the host offers to itself till the time
	// it does not have enough offers to itself and once that's fulfilled
	// it will return the reservation with the offer to placement engine.
	// till the time reservation is fulfilled or reservation timeout ,
	// offers from that host will not be given to any other placement engine.
	ReserveHosts(context.Context, *ReserveHostsRequest) (*ReserveHostsResponse, error)
	//
	// GetCompletedReservations gets the completed host reservations from
	// reserver. Based on the reserver it returns the list of completed
	// Reservations (hostsvc.CompletedReservation) or return the NoFound Error.
	GetCompletedReservations(context.Context, *GetCompletedReservationRequest) (*GetCompletedReservationResponse, error)
	//*
	//  Release unused host offers to the host manager.
	ReleaseHostOffers(context.Context, *ReleaseHostOffersRequest) (*ReleaseHostOffersResponse, error)
	// Launch tasks on Mesos cluster
	LaunchTasks(context.Context, *LaunchTasksRequest) (*LaunchTasksResponse, error)
	// Kill tasks that are running on Mesos cluster
	KillTasks(context.Context, *KillTasksRequest) (*KillTasksResponse, error)
	// Kill tasks that are running on Mesos cluster, and reserve the host
	// for new task placement.
	// This is used for in-place update/restart.
	KillAndReserveTasks(context.Context, *KillAndReserveTasksRequest) (*KillAndReserveTasksResponse, error)
	// Shutdown executors that running on a Mesos agent
	ShutdownExecutors(context.Context, *ShutdownExecutorsRequest) (*ShutdownExecutorsResponse, error)
	// Reserve resources on a host
	ReserveResources(context.Context, *ReserveResourcesRequest) (*ReserveResourcesResponse, error)
	// Unreserve resources on a host
	UnreserveResources(context.Context, *UnreserveResourcesRequest) (*UnreserveResourcesResponse, error)
	// Create volumes on a Mesos host
	CreateVolumes(context.Context, *CreateVolumesRequest) (*CreateVolumesResponse, error)
	// Destroy volumes on a Mesos host
	DestroyVolumes(context.Context, *DestroyVolumesRequest) (*DestroyVolumesResponse, error)
	// TODO move out to separate service if scope widens
	// ClusterCapacity fetches the allocated resources to the framework`
	ClusterCapacity(context.Context, *ClusterCapacityRequest) (*ClusterCapacityResponse, error)
	// Performs batch offer operations.
	OfferOperations(context.Context, *OfferOperationsRequest) (*OfferOperationsResponse, error)
	// Return leading mesos masters host:port.
	GetMesosMasterHostPort(context.Context, *MesosMasterHostPortRequest) (*MesosMasterHostPortResponse, error)
	// Return all the outstanding offers present in offer pool.
	GetOutstandingOffers(context.Context, *GetOutstandingOffersRequest) (*GetOutstandingOffersResponse, error)
	// Toggles the switch to disable the kill tasks
	DisableKillTasks(context.Context, *DisableKillTasksRequest) (*DisableKillTasksResponse, error)
	// Return all the hosts with available resources matching the query, used in cli only.
	GetHostsByQuery(context.Context, *GetHostsByQueryRequest) (*GetHostsByQueryResponse, error)
	// Return all the outstanding status update events present in the event stream.
	WatchEvent(*WatchEventRequest, InternalHostService_WatchEventServer) error
	// Cancel a watch. The watch stream will get an error indicating
	// watch was cancelled and the stream will be closed.
	CancelWatchEvent(context.Context, *CancelWatchRequest) (*CancelWatchResponse, error)
	// Get the hosts in DRAINING state. This method is called by Resource Manager
	// to get hosts which are to be drained.
	GetDrainingHosts(context.Context, *GetDrainingHostsRequest) (*GetDrainingHostsResponse, error)
	// Mark the hosts as drained. This method is called by Resource Manager  to
	// notify Host Manager that specified DRAINING hosts are cleared of all tasks.
	MarkHostsDrained(context.Context, *MarkHostsDrainedRequest) (*MarkHostsDrainedResponse, error)
	// Return Mesos agent info
	GetMesosAgentInfo(context.Context, *GetMesosAgentInfoRequest) (*GetMesosAgentInfoResponse, error)
	// Release the hosts which are held for the tasks provided
	ReleaseHostsHeldForTasks(context.Context, *ReleaseHostsHeldForTasksRequest) (*ReleaseHostsHeldForTasksResponse, error)
}

func RegisterInternalHostServiceServer(s *grpc.Server, srv InternalHostServiceServer) {
	s.RegisterService(&_InternalHostService_serviceDesc, srv)
}

func _InternalHostService_AcquireHostOffers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireHostOffersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).AcquireHostOffers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/AcquireHostOffers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).AcquireHostOffers(ctx, req.(*AcquireHostOffersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_GetHosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).GetHosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/GetHosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).GetHosts(ctx, req.(*GetHostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_ReserveHosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveHostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).ReserveHosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/ReserveHosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).ReserveHosts(ctx, req.(*ReserveHostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_GetCompletedReservations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCompletedReservationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).GetCompletedReservations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/GetCompletedReservations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).GetCompletedReservations(ctx, req.(*GetCompletedReservationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_ReleaseHostOffers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseHostOffersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).ReleaseHostOffers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/ReleaseHostOffers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).ReleaseHostOffers(ctx, req.(*ReleaseHostOffersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_LaunchTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LaunchTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).LaunchTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/LaunchTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).LaunchTasks(ctx, req.(*LaunchTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_KillTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KillTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).KillTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/KillTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).KillTasks(ctx, req.(*KillTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_KillAndReserveTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KillAndReserveTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).KillAndReserveTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/KillAndReserveTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).KillAndReserveTasks(ctx, req.(*KillAndReserveTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_ShutdownExecutors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShutdownExecutorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).ShutdownExecutors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/ShutdownExecutors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).ShutdownExecutors(ctx, req.(*ShutdownExecutorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_ReserveResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveResourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).ReserveResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/ReserveResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).ReserveResources(ctx, req.(*ReserveResourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_UnreserveResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnreserveResourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).UnreserveResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/UnreserveResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).UnreserveResources(ctx, req.(*UnreserveResourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_CreateVolumes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVolumesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).CreateVolumes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/CreateVolumes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).CreateVolumes(ctx, req.(*CreateVolumesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_DestroyVolumes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyVolumesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).DestroyVolumes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/DestroyVolumes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).DestroyVolumes(ctx, req.(*DestroyVolumesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_ClusterCapacity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterCapacityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).ClusterCapacity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/ClusterCapacity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).ClusterCapacity(ctx, req.(*ClusterCapacityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_OfferOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfferOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).OfferOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/OfferOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).OfferOperations(ctx, req.(*OfferOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_GetMesosMasterHostPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MesosMasterHostPortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).GetMesosMasterHostPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/GetMesosMasterHostPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).GetMesosMasterHostPort(ctx, req.(*MesosMasterHostPortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_GetOutstandingOffers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOutstandingOffersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).GetOutstandingOffers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/GetOutstandingOffers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).GetOutstandingOffers(ctx, req.(*GetOutstandingOffersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_DisableKillTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableKillTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).DisableKillTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/DisableKillTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).DisableKillTasks(ctx, req.(*DisableKillTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_GetHostsByQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHostsByQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).GetHostsByQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/GetHostsByQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).GetHostsByQuery(ctx, req.(*GetHostsByQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_WatchEvent_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchEventRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(InternalHostServiceServer).WatchEvent(m, &internalHostServiceWatchEventServer{stream})
}

type InternalHostService_WatchEventServer interface {
	Send(*WatchEventResponse) error
	grpc.ServerStream
}

type internalHostServiceWatchEventServer struct {
	grpc.ServerStream
}

func (x *internalHostServiceWatchEventServer) Send(m *WatchEventResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _InternalHostService_CancelWatchEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelWatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).CancelWatchEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/CancelWatchEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).CancelWatchEvent(ctx, req.(*CancelWatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_GetDrainingHosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDrainingHostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).GetDrainingHosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/GetDrainingHosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).GetDrainingHosts(ctx, req.(*GetDrainingHostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_MarkHostsDrained_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkHostsDrainedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).MarkHostsDrained(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/MarkHostsDrained",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).MarkHostsDrained(ctx, req.(*MarkHostsDrainedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_GetMesosAgentInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMesosAgentInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).GetMesosAgentInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/GetMesosAgentInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).GetMesosAgentInfo(ctx, req.(*GetMesosAgentInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalHostService_ReleaseHostsHeldForTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseHostsHeldForTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalHostServiceServer).ReleaseHostsHeldForTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.private.hostmgr.hostsvc.InternalHostService/ReleaseHostsHeldForTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalHostServiceServer).ReleaseHostsHeldForTasks(ctx, req.(*ReleaseHostsHeldForTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InternalHostService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "peloton.private.hostmgr.hostsvc.InternalHostService",
	HandlerType: (*InternalHostServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AcquireHostOffers",
			Handler:    _InternalHostService_AcquireHostOffers_Handler,
		},
		{
			MethodName: "GetHosts",
			Handler:    _InternalHostService_GetHosts_Handler,
		},
		{
			MethodName: "ReserveHosts",
			Handler:    _InternalHostService_ReserveHosts_Handler,
		},
		{
			MethodName: "GetCompletedReservations",
			Handler:    _InternalHostService_GetCompletedReservations_Handler,
		},
		{
			MethodName: "ReleaseHostOffers",
			Handler:    _InternalHostService_ReleaseHostOffers_Handler,
		},
		{
			MethodName: "LaunchTasks",
			Handler:    _InternalHostService_LaunchTasks_Handler,
		},
		{
			MethodName: "KillTasks",
			Handler:    _InternalHostService_KillTasks_Handler,
		},
		{
			MethodName: "KillAndReserveTasks",
			Handler:    _InternalHostService_KillAndReserveTasks_Handler,
		},
		{
			MethodName: "ShutdownExecutors",
			Handler:    _InternalHostService_ShutdownExecutors_Handler,
		},
		{
			MethodName: "ReserveResources",
			Handler:    _InternalHostService_ReserveResources_Handler,
		},
		{
			MethodName: "UnreserveResources",
			Handler:    _InternalHostService_UnreserveResources_Handler,
		},
		{
			MethodName: "CreateVolumes",
			Handler:    _InternalHostService_CreateVolumes_Handler,
		},
		{
			MethodName: "DestroyVolumes",
			Handler:    _InternalHostService_DestroyVolumes_Handler,
		},
		{
			MethodName: "ClusterCapacity",
			Handler:    _InternalHostService_ClusterCapacity_Handler,
		},
		{
			MethodName: "OfferOperations",
			Handler:    _InternalHostService_OfferOperations_Handler,
		},
		{
			MethodName: "GetMesosMasterHostPort",
			Handler:    _InternalHostService_GetMesosMasterHostPort_Handler,
		},
		{
			MethodName: "GetOutstandingOffers",
			Handler:    _InternalHostService_GetOutstandingOffers_Handler,
		},
		{
			MethodName: "DisableKillTasks",
			Handler:    _InternalHostService_DisableKillTasks_Handler,
		},
		{
			MethodName: "GetHostsByQuery",
			Handler:    _InternalHostService_GetHostsByQuery_Handler,
		},
		{
			MethodName: "CancelWatchEvent",
			Handler:    _InternalHostService_CancelWatchEvent_Handler,
		},
		{
			MethodName: "GetDrainingHosts",
			Handler:    _InternalHostService_GetDrainingHosts_Handler,
		},
		{
			MethodName: "MarkHostsDrained",
			Handler:    _InternalHostService_MarkHostsDrained_Handler,
		},
		{
			MethodName: "GetMesosAgentInfo",
			Handler:    _InternalHostService_GetMesosAgentInfo_Handler,
		},
		{
			MethodName: "ReleaseHostsHeldForTasks",
			Handler:    _InternalHostService_ReleaseHostsHeldForTasks_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchEvent",
			Handler:       _InternalHostService_WatchEvent_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "peloton/private/hostmgr/hostsvc/hostsvc.proto",
}
