// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peloton/api/v1alpha/respool/svc/respool_svc.proto

package svc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	peloton "github.com/uber/peloton/.gen/peloton/api/v1alpha/peloton"
	respool "github.com/uber/peloton/.gen/peloton/api/v1alpha/respool"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request message for ResourcePoolService.CreateResourcePool method.
type CreateResourcePoolRequest struct {
	// The unique resource pool UUID specified by the client. This can
	// be used by the client to re-create a failed resource pool without
	// the side-effect of creating duplicated resource pool. If unset,
	// the server will create a new UUID for the resource pool.
	RespoolId *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=respool_id,json=respoolId,proto3" json:"respool_id,omitempty"`
	// The detailed configuration of the resource pool be to created.
	Spec                 *respool.ResourcePoolSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateResourcePoolRequest) Reset()         { *m = CreateResourcePoolRequest{} }
func (m *CreateResourcePoolRequest) String() string { return proto.CompactTextString(m) }
func (*CreateResourcePoolRequest) ProtoMessage()    {}
func (*CreateResourcePoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7d00ee7eff1a2d, []int{0}
}

func (m *CreateResourcePoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResourcePoolRequest.Unmarshal(m, b)
}
func (m *CreateResourcePoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResourcePoolRequest.Marshal(b, m, deterministic)
}
func (m *CreateResourcePoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResourcePoolRequest.Merge(m, src)
}
func (m *CreateResourcePoolRequest) XXX_Size() int {
	return xxx_messageInfo_CreateResourcePoolRequest.Size(m)
}
func (m *CreateResourcePoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResourcePoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResourcePoolRequest proto.InternalMessageInfo

func (m *CreateResourcePoolRequest) GetRespoolId() *peloton.ResourcePoolID {
	if m != nil {
		return m.RespoolId
	}
	return nil
}

func (m *CreateResourcePoolRequest) GetSpec() *respool.ResourcePoolSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// Response message for ResourcePoolService.CreateResourcePool method.
// Return errors:
//   ALREADY_EXISTS:   if the resource pool already exists.
//   INVALID_ARGUMENT: if the resource pool config is invalid.
type CreateResourcePoolResponse struct {
	// The ID of the newly created resource pool.
	RespoolId            *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=respool_id,json=respoolId,proto3" json:"respool_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CreateResourcePoolResponse) Reset()         { *m = CreateResourcePoolResponse{} }
func (m *CreateResourcePoolResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResourcePoolResponse) ProtoMessage()    {}
func (*CreateResourcePoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7d00ee7eff1a2d, []int{1}
}

func (m *CreateResourcePoolResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResourcePoolResponse.Unmarshal(m, b)
}
func (m *CreateResourcePoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResourcePoolResponse.Marshal(b, m, deterministic)
}
func (m *CreateResourcePoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResourcePoolResponse.Merge(m, src)
}
func (m *CreateResourcePoolResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResourcePoolResponse.Size(m)
}
func (m *CreateResourcePoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResourcePoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResourcePoolResponse proto.InternalMessageInfo

func (m *CreateResourcePoolResponse) GetRespoolId() *peloton.ResourcePoolID {
	if m != nil {
		return m.RespoolId
	}
	return nil
}

// Request message for ResourcePoolService.GetResourcePool method.
type GetResourcePoolRequest struct {
	// The ID of the resource pool to get the detailed information.
	RespoolId *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=respool_id,json=respoolId,proto3" json:"respool_id,omitempty"`
	// Whether or not to include the resource pool info of the direct
	// children
	IncludeChildPools    bool     `protobuf:"varint,2,opt,name=include_child_pools,json=includeChildPools,proto3" json:"include_child_pools,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResourcePoolRequest) Reset()         { *m = GetResourcePoolRequest{} }
func (m *GetResourcePoolRequest) String() string { return proto.CompactTextString(m) }
func (*GetResourcePoolRequest) ProtoMessage()    {}
func (*GetResourcePoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7d00ee7eff1a2d, []int{2}
}

func (m *GetResourcePoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResourcePoolRequest.Unmarshal(m, b)
}
func (m *GetResourcePoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResourcePoolRequest.Marshal(b, m, deterministic)
}
func (m *GetResourcePoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResourcePoolRequest.Merge(m, src)
}
func (m *GetResourcePoolRequest) XXX_Size() int {
	return xxx_messageInfo_GetResourcePoolRequest.Size(m)
}
func (m *GetResourcePoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResourcePoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetResourcePoolRequest proto.InternalMessageInfo

func (m *GetResourcePoolRequest) GetRespoolId() *peloton.ResourcePoolID {
	if m != nil {
		return m.RespoolId
	}
	return nil
}

func (m *GetResourcePoolRequest) GetIncludeChildPools() bool {
	if m != nil {
		return m.IncludeChildPools
	}
	return false
}

// Response message for ResourcePoolService.GetResourcePool method.
// Return errors:
//   NOT_FOUND:   if the resource pool is not found.
type GetResourcePoolResponse struct {
	// The detailed information of the resource pool.
	Respool *respool.ResourcePoolInfo `protobuf:"bytes,1,opt,name=respool,proto3" json:"respool,omitempty"`
	// The list of child resource pools.
	ChildRespools        []*respool.ResourcePoolInfo `protobuf:"bytes,2,rep,name=child_respools,json=childRespools,proto3" json:"child_respools,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetResourcePoolResponse) Reset()         { *m = GetResourcePoolResponse{} }
func (m *GetResourcePoolResponse) String() string { return proto.CompactTextString(m) }
func (*GetResourcePoolResponse) ProtoMessage()    {}
func (*GetResourcePoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7d00ee7eff1a2d, []int{3}
}

func (m *GetResourcePoolResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResourcePoolResponse.Unmarshal(m, b)
}
func (m *GetResourcePoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResourcePoolResponse.Marshal(b, m, deterministic)
}
func (m *GetResourcePoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResourcePoolResponse.Merge(m, src)
}
func (m *GetResourcePoolResponse) XXX_Size() int {
	return xxx_messageInfo_GetResourcePoolResponse.Size(m)
}
func (m *GetResourcePoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResourcePoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResourcePoolResponse proto.InternalMessageInfo

func (m *GetResourcePoolResponse) GetRespool() *respool.ResourcePoolInfo {
	if m != nil {
		return m.Respool
	}
	return nil
}

func (m *GetResourcePoolResponse) GetChildRespools() []*respool.ResourcePoolInfo {
	if m != nil {
		return m.ChildRespools
	}
	return nil
}

// Request message for ResourcePoolService.DeleteResourcePool method.
type DeleteResourcePoolRequest struct {
	// The ID of the resource pool to be deleted.
	RespoolId            *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=respool_id,json=respoolId,proto3" json:"respool_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *DeleteResourcePoolRequest) Reset()         { *m = DeleteResourcePoolRequest{} }
func (m *DeleteResourcePoolRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteResourcePoolRequest) ProtoMessage()    {}
func (*DeleteResourcePoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7d00ee7eff1a2d, []int{4}
}

func (m *DeleteResourcePoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResourcePoolRequest.Unmarshal(m, b)
}
func (m *DeleteResourcePoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResourcePoolRequest.Marshal(b, m, deterministic)
}
func (m *DeleteResourcePoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResourcePoolRequest.Merge(m, src)
}
func (m *DeleteResourcePoolRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteResourcePoolRequest.Size(m)
}
func (m *DeleteResourcePoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResourcePoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResourcePoolRequest proto.InternalMessageInfo

func (m *DeleteResourcePoolRequest) GetRespoolId() *peloton.ResourcePoolID {
	if m != nil {
		return m.RespoolId
	}
	return nil
}

// Response message for ResourcePoolService.DeleteResourcePool method.
// Return errors:
//   NOT_FOUND:           if the resource pool is not found.
//   INVALID_ARGUMENT:    if the resource pool is not leaf node.
//   FAILED_PRECONDITION: if the resource pool is busy.
//   INTERNAL:            if the resource pool fail to delete for internal errors.
type DeleteResourcePoolResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResourcePoolResponse) Reset()         { *m = DeleteResourcePoolResponse{} }
func (m *DeleteResourcePoolResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResourcePoolResponse) ProtoMessage()    {}
func (*DeleteResourcePoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7d00ee7eff1a2d, []int{5}
}

func (m *DeleteResourcePoolResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResourcePoolResponse.Unmarshal(m, b)
}
func (m *DeleteResourcePoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResourcePoolResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResourcePoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResourcePoolResponse.Merge(m, src)
}
func (m *DeleteResourcePoolResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResourcePoolResponse.Size(m)
}
func (m *DeleteResourcePoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResourcePoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResourcePoolResponse proto.InternalMessageInfo

// Request message for ResourcePoolService.UpdateResourcePool method.
type UpdateResourcePoolRequest struct {
	// The ID of the resource pool to update the configuration.
	RespoolId *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=respool_id,json=respoolId,proto3" json:"respool_id,omitempty"`
	// The configuration of the resource pool to be updated.
	Spec                 *respool.ResourcePoolSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateResourcePoolRequest) Reset()         { *m = UpdateResourcePoolRequest{} }
func (m *UpdateResourcePoolRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateResourcePoolRequest) ProtoMessage()    {}
func (*UpdateResourcePoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7d00ee7eff1a2d, []int{6}
}

func (m *UpdateResourcePoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResourcePoolRequest.Unmarshal(m, b)
}
func (m *UpdateResourcePoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResourcePoolRequest.Marshal(b, m, deterministic)
}
func (m *UpdateResourcePoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResourcePoolRequest.Merge(m, src)
}
func (m *UpdateResourcePoolRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateResourcePoolRequest.Size(m)
}
func (m *UpdateResourcePoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResourcePoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResourcePoolRequest proto.InternalMessageInfo

func (m *UpdateResourcePoolRequest) GetRespoolId() *peloton.ResourcePoolID {
	if m != nil {
		return m.RespoolId
	}
	return nil
}

func (m *UpdateResourcePoolRequest) GetSpec() *respool.ResourcePoolSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// Response message for ResourcePoolService.UpdateResourcePool method.
// Return errors:
//   NOT_FOUND:   if the resource pool is not found.
type UpdateResourcePoolResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResourcePoolResponse) Reset()         { *m = UpdateResourcePoolResponse{} }
func (m *UpdateResourcePoolResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResourcePoolResponse) ProtoMessage()    {}
func (*UpdateResourcePoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7d00ee7eff1a2d, []int{7}
}

func (m *UpdateResourcePoolResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResourcePoolResponse.Unmarshal(m, b)
}
func (m *UpdateResourcePoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResourcePoolResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResourcePoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResourcePoolResponse.Merge(m, src)
}
func (m *UpdateResourcePoolResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResourcePoolResponse.Size(m)
}
func (m *UpdateResourcePoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResourcePoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResourcePoolResponse proto.InternalMessageInfo

// Request message for ResourcePoolService.LookupResourcePoolID method.
type LookupResourcePoolIDRequest struct {
	// The resource pool path to look up the resource pool ID.
	Path                 *respool.ResourcePoolPath `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *LookupResourcePoolIDRequest) Reset()         { *m = LookupResourcePoolIDRequest{} }
func (m *LookupResourcePoolIDRequest) String() string { return proto.CompactTextString(m) }
func (*LookupResourcePoolIDRequest) ProtoMessage()    {}
func (*LookupResourcePoolIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7d00ee7eff1a2d, []int{8}
}

func (m *LookupResourcePoolIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupResourcePoolIDRequest.Unmarshal(m, b)
}
func (m *LookupResourcePoolIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupResourcePoolIDRequest.Marshal(b, m, deterministic)
}
func (m *LookupResourcePoolIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupResourcePoolIDRequest.Merge(m, src)
}
func (m *LookupResourcePoolIDRequest) XXX_Size() int {
	return xxx_messageInfo_LookupResourcePoolIDRequest.Size(m)
}
func (m *LookupResourcePoolIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupResourcePoolIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupResourcePoolIDRequest proto.InternalMessageInfo

func (m *LookupResourcePoolIDRequest) GetPath() *respool.ResourcePoolPath {
	if m != nil {
		return m.Path
	}
	return nil
}

// Response message for ResourcePoolService.LookupResourcePoolID method.
// Response message for ResourcePoolService.UpdateResourcePool method.
// Return errors:
//   NOT_FOUND:         if the resource pool is not found.
//   INVALID_ARGUMENT:  if the resource pool path is invalid.
type LookupResourcePoolIDResponse struct {
	// The resource pool ID for the given resource pool path.
	RespoolId            *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=respool_id,json=respoolId,proto3" json:"respool_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *LookupResourcePoolIDResponse) Reset()         { *m = LookupResourcePoolIDResponse{} }
func (m *LookupResourcePoolIDResponse) String() string { return proto.CompactTextString(m) }
func (*LookupResourcePoolIDResponse) ProtoMessage()    {}
func (*LookupResourcePoolIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7d00ee7eff1a2d, []int{9}
}

func (m *LookupResourcePoolIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupResourcePoolIDResponse.Unmarshal(m, b)
}
func (m *LookupResourcePoolIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupResourcePoolIDResponse.Marshal(b, m, deterministic)
}
func (m *LookupResourcePoolIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupResourcePoolIDResponse.Merge(m, src)
}
func (m *LookupResourcePoolIDResponse) XXX_Size() int {
	return xxx_messageInfo_LookupResourcePoolIDResponse.Size(m)
}
func (m *LookupResourcePoolIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupResourcePoolIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupResourcePoolIDResponse proto.InternalMessageInfo

func (m *LookupResourcePoolIDResponse) GetRespoolId() *peloton.ResourcePoolID {
	if m != nil {
		return m.RespoolId
	}
	return nil
}

// Request message for ResourcePoolService.QueryResourcePools method.
type QueryResourcePoolsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResourcePoolsRequest) Reset()         { *m = QueryResourcePoolsRequest{} }
func (m *QueryResourcePoolsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryResourcePoolsRequest) ProtoMessage()    {}
func (*QueryResourcePoolsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7d00ee7eff1a2d, []int{10}
}

func (m *QueryResourcePoolsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResourcePoolsRequest.Unmarshal(m, b)
}
func (m *QueryResourcePoolsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResourcePoolsRequest.Marshal(b, m, deterministic)
}
func (m *QueryResourcePoolsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResourcePoolsRequest.Merge(m, src)
}
func (m *QueryResourcePoolsRequest) XXX_Size() int {
	return xxx_messageInfo_QueryResourcePoolsRequest.Size(m)
}
func (m *QueryResourcePoolsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResourcePoolsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResourcePoolsRequest proto.InternalMessageInfo

// Response message for ResourcePoolService.QueryResourcePools method.
// Return errors:
type QueryResourcePoolsResponse struct {
	Respools             []*respool.ResourcePoolInfo `protobuf:"bytes,1,rep,name=respools,proto3" json:"respools,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *QueryResourcePoolsResponse) Reset()         { *m = QueryResourcePoolsResponse{} }
func (m *QueryResourcePoolsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResourcePoolsResponse) ProtoMessage()    {}
func (*QueryResourcePoolsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee7d00ee7eff1a2d, []int{11}
}

func (m *QueryResourcePoolsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResourcePoolsResponse.Unmarshal(m, b)
}
func (m *QueryResourcePoolsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResourcePoolsResponse.Marshal(b, m, deterministic)
}
func (m *QueryResourcePoolsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResourcePoolsResponse.Merge(m, src)
}
func (m *QueryResourcePoolsResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResourcePoolsResponse.Size(m)
}
func (m *QueryResourcePoolsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResourcePoolsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResourcePoolsResponse proto.InternalMessageInfo

func (m *QueryResourcePoolsResponse) GetRespools() []*respool.ResourcePoolInfo {
	if m != nil {
		return m.Respools
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateResourcePoolRequest)(nil), "peloton.api.v1alpha.respool.CreateResourcePoolRequest")
	proto.RegisterType((*CreateResourcePoolResponse)(nil), "peloton.api.v1alpha.respool.CreateResourcePoolResponse")
	proto.RegisterType((*GetResourcePoolRequest)(nil), "peloton.api.v1alpha.respool.GetResourcePoolRequest")
	proto.RegisterType((*GetResourcePoolResponse)(nil), "peloton.api.v1alpha.respool.GetResourcePoolResponse")
	proto.RegisterType((*DeleteResourcePoolRequest)(nil), "peloton.api.v1alpha.respool.DeleteResourcePoolRequest")
	proto.RegisterType((*DeleteResourcePoolResponse)(nil), "peloton.api.v1alpha.respool.DeleteResourcePoolResponse")
	proto.RegisterType((*UpdateResourcePoolRequest)(nil), "peloton.api.v1alpha.respool.UpdateResourcePoolRequest")
	proto.RegisterType((*UpdateResourcePoolResponse)(nil), "peloton.api.v1alpha.respool.UpdateResourcePoolResponse")
	proto.RegisterType((*LookupResourcePoolIDRequest)(nil), "peloton.api.v1alpha.respool.LookupResourcePoolIDRequest")
	proto.RegisterType((*LookupResourcePoolIDResponse)(nil), "peloton.api.v1alpha.respool.LookupResourcePoolIDResponse")
	proto.RegisterType((*QueryResourcePoolsRequest)(nil), "peloton.api.v1alpha.respool.QueryResourcePoolsRequest")
	proto.RegisterType((*QueryResourcePoolsResponse)(nil), "peloton.api.v1alpha.respool.QueryResourcePoolsResponse")
}

func init() {
	proto.RegisterFile("peloton/api/v1alpha/respool/svc/respool_svc.proto", fileDescriptor_ee7d00ee7eff1a2d)
}

var fileDescriptor_ee7d00ee7eff1a2d = []byte{
	// 523 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0x55, 0xa0, 0x2a, 0x65, 0x10, 0x20, 0x5c, 0x04, 0x5d, 0xef, 0x4a, 0x85, 0x9c, 0x40, 0x88,
	0xac, 0xda, 0x22, 0x3e, 0x8e, 0xfd, 0x90, 0xaa, 0x45, 0x1c, 0x4a, 0x80, 0x0b, 0x97, 0x25, 0x38,
	0x43, 0x13, 0x88, 0xd6, 0x26, 0x4e, 0x22, 0x21, 0x71, 0xe5, 0xc4, 0x95, 0x5f, 0xc1, 0x2f, 0xe0,
	0xca, 0x3f, 0x43, 0xf1, 0x4e, 0xaa, 0x6d, 0xe3, 0x24, 0xa4, 0x62, 0x0f, 0x9c, 0x76, 0x65, 0xfb,
	0xbd, 0x79, 0xf3, 0x32, 0xcf, 0x32, 0x6c, 0x29, 0x4c, 0x64, 0x26, 0x67, 0xe3, 0x40, 0xc5, 0xe3,
	0x62, 0x2b, 0x48, 0x54, 0x14, 0x8c, 0x53, 0xd4, 0x4a, 0xca, 0x64, 0xac, 0x0b, 0x51, 0xfd, 0x9f,
	0xea, 0x42, 0x78, 0x2a, 0x95, 0x99, 0x64, 0x43, 0x82, 0x78, 0x81, 0x8a, 0x3d, 0x82, 0x78, 0x74,
	0x8c, 0xdf, 0xb5, 0xf1, 0x55, 0x00, 0x83, 0xe7, 0xf7, 0xdb, 0x4a, 0xd2, 0xef, 0xfc, 0xa8, 0xfb,
	0xd3, 0x81, 0xc1, 0x7e, 0x8a, 0x41, 0x86, 0x3e, 0x6a, 0x99, 0xa7, 0x02, 0x8f, 0xa4, 0x4c, 0x7c,
	0xfc, 0x9c, 0xa3, 0xce, 0xd8, 0x73, 0x80, 0x4a, 0x5d, 0x1c, 0x6e, 0x38, 0x77, 0x9c, 0x7b, 0x57,
	0xb6, 0x1f, 0x78, 0x36, 0x75, 0xd5, 0xda, 0x22, 0xcb, 0xe4, 0xc0, 0xbf, 0x4c, 0xf0, 0x49, 0xc8,
	0x76, 0x61, 0x45, 0x2b, 0x14, 0x1b, 0x17, 0x0c, 0xcb, 0x43, 0xaf, 0xa5, 0xc7, 0x53, 0x2c, 0xaf,
	0x14, 0x0a, 0xdf, 0x40, 0xdd, 0x08, 0xb8, 0x4d, 0xab, 0x56, 0x72, 0xa6, 0xf1, 0x5f, 0x8a, 0x75,
	0x7f, 0x38, 0x70, 0xeb, 0x10, 0xb3, 0x65, 0x7b, 0xe2, 0xc1, 0x7a, 0x3c, 0x13, 0x49, 0x1e, 0xe2,
	0x54, 0x44, 0x71, 0x12, 0x4e, 0xcb, 0x75, 0x6d, 0x2c, 0x5a, 0xf3, 0x6f, 0xd0, 0xd6, 0x7e, 0xb9,
	0x53, 0x62, 0xb5, 0xfb, 0xcb, 0x81, 0xdb, 0x35, 0x59, 0xd4, 0xfe, 0x21, 0x5c, 0x22, 0x62, 0x12,
	0xf5, 0xf7, 0x16, 0x4f, 0x66, 0x1f, 0xa4, 0x5f, 0xa1, 0xd9, 0x6b, 0xb8, 0x36, 0x17, 0x43, 0x0b,
	0xa5, 0x9e, 0x8b, 0xfd, 0xf9, 0xae, 0x1a, 0x12, 0x9f, 0x38, 0xdc, 0x63, 0x18, 0x1c, 0x60, 0x82,
	0x4b, 0x9f, 0x33, 0x77, 0x04, 0xdc, 0x56, 0x68, 0xee, 0x92, 0x99, 0xf7, 0x37, 0x2a, 0xfc, 0x3f,
	0xe6, 0x7d, 0x04, 0xdc, 0xa6, 0x95, 0x5a, 0x79, 0x07, 0xc3, 0x17, 0x52, 0x7e, 0xca, 0xd5, 0x19,
	0x0d, 0xd4, 0xcb, 0x2e, 0xac, 0xa8, 0x20, 0x8b, 0x7a, 0x0f, 0xc3, 0x51, 0x90, 0x45, 0xbe, 0x81,
	0xba, 0x1f, 0x61, 0x64, 0xaf, 0xb0, 0x84, 0xc4, 0x0d, 0x61, 0xf0, 0x32, 0xc7, 0xf4, 0xcb, 0xe2,
	0x09, 0x4d, 0xbd, 0xb8, 0xc7, 0xc0, 0x6d, 0x9b, 0x24, 0x63, 0x02, 0x6b, 0x27, 0xa3, 0xea, 0x9c,
	0x67, 0x54, 0x4f, 0xe0, 0xdb, 0xbf, 0x57, 0x61, 0xfd, 0xd4, 0xc7, 0xc0, 0xb4, 0x88, 0x05, 0xb2,
	0x6f, 0x0e, 0xb0, 0xfa, 0xd5, 0xc3, 0x1e, 0xb7, 0xd6, 0x69, 0xbc, 0x57, 0xf9, 0x93, 0xde, 0x38,
	0x6a, 0xf5, 0x2b, 0x5c, 0x3f, 0x93, 0x7f, 0xb6, 0xd3, 0xca, 0x65, 0xbf, 0xc4, 0xf8, 0xa3, 0x7e,
	0x20, 0xaa, 0x5e, 0xba, 0x50, 0xcf, 0x56, 0x87, 0x0b, 0x8d, 0xa9, 0xef, 0x70, 0xa1, 0x39, 0xc4,
	0x46, 0x47, 0x3d, 0x18, 0x1d, 0x3a, 0x1a, 0x53, 0xdf, 0xa1, 0xa3, 0x39, 0x81, 0xec, 0xbb, 0x03,
	0x37, 0x6d, 0x01, 0x61, 0x4f, 0x5b, 0x19, 0x5b, 0x52, 0xcb, 0x9f, 0x9d, 0x03, 0xb9, 0xe0, 0x4a,
	0x3d, 0x25, 0x1d, 0xae, 0x34, 0x66, 0xae, 0xc3, 0x95, 0xe6, 0x38, 0xee, 0xed, 0xc1, 0x66, 0x1b,
	0x52, 0x17, 0xe2, 0xed, 0x66, 0xc7, 0x9b, 0xe8, 0xfd, 0xaa, 0x79, 0x9d, 0xec, 0xfc, 0x09, 0x00,
	0x00, 0xff, 0xff, 0x76, 0x96, 0x6d, 0x12, 0x3d, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourcePoolServiceClient is the client API for ResourcePoolService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourcePoolServiceClient interface {
	// Create a resource pool entity for a given config
	CreateResourcePool(ctx context.Context, in *CreateResourcePoolRequest, opts ...grpc.CallOption) (*CreateResourcePoolResponse, error)
	// Get the resource pool entity
	GetResourcePool(ctx context.Context, in *GetResourcePoolRequest, opts ...grpc.CallOption) (*GetResourcePoolResponse, error)
	// Delete a resource pool entity
	DeleteResourcePool(ctx context.Context, in *DeleteResourcePoolRequest, opts ...grpc.CallOption) (*DeleteResourcePoolResponse, error)
	// Modify a resource pool entity
	UpdateResourcePool(ctx context.Context, in *UpdateResourcePoolRequest, opts ...grpc.CallOption) (*UpdateResourcePoolResponse, error)
	// Lookup the resource pool ID for a given resource pool path
	LookupResourcePoolID(ctx context.Context, in *LookupResourcePoolIDRequest, opts ...grpc.CallOption) (*LookupResourcePoolIDResponse, error)
	// Query the resource pools.
	QueryResourcePools(ctx context.Context, in *QueryResourcePoolsRequest, opts ...grpc.CallOption) (*QueryResourcePoolsResponse, error)
}

type resourcePoolServiceClient struct {
	cc *grpc.ClientConn
}

func NewResourcePoolServiceClient(cc *grpc.ClientConn) ResourcePoolServiceClient {
	return &resourcePoolServiceClient{cc}
}

func (c *resourcePoolServiceClient) CreateResourcePool(ctx context.Context, in *CreateResourcePoolRequest, opts ...grpc.CallOption) (*CreateResourcePoolResponse, error) {
	out := new(CreateResourcePoolResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.v1alpha.respool.ResourcePoolService/CreateResourcePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourcePoolServiceClient) GetResourcePool(ctx context.Context, in *GetResourcePoolRequest, opts ...grpc.CallOption) (*GetResourcePoolResponse, error) {
	out := new(GetResourcePoolResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.v1alpha.respool.ResourcePoolService/GetResourcePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourcePoolServiceClient) DeleteResourcePool(ctx context.Context, in *DeleteResourcePoolRequest, opts ...grpc.CallOption) (*DeleteResourcePoolResponse, error) {
	out := new(DeleteResourcePoolResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.v1alpha.respool.ResourcePoolService/DeleteResourcePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourcePoolServiceClient) UpdateResourcePool(ctx context.Context, in *UpdateResourcePoolRequest, opts ...grpc.CallOption) (*UpdateResourcePoolResponse, error) {
	out := new(UpdateResourcePoolResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.v1alpha.respool.ResourcePoolService/UpdateResourcePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourcePoolServiceClient) LookupResourcePoolID(ctx context.Context, in *LookupResourcePoolIDRequest, opts ...grpc.CallOption) (*LookupResourcePoolIDResponse, error) {
	out := new(LookupResourcePoolIDResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.v1alpha.respool.ResourcePoolService/LookupResourcePoolID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourcePoolServiceClient) QueryResourcePools(ctx context.Context, in *QueryResourcePoolsRequest, opts ...grpc.CallOption) (*QueryResourcePoolsResponse, error) {
	out := new(QueryResourcePoolsResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.v1alpha.respool.ResourcePoolService/QueryResourcePools", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourcePoolServiceServer is the server API for ResourcePoolService service.
type ResourcePoolServiceServer interface {
	// Create a resource pool entity for a given config
	CreateResourcePool(context.Context, *CreateResourcePoolRequest) (*CreateResourcePoolResponse, error)
	// Get the resource pool entity
	GetResourcePool(context.Context, *GetResourcePoolRequest) (*GetResourcePoolResponse, error)
	// Delete a resource pool entity
	DeleteResourcePool(context.Context, *DeleteResourcePoolRequest) (*DeleteResourcePoolResponse, error)
	// Modify a resource pool entity
	UpdateResourcePool(context.Context, *UpdateResourcePoolRequest) (*UpdateResourcePoolResponse, error)
	// Lookup the resource pool ID for a given resource pool path
	LookupResourcePoolID(context.Context, *LookupResourcePoolIDRequest) (*LookupResourcePoolIDResponse, error)
	// Query the resource pools.
	QueryResourcePools(context.Context, *QueryResourcePoolsRequest) (*QueryResourcePoolsResponse, error)
}

func RegisterResourcePoolServiceServer(s *grpc.Server, srv ResourcePoolServiceServer) {
	s.RegisterService(&_ResourcePoolService_serviceDesc, srv)
}

func _ResourcePoolService_CreateResourcePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateResourcePoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourcePoolServiceServer).CreateResourcePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.v1alpha.respool.ResourcePoolService/CreateResourcePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourcePoolServiceServer).CreateResourcePool(ctx, req.(*CreateResourcePoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourcePoolService_GetResourcePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourcePoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourcePoolServiceServer).GetResourcePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.v1alpha.respool.ResourcePoolService/GetResourcePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourcePoolServiceServer).GetResourcePool(ctx, req.(*GetResourcePoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourcePoolService_DeleteResourcePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteResourcePoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourcePoolServiceServer).DeleteResourcePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.v1alpha.respool.ResourcePoolService/DeleteResourcePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourcePoolServiceServer).DeleteResourcePool(ctx, req.(*DeleteResourcePoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourcePoolService_UpdateResourcePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateResourcePoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourcePoolServiceServer).UpdateResourcePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.v1alpha.respool.ResourcePoolService/UpdateResourcePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourcePoolServiceServer).UpdateResourcePool(ctx, req.(*UpdateResourcePoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourcePoolService_LookupResourcePoolID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupResourcePoolIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourcePoolServiceServer).LookupResourcePoolID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.v1alpha.respool.ResourcePoolService/LookupResourcePoolID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourcePoolServiceServer).LookupResourcePoolID(ctx, req.(*LookupResourcePoolIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourcePoolService_QueryResourcePools_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryResourcePoolsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourcePoolServiceServer).QueryResourcePools(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.v1alpha.respool.ResourcePoolService/QueryResourcePools",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourcePoolServiceServer).QueryResourcePools(ctx, req.(*QueryResourcePoolsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourcePoolService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "peloton.api.v1alpha.respool.ResourcePoolService",
	HandlerType: (*ResourcePoolServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateResourcePool",
			Handler:    _ResourcePoolService_CreateResourcePool_Handler,
		},
		{
			MethodName: "GetResourcePool",
			Handler:    _ResourcePoolService_GetResourcePool_Handler,
		},
		{
			MethodName: "DeleteResourcePool",
			Handler:    _ResourcePoolService_DeleteResourcePool_Handler,
		},
		{
			MethodName: "UpdateResourcePool",
			Handler:    _ResourcePoolService_UpdateResourcePool_Handler,
		},
		{
			MethodName: "LookupResourcePoolID",
			Handler:    _ResourcePoolService_LookupResourcePoolID_Handler,
		},
		{
			MethodName: "QueryResourcePools",
			Handler:    _ResourcePoolService_QueryResourcePools_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "peloton/api/v1alpha/respool/svc/respool_svc.proto",
}
