// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peloton/api/v1alpha/watch/watch.proto

package watch

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	peloton "github.com/uber/peloton/.gen/peloton/api/v1alpha/peloton"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// StatelessJobFilter specifies the job(s) to watch.
type StatelessJobFilter struct {
	// The IDs of the jobs to watch. If unset, all jobs will be monitored.
	JobIds               []*peloton.JobID `protobuf:"bytes,1,rep,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StatelessJobFilter) Reset()         { *m = StatelessJobFilter{} }
func (m *StatelessJobFilter) String() string { return proto.CompactTextString(m) }
func (*StatelessJobFilter) ProtoMessage()    {}
func (*StatelessJobFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_34b3eff24454fcfc, []int{0}
}

func (m *StatelessJobFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatelessJobFilter.Unmarshal(m, b)
}
func (m *StatelessJobFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatelessJobFilter.Marshal(b, m, deterministic)
}
func (m *StatelessJobFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatelessJobFilter.Merge(m, src)
}
func (m *StatelessJobFilter) XXX_Size() int {
	return xxx_messageInfo_StatelessJobFilter.Size(m)
}
func (m *StatelessJobFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_StatelessJobFilter.DiscardUnknown(m)
}

var xxx_messageInfo_StatelessJobFilter proto.InternalMessageInfo

func (m *StatelessJobFilter) GetJobIds() []*peloton.JobID {
	if m != nil {
		return m.JobIds
	}
	return nil
}

// PodFilter specifies a filter for the pod(s) to be watched.
type PodFilter struct {
	// The JobID of the pods that will be monitored.
	JobId *peloton.JobID `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// Names of the pods to watch. This filter is active only if the
	// job_id filter is defined as well. If empty, all pods in the job will
	// be watched.
	PodNames []*peloton.PodName `protobuf:"bytes,2,rep,name=pod_names,json=podNames,proto3" json:"pod_names,omitempty"`
	// Filter based on labels in the pod specification. Only pods which
	// have all the labels provided in the filter will be watched.
	Labels               []*peloton.Label `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PodFilter) Reset()         { *m = PodFilter{} }
func (m *PodFilter) String() string { return proto.CompactTextString(m) }
func (*PodFilter) ProtoMessage()    {}
func (*PodFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_34b3eff24454fcfc, []int{1}
}

func (m *PodFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodFilter.Unmarshal(m, b)
}
func (m *PodFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodFilter.Marshal(b, m, deterministic)
}
func (m *PodFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodFilter.Merge(m, src)
}
func (m *PodFilter) XXX_Size() int {
	return xxx_messageInfo_PodFilter.Size(m)
}
func (m *PodFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_PodFilter.DiscardUnknown(m)
}

var xxx_messageInfo_PodFilter proto.InternalMessageInfo

func (m *PodFilter) GetJobId() *peloton.JobID {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *PodFilter) GetPodNames() []*peloton.PodName {
	if m != nil {
		return m.PodNames
	}
	return nil
}

func (m *PodFilter) GetLabels() []*peloton.Label {
	if m != nil {
		return m.Labels
	}
	return nil
}

func init() {
	proto.RegisterType((*StatelessJobFilter)(nil), "peloton.api.v1alpha.watch.StatelessJobFilter")
	proto.RegisterType((*PodFilter)(nil), "peloton.api.v1alpha.watch.PodFilter")
}

func init() {
	proto.RegisterFile("peloton/api/v1alpha/watch/watch.proto", fileDescriptor_34b3eff24454fcfc)
}

var fileDescriptor_34b3eff24454fcfc = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2d, 0x48, 0xcd, 0xc9,
	0x2f, 0xc9, 0xcf, 0xd3, 0x4f, 0x2c, 0xc8, 0xd4, 0x2f, 0x33, 0x4c, 0xcc, 0x29, 0xc8, 0x48, 0xd4,
	0x2f, 0x4f, 0x2c, 0x49, 0xce, 0x80, 0x90, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x92, 0x50,
	0x65, 0x7a, 0x89, 0x05, 0x99, 0x7a, 0x50, 0x65, 0x7a, 0x60, 0x05, 0x52, 0x8a, 0xd8, 0x4c, 0x80,
	0x29, 0x07, 0xeb, 0x56, 0x0a, 0xe4, 0x12, 0x0a, 0x2e, 0x49, 0x2c, 0x49, 0xcd, 0x49, 0x2d, 0x2e,
	0xf6, 0xca, 0x4f, 0x72, 0xcb, 0xcc, 0x29, 0x49, 0x2d, 0x12, 0xb2, 0xe6, 0x62, 0xcf, 0xca, 0x4f,
	0x8a, 0xcf, 0x4c, 0x29, 0x96, 0x60, 0x54, 0x60, 0xd6, 0xe0, 0x36, 0x52, 0xd2, 0xc3, 0x66, 0x0b,
	0x4c, 0xcc, 0x2b, 0x3f, 0xc9, 0xd3, 0x25, 0x88, 0x2d, 0x2b, 0x3f, 0xc9, 0x33, 0xa5, 0x58, 0xe9,
	0x28, 0x23, 0x17, 0x67, 0x40, 0x7e, 0x0a, 0xd4, 0x28, 0x4b, 0x2e, 0x36, 0x88, 0x51, 0x12, 0x8c,
	0x0a, 0x8c, 0x44, 0x9a, 0xc4, 0x0a, 0x36, 0x49, 0xc8, 0x91, 0x8b, 0xb3, 0x20, 0x3f, 0x25, 0x3e,
	0x2f, 0x31, 0x37, 0xb5, 0x58, 0x82, 0x09, 0xec, 0x0e, 0x15, 0xbc, 0xba, 0x03, 0xf2, 0x53, 0xfc,
	0x12, 0x73, 0x53, 0x83, 0x38, 0x0a, 0x20, 0x8c, 0x62, 0x21, 0x2b, 0x2e, 0xb6, 0x9c, 0xc4, 0xa4,
	0xd4, 0x9c, 0x62, 0x09, 0x66, 0x22, 0xfc, 0xe1, 0x03, 0x52, 0x1a, 0x04, 0xd5, 0xe1, 0x64, 0xc6,
	0x85, 0x3b, 0x68, 0xa3, 0x24, 0x71, 0x46, 0x4e, 0x12, 0x1b, 0x38, 0x64, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xd6, 0xda, 0x91, 0xe3, 0xc0, 0x01, 0x00, 0x00,
}
