// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peloton/api/v0/respool/respool.proto

package respool

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	changelog "github.com/uber/peloton/.gen/peloton/api/v0/changelog"
	peloton "github.com/uber/peloton/.gen/peloton/api/v0/peloton"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// ReservationType indicates reservation type for the resourcepool
type ReservationType int32

const (
	ReservationType_UNKNOWN_TYPE ReservationType = 0
	// ELASTIC reservation enables resource pool to be elastic
	// in reservation , which means other resource pool
	// can take resources from this resource pool as well
	// as this resource pool also can take resources from
	// any other resource pool. This is the by default behavior
	// for the resource pool
	ReservationType_ELASTIC ReservationType = 1
	// STATIC reservation enables resource pool to be static
	// in reservation , which means irrespective of the demand
	// this resource pool will have atleast reservation as entitlement
	// value. No other resource pool can take resources from this
	// resource pool. If demand for this resource pool is high
	// it can take resources from other resource pools.
	// By default value for reservation type ELASTIC.
	ReservationType_STATIC ReservationType = 2
)

var ReservationType_name = map[int32]string{
	0: "UNKNOWN_TYPE",
	1: "ELASTIC",
	2: "STATIC",
}

var ReservationType_value = map[string]int32{
	"UNKNOWN_TYPE": 0,
	"ELASTIC":      1,
	"STATIC":       2,
}

func (x ReservationType) String() string {
	return proto.EnumName(ReservationType_name, int32(x))
}

func (ReservationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{0}
}

//*
// Scheduling policy for Resource Pool.
type SchedulingPolicy int32

const (
	SchedulingPolicy_UNKNOWN SchedulingPolicy = 0
	// This scheduling policy will return item for highest priority in FIFO order
	SchedulingPolicy_PriorityFIFO SchedulingPolicy = 1
)

var SchedulingPolicy_name = map[int32]string{
	0: "UNKNOWN",
	1: "PriorityFIFO",
}

var SchedulingPolicy_value = map[string]int32{
	"UNKNOWN":      0,
	"PriorityFIFO": 1,
}

func (x SchedulingPolicy) String() string {
	return proto.EnumName(SchedulingPolicy_name, int32(x))
}

func (SchedulingPolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{1}
}

//*
//   A fully qualified path to a resource pool in a resource pool hierrarchy.
//   The path to a resource pool can be defined as an absolute path,
//   starting from the root node and separated by a slash.
//
//   The resource hierarchy is anchored at a node called the root,
//   designated by a slash "/".
//
//   For the below resource hierarchy ; the "compute" resource pool would be
//   desgignated by path: /infrastructure/compute
//               root
//                ├─ infrastructure
//                │  └─ compute
//                └─ marketplace
type ResourcePoolPath struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourcePoolPath) Reset()         { *m = ResourcePoolPath{} }
func (m *ResourcePoolPath) String() string { return proto.CompactTextString(m) }
func (*ResourcePoolPath) ProtoMessage()    {}
func (*ResourcePoolPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{0}
}

func (m *ResourcePoolPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePoolPath.Unmarshal(m, b)
}
func (m *ResourcePoolPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePoolPath.Marshal(b, m, deterministic)
}
func (m *ResourcePoolPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePoolPath.Merge(m, src)
}
func (m *ResourcePoolPath) XXX_Size() int {
	return xxx_messageInfo_ResourcePoolPath.Size(m)
}
func (m *ResourcePoolPath) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePoolPath.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePoolPath proto.InternalMessageInfo

func (m *ResourcePoolPath) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

//*
//  Resource configuration for a resource
type ResourceConfig struct {
	// Type of the resource
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// Reservation/min of the resource
	Reservation float64 `protobuf:"fixed64,2,opt,name=reservation,proto3" json:"reservation,omitempty"`
	// Limit of the resource
	Limit float64 `protobuf:"fixed64,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// Share on the resource pool
	Share float64 `protobuf:"fixed64,4,opt,name=share,proto3" json:"share,omitempty"`
	// ReservationType indicates the the type of reservation
	// There are two kind of reservation
	// 1. ELASTIC
	// 2. STATIC
	Type                 ReservationType `protobuf:"varint,5,opt,name=type,proto3,enum=peloton.api.v0.respool.ReservationType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ResourceConfig) Reset()         { *m = ResourceConfig{} }
func (m *ResourceConfig) String() string { return proto.CompactTextString(m) }
func (*ResourceConfig) ProtoMessage()    {}
func (*ResourceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{1}
}

func (m *ResourceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceConfig.Unmarshal(m, b)
}
func (m *ResourceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceConfig.Marshal(b, m, deterministic)
}
func (m *ResourceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceConfig.Merge(m, src)
}
func (m *ResourceConfig) XXX_Size() int {
	return xxx_messageInfo_ResourceConfig.Size(m)
}
func (m *ResourceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceConfig proto.InternalMessageInfo

func (m *ResourceConfig) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ResourceConfig) GetReservation() float64 {
	if m != nil {
		return m.Reservation
	}
	return 0
}

func (m *ResourceConfig) GetLimit() float64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ResourceConfig) GetShare() float64 {
	if m != nil {
		return m.Share
	}
	return 0
}

func (m *ResourceConfig) GetType() ReservationType {
	if m != nil {
		return m.Type
	}
	return ReservationType_UNKNOWN_TYPE
}

//*
//  Resource Pool configuration
type ResourcePoolConfig struct {
	// Change log entry of the Resource Pool config
	// TODO use peloton.Changelog
	ChangeLog *changelog.ChangeLog `protobuf:"bytes,1,opt,name=changeLog,proto3" json:"changeLog,omitempty"`
	// Name of the resource pool
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Owning team of the pool
	OwningTeam string `protobuf:"bytes,3,opt,name=owningTeam,proto3" json:"owningTeam,omitempty"`
	// LDAP groups of the pool
	LdapGroups []string `protobuf:"bytes,4,rep,name=ldapGroups,proto3" json:"ldapGroups,omitempty"`
	// Description of the resource pool
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Resource config of the Resource Pool
	Resources []*ResourceConfig `protobuf:"bytes,6,rep,name=resources,proto3" json:"resources,omitempty"`
	// Resource Pool's parent
	Parent *peloton.ResourcePoolID `protobuf:"bytes,7,opt,name=parent,proto3" json:"parent,omitempty"`
	// Task Scheduling policy
	Policy SchedulingPolicy `protobuf:"varint,8,opt,name=policy,proto3,enum=peloton.api.v0.respool.SchedulingPolicy" json:"policy,omitempty"`
	// The controller limit for this resource pool
	ControllerLimit *ControllerLimit `protobuf:"bytes,9,opt,name=controllerLimit,proto3" json:"controllerLimit,omitempty"`
	// Cap on max non-slack resources[mem,disk] in percentage
	// that can be used by revocable task.
	SlackLimit           *SlackLimit `protobuf:"bytes,10,opt,name=slackLimit,proto3" json:"slackLimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ResourcePoolConfig) Reset()         { *m = ResourcePoolConfig{} }
func (m *ResourcePoolConfig) String() string { return proto.CompactTextString(m) }
func (*ResourcePoolConfig) ProtoMessage()    {}
func (*ResourcePoolConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{2}
}

func (m *ResourcePoolConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePoolConfig.Unmarshal(m, b)
}
func (m *ResourcePoolConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePoolConfig.Marshal(b, m, deterministic)
}
func (m *ResourcePoolConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePoolConfig.Merge(m, src)
}
func (m *ResourcePoolConfig) XXX_Size() int {
	return xxx_messageInfo_ResourcePoolConfig.Size(m)
}
func (m *ResourcePoolConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePoolConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePoolConfig proto.InternalMessageInfo

func (m *ResourcePoolConfig) GetChangeLog() *changelog.ChangeLog {
	if m != nil {
		return m.ChangeLog
	}
	return nil
}

func (m *ResourcePoolConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResourcePoolConfig) GetOwningTeam() string {
	if m != nil {
		return m.OwningTeam
	}
	return ""
}

func (m *ResourcePoolConfig) GetLdapGroups() []string {
	if m != nil {
		return m.LdapGroups
	}
	return nil
}

func (m *ResourcePoolConfig) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ResourcePoolConfig) GetResources() []*ResourceConfig {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ResourcePoolConfig) GetParent() *peloton.ResourcePoolID {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *ResourcePoolConfig) GetPolicy() SchedulingPolicy {
	if m != nil {
		return m.Policy
	}
	return SchedulingPolicy_UNKNOWN
}

func (m *ResourcePoolConfig) GetControllerLimit() *ControllerLimit {
	if m != nil {
		return m.ControllerLimit
	}
	return nil
}

func (m *ResourcePoolConfig) GetSlackLimit() *SlackLimit {
	if m != nil {
		return m.SlackLimit
	}
	return nil
}

// The max limit of resources `CONTROLLER`(see TaskType) tasks can use in
// this resource pool. This is defined as a percentage of the resource pool's
// reservation. If undefined there is no maximum limit for controller tasks
// i.e. controller tasks will not be treated differently. For eg if the
// resource pool's reservation is defined as:
//
//      cpu:100
//      mem:1000
//      disk:1000
//      gpu:10
//
// And the ControllerLimit = 10 ,Then the maximum resources the controller
// tasks can use is 10% of the reservation, i.e.
//
//      cpu:10
//      mem:100
//      disk:100
//      gpu:1
//
type ControllerLimit struct {
	MaxPercent           float64  `protobuf:"fixed64,1,opt,name=maxPercent,proto3" json:"maxPercent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControllerLimit) Reset()         { *m = ControllerLimit{} }
func (m *ControllerLimit) String() string { return proto.CompactTextString(m) }
func (*ControllerLimit) ProtoMessage()    {}
func (*ControllerLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{3}
}

func (m *ControllerLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerLimit.Unmarshal(m, b)
}
func (m *ControllerLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerLimit.Marshal(b, m, deterministic)
}
func (m *ControllerLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerLimit.Merge(m, src)
}
func (m *ControllerLimit) XXX_Size() int {
	return xxx_messageInfo_ControllerLimit.Size(m)
}
func (m *ControllerLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerLimit.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerLimit proto.InternalMessageInfo

func (m *ControllerLimit) GetMaxPercent() float64 {
	if m != nil {
		return m.MaxPercent
	}
	return 0
}

// The max limit of resources `REVOCABLE`(see TaskType) tasks can use in
// this resource pool. This is defined as a percentage of the resource pool's
// reservation. If undefined there is no maximum limit for revocable tasks
// i.e. revocable tasks will not be treated differently. For eg if the
// resource pool's reservation is defined as:
//
//      cpu:100
//      mem:1000
//      disk:1000
//
// And the SlackLimit = 10 ,Then the maximum resources the revocable
// tasks can use is 10% of the reservation, i.e.
//
//      mem:100
//      disk:100
//
// For cpu, it will use revocable resources.
type SlackLimit struct {
	MaxPercent           float64  `protobuf:"fixed64,1,opt,name=maxPercent,proto3" json:"maxPercent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlackLimit) Reset()         { *m = SlackLimit{} }
func (m *SlackLimit) String() string { return proto.CompactTextString(m) }
func (*SlackLimit) ProtoMessage()    {}
func (*SlackLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{4}
}

func (m *SlackLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlackLimit.Unmarshal(m, b)
}
func (m *SlackLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlackLimit.Marshal(b, m, deterministic)
}
func (m *SlackLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlackLimit.Merge(m, src)
}
func (m *SlackLimit) XXX_Size() int {
	return xxx_messageInfo_SlackLimit.Size(m)
}
func (m *SlackLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_SlackLimit.DiscardUnknown(m)
}

var xxx_messageInfo_SlackLimit proto.InternalMessageInfo

func (m *SlackLimit) GetMaxPercent() float64 {
	if m != nil {
		return m.MaxPercent
	}
	return 0
}

type ResourceUsage struct {
	// Type of the resource
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// Allocation of the resource
	Allocation float64 `protobuf:"fixed64,2,opt,name=allocation,proto3" json:"allocation,omitempty"`
	// slack is the resource which is allocated
	// but not used and mesos will give those resources as
	// revocable offers
	Slack                float64  `protobuf:"fixed64,3,opt,name=slack,proto3" json:"slack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceUsage) Reset()         { *m = ResourceUsage{} }
func (m *ResourceUsage) String() string { return proto.CompactTextString(m) }
func (*ResourceUsage) ProtoMessage()    {}
func (*ResourceUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{5}
}

func (m *ResourceUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceUsage.Unmarshal(m, b)
}
func (m *ResourceUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceUsage.Marshal(b, m, deterministic)
}
func (m *ResourceUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceUsage.Merge(m, src)
}
func (m *ResourceUsage) XXX_Size() int {
	return xxx_messageInfo_ResourceUsage.Size(m)
}
func (m *ResourceUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceUsage.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceUsage proto.InternalMessageInfo

func (m *ResourceUsage) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ResourceUsage) GetAllocation() float64 {
	if m != nil {
		return m.Allocation
	}
	return 0
}

func (m *ResourceUsage) GetSlack() float64 {
	if m != nil {
		return m.Slack
	}
	return 0
}

type ResourcePoolInfo struct {
	// Resource Pool Id
	Id *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ResourcePool config
	Config *ResourcePoolConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// Resource Pool's parent
	//TODO: parent duplicated from ResourcePoolConfig
	Parent *peloton.ResourcePoolID `protobuf:"bytes,3,opt,name=parent,proto3" json:"parent,omitempty"`
	// Resource Pool's children
	Children []*peloton.ResourcePoolID `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`
	// Resource usage for each resource kind
	Usage []*ResourceUsage `protobuf:"bytes,5,rep,name=usage,proto3" json:"usage,omitempty"`
	// Resource Pool Path
	Path                 *ResourcePoolPath `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResourcePoolInfo) Reset()         { *m = ResourcePoolInfo{} }
func (m *ResourcePoolInfo) String() string { return proto.CompactTextString(m) }
func (*ResourcePoolInfo) ProtoMessage()    {}
func (*ResourcePoolInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{6}
}

func (m *ResourcePoolInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePoolInfo.Unmarshal(m, b)
}
func (m *ResourcePoolInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePoolInfo.Marshal(b, m, deterministic)
}
func (m *ResourcePoolInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePoolInfo.Merge(m, src)
}
func (m *ResourcePoolInfo) XXX_Size() int {
	return xxx_messageInfo_ResourcePoolInfo.Size(m)
}
func (m *ResourcePoolInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePoolInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePoolInfo proto.InternalMessageInfo

func (m *ResourcePoolInfo) GetId() *peloton.ResourcePoolID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ResourcePoolInfo) GetConfig() *ResourcePoolConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ResourcePoolInfo) GetParent() *peloton.ResourcePoolID {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *ResourcePoolInfo) GetChildren() []*peloton.ResourcePoolID {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *ResourcePoolInfo) GetUsage() []*ResourceUsage {
	if m != nil {
		return m.Usage
	}
	return nil
}

func (m *ResourcePoolInfo) GetPath() *ResourcePoolPath {
	if m != nil {
		return m.Path
	}
	return nil
}

// DEPRECATED by google.rpc.ALREADY_EXISTS error
type ResourcePoolAlreadyExists struct {
	Id                   *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ResourcePoolAlreadyExists) Reset()         { *m = ResourcePoolAlreadyExists{} }
func (m *ResourcePoolAlreadyExists) String() string { return proto.CompactTextString(m) }
func (*ResourcePoolAlreadyExists) ProtoMessage()    {}
func (*ResourcePoolAlreadyExists) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{7}
}

func (m *ResourcePoolAlreadyExists) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePoolAlreadyExists.Unmarshal(m, b)
}
func (m *ResourcePoolAlreadyExists) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePoolAlreadyExists.Marshal(b, m, deterministic)
}
func (m *ResourcePoolAlreadyExists) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePoolAlreadyExists.Merge(m, src)
}
func (m *ResourcePoolAlreadyExists) XXX_Size() int {
	return xxx_messageInfo_ResourcePoolAlreadyExists.Size(m)
}
func (m *ResourcePoolAlreadyExists) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePoolAlreadyExists.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePoolAlreadyExists proto.InternalMessageInfo

func (m *ResourcePoolAlreadyExists) GetId() *peloton.ResourcePoolID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ResourcePoolAlreadyExists) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// DEPRECATED by google.rpc.ALREADY_EXISTS error
type InvalidResourcePoolConfig struct {
	Id                   *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *InvalidResourcePoolConfig) Reset()         { *m = InvalidResourcePoolConfig{} }
func (m *InvalidResourcePoolConfig) String() string { return proto.CompactTextString(m) }
func (*InvalidResourcePoolConfig) ProtoMessage()    {}
func (*InvalidResourcePoolConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{8}
}

func (m *InvalidResourcePoolConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidResourcePoolConfig.Unmarshal(m, b)
}
func (m *InvalidResourcePoolConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidResourcePoolConfig.Marshal(b, m, deterministic)
}
func (m *InvalidResourcePoolConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidResourcePoolConfig.Merge(m, src)
}
func (m *InvalidResourcePoolConfig) XXX_Size() int {
	return xxx_messageInfo_InvalidResourcePoolConfig.Size(m)
}
func (m *InvalidResourcePoolConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidResourcePoolConfig.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidResourcePoolConfig proto.InternalMessageInfo

func (m *InvalidResourcePoolConfig) GetId() *peloton.ResourcePoolID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *InvalidResourcePoolConfig) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// DEPRECATED by google.rpc.NOT_FOUND error
type ResourcePoolNotFound struct {
	Id                   *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ResourcePoolNotFound) Reset()         { *m = ResourcePoolNotFound{} }
func (m *ResourcePoolNotFound) String() string { return proto.CompactTextString(m) }
func (*ResourcePoolNotFound) ProtoMessage()    {}
func (*ResourcePoolNotFound) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{9}
}

func (m *ResourcePoolNotFound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePoolNotFound.Unmarshal(m, b)
}
func (m *ResourcePoolNotFound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePoolNotFound.Marshal(b, m, deterministic)
}
func (m *ResourcePoolNotFound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePoolNotFound.Merge(m, src)
}
func (m *ResourcePoolNotFound) XXX_Size() int {
	return xxx_messageInfo_ResourcePoolNotFound.Size(m)
}
func (m *ResourcePoolNotFound) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePoolNotFound.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePoolNotFound proto.InternalMessageInfo

func (m *ResourcePoolNotFound) GetId() *peloton.ResourcePoolID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ResourcePoolNotFound) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// DEPRECATED by google.rpc.NOT_FOUND error
type ResourcePoolPathNotFound struct {
	Path                 *ResourcePoolPath `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Message              string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResourcePoolPathNotFound) Reset()         { *m = ResourcePoolPathNotFound{} }
func (m *ResourcePoolPathNotFound) String() string { return proto.CompactTextString(m) }
func (*ResourcePoolPathNotFound) ProtoMessage()    {}
func (*ResourcePoolPathNotFound) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{10}
}

func (m *ResourcePoolPathNotFound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePoolPathNotFound.Unmarshal(m, b)
}
func (m *ResourcePoolPathNotFound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePoolPathNotFound.Marshal(b, m, deterministic)
}
func (m *ResourcePoolPathNotFound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePoolPathNotFound.Merge(m, src)
}
func (m *ResourcePoolPathNotFound) XXX_Size() int {
	return xxx_messageInfo_ResourcePoolPathNotFound.Size(m)
}
func (m *ResourcePoolPathNotFound) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePoolPathNotFound.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePoolPathNotFound proto.InternalMessageInfo

func (m *ResourcePoolPathNotFound) GetPath() *ResourcePoolPath {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *ResourcePoolPathNotFound) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// DEPRECATED by google.rpc.INVALID_ARGUMENT error
type InvalidResourcePoolPath struct {
	Path                 *ResourcePoolPath `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Message              string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InvalidResourcePoolPath) Reset()         { *m = InvalidResourcePoolPath{} }
func (m *InvalidResourcePoolPath) String() string { return proto.CompactTextString(m) }
func (*InvalidResourcePoolPath) ProtoMessage()    {}
func (*InvalidResourcePoolPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{11}
}

func (m *InvalidResourcePoolPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidResourcePoolPath.Unmarshal(m, b)
}
func (m *InvalidResourcePoolPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidResourcePoolPath.Marshal(b, m, deterministic)
}
func (m *InvalidResourcePoolPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidResourcePoolPath.Merge(m, src)
}
func (m *InvalidResourcePoolPath) XXX_Size() int {
	return xxx_messageInfo_InvalidResourcePoolPath.Size(m)
}
func (m *InvalidResourcePoolPath) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidResourcePoolPath.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidResourcePoolPath proto.InternalMessageInfo

func (m *InvalidResourcePoolPath) GetPath() *ResourcePoolPath {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *InvalidResourcePoolPath) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// DEPRECATED by google.rpc.FAILED_PRECONDITION error
type ResourcePoolIsBusy struct {
	Id                   *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ResourcePoolIsBusy) Reset()         { *m = ResourcePoolIsBusy{} }
func (m *ResourcePoolIsBusy) String() string { return proto.CompactTextString(m) }
func (*ResourcePoolIsBusy) ProtoMessage()    {}
func (*ResourcePoolIsBusy) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{12}
}

func (m *ResourcePoolIsBusy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePoolIsBusy.Unmarshal(m, b)
}
func (m *ResourcePoolIsBusy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePoolIsBusy.Marshal(b, m, deterministic)
}
func (m *ResourcePoolIsBusy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePoolIsBusy.Merge(m, src)
}
func (m *ResourcePoolIsBusy) XXX_Size() int {
	return xxx_messageInfo_ResourcePoolIsBusy.Size(m)
}
func (m *ResourcePoolIsBusy) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePoolIsBusy.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePoolIsBusy proto.InternalMessageInfo

func (m *ResourcePoolIsBusy) GetId() *peloton.ResourcePoolID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ResourcePoolIsBusy) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// DEPRECATED by google.rpc.INVALID_ARGUMENT error
type ResourcePoolIsNotLeaf struct {
	Id                   *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ResourcePoolIsNotLeaf) Reset()         { *m = ResourcePoolIsNotLeaf{} }
func (m *ResourcePoolIsNotLeaf) String() string { return proto.CompactTextString(m) }
func (*ResourcePoolIsNotLeaf) ProtoMessage()    {}
func (*ResourcePoolIsNotLeaf) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{13}
}

func (m *ResourcePoolIsNotLeaf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePoolIsNotLeaf.Unmarshal(m, b)
}
func (m *ResourcePoolIsNotLeaf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePoolIsNotLeaf.Marshal(b, m, deterministic)
}
func (m *ResourcePoolIsNotLeaf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePoolIsNotLeaf.Merge(m, src)
}
func (m *ResourcePoolIsNotLeaf) XXX_Size() int {
	return xxx_messageInfo_ResourcePoolIsNotLeaf.Size(m)
}
func (m *ResourcePoolIsNotLeaf) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePoolIsNotLeaf.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePoolIsNotLeaf proto.InternalMessageInfo

func (m *ResourcePoolIsNotLeaf) GetId() *peloton.ResourcePoolID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ResourcePoolIsNotLeaf) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// DEPRECATED by google.rpc.INTERNAL error
type ResourcePoolNotDeleted struct {
	Id                   *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ResourcePoolNotDeleted) Reset()         { *m = ResourcePoolNotDeleted{} }
func (m *ResourcePoolNotDeleted) String() string { return proto.CompactTextString(m) }
func (*ResourcePoolNotDeleted) ProtoMessage()    {}
func (*ResourcePoolNotDeleted) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{14}
}

func (m *ResourcePoolNotDeleted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcePoolNotDeleted.Unmarshal(m, b)
}
func (m *ResourcePoolNotDeleted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcePoolNotDeleted.Marshal(b, m, deterministic)
}
func (m *ResourcePoolNotDeleted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePoolNotDeleted.Merge(m, src)
}
func (m *ResourcePoolNotDeleted) XXX_Size() int {
	return xxx_messageInfo_ResourcePoolNotDeleted.Size(m)
}
func (m *ResourcePoolNotDeleted) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePoolNotDeleted.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePoolNotDeleted proto.InternalMessageInfo

func (m *ResourcePoolNotDeleted) GetId() *peloton.ResourcePoolID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ResourcePoolNotDeleted) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// DEPRECATED by peloton.api.v0.respool.svc.CreateResourcePoolRequest
type CreateRequest struct {
	Config               *ResourcePoolConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{15}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetConfig() *ResourcePoolConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// DEPRECATED by peloton.api.v0.respool.svc.CreateResourcePoolResponse
type CreateResponse struct {
	Error                *CreateResponse_Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Result               *peloton.ResourcePoolID `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{16}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetError() *CreateResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CreateResponse) GetResult() *peloton.ResourcePoolID {
	if m != nil {
		return m.Result
	}
	return nil
}

type CreateResponse_Error struct {
	AlreadyExists             *ResourcePoolAlreadyExists `protobuf:"bytes,1,opt,name=alreadyExists,proto3" json:"alreadyExists,omitempty"`
	InvalidResourcePoolConfig *InvalidResourcePoolConfig `protobuf:"bytes,2,opt,name=invalidResourcePoolConfig,proto3" json:"invalidResourcePoolConfig,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                   `json:"-"`
	XXX_unrecognized          []byte                     `json:"-"`
	XXX_sizecache             int32                      `json:"-"`
}

func (m *CreateResponse_Error) Reset()         { *m = CreateResponse_Error{} }
func (m *CreateResponse_Error) String() string { return proto.CompactTextString(m) }
func (*CreateResponse_Error) ProtoMessage()    {}
func (*CreateResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{16, 0}
}

func (m *CreateResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse_Error.Unmarshal(m, b)
}
func (m *CreateResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse_Error.Marshal(b, m, deterministic)
}
func (m *CreateResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse_Error.Merge(m, src)
}
func (m *CreateResponse_Error) XXX_Size() int {
	return xxx_messageInfo_CreateResponse_Error.Size(m)
}
func (m *CreateResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse_Error proto.InternalMessageInfo

func (m *CreateResponse_Error) GetAlreadyExists() *ResourcePoolAlreadyExists {
	if m != nil {
		return m.AlreadyExists
	}
	return nil
}

func (m *CreateResponse_Error) GetInvalidResourcePoolConfig() *InvalidResourcePoolConfig {
	if m != nil {
		return m.InvalidResourcePoolConfig
	}
	return nil
}

// DEPRECATED by peloton.api.v0.respool.svc.GetResourcePoolRequest
type GetRequest struct {
	// The ID of the resource pool to get
	Id *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Whether or not to include the resource pool info of the direct
	// children
	IncludeChildPools    bool     `protobuf:"varint,2,opt,name=includeChildPools,proto3" json:"includeChildPools,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{17}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() *peloton.ResourcePoolID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GetRequest) GetIncludeChildPools() bool {
	if m != nil {
		return m.IncludeChildPools
	}
	return false
}

// DEPRECATED by peloton.api.v0.respool.svc.GetResourcePoolRequest
type GetResponse struct {
	Error                *GetResponse_Error  `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Poolinfo             *ResourcePoolInfo   `protobuf:"bytes,2,opt,name=poolinfo,proto3" json:"poolinfo,omitempty"`
	ChildPools           []*ResourcePoolInfo `protobuf:"bytes,3,rep,name=childPools,proto3" json:"childPools,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{18}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetError() *GetResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetResponse) GetPoolinfo() *ResourcePoolInfo {
	if m != nil {
		return m.Poolinfo
	}
	return nil
}

func (m *GetResponse) GetChildPools() []*ResourcePoolInfo {
	if m != nil {
		return m.ChildPools
	}
	return nil
}

type GetResponse_Error struct {
	NotFound             *ResourcePoolNotFound `protobuf:"bytes,1,opt,name=notFound,proto3" json:"notFound,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetResponse_Error) Reset()         { *m = GetResponse_Error{} }
func (m *GetResponse_Error) String() string { return proto.CompactTextString(m) }
func (*GetResponse_Error) ProtoMessage()    {}
func (*GetResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{18, 0}
}

func (m *GetResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse_Error.Unmarshal(m, b)
}
func (m *GetResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse_Error.Marshal(b, m, deterministic)
}
func (m *GetResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse_Error.Merge(m, src)
}
func (m *GetResponse_Error) XXX_Size() int {
	return xxx_messageInfo_GetResponse_Error.Size(m)
}
func (m *GetResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse_Error proto.InternalMessageInfo

func (m *GetResponse_Error) GetNotFound() *ResourcePoolNotFound {
	if m != nil {
		return m.NotFound
	}
	return nil
}

// DEPRECATED by peloton.api.v0.respool.svc.DeleteResourcePoolRequest
type DeleteRequest struct {
	Path                 *ResourcePoolPath `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{19}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetPath() *ResourcePoolPath {
	if m != nil {
		return m.Path
	}
	return nil
}

// DEPRECATED by peloton.api.v0.respool.svc.DeleteResourcePoolResponse
type DeleteResponse struct {
	Error                *DeleteResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{20}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetError() *DeleteResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type DeleteResponse_Error struct {
	NotFound             *ResourcePoolPathNotFound `protobuf:"bytes,1,opt,name=notFound,proto3" json:"notFound,omitempty"`
	IsBusy               *ResourcePoolIsBusy       `protobuf:"bytes,2,opt,name=isBusy,proto3" json:"isBusy,omitempty"`
	IsNotLeaf            *ResourcePoolIsNotLeaf    `protobuf:"bytes,3,opt,name=isNotLeaf,proto3" json:"isNotLeaf,omitempty"`
	NotDeleted           *ResourcePoolNotDeleted   `protobuf:"bytes,4,opt,name=notDeleted,proto3" json:"notDeleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DeleteResponse_Error) Reset()         { *m = DeleteResponse_Error{} }
func (m *DeleteResponse_Error) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse_Error) ProtoMessage()    {}
func (*DeleteResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{20, 0}
}

func (m *DeleteResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse_Error.Unmarshal(m, b)
}
func (m *DeleteResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse_Error.Marshal(b, m, deterministic)
}
func (m *DeleteResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse_Error.Merge(m, src)
}
func (m *DeleteResponse_Error) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse_Error.Size(m)
}
func (m *DeleteResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse_Error proto.InternalMessageInfo

func (m *DeleteResponse_Error) GetNotFound() *ResourcePoolPathNotFound {
	if m != nil {
		return m.NotFound
	}
	return nil
}

func (m *DeleteResponse_Error) GetIsBusy() *ResourcePoolIsBusy {
	if m != nil {
		return m.IsBusy
	}
	return nil
}

func (m *DeleteResponse_Error) GetIsNotLeaf() *ResourcePoolIsNotLeaf {
	if m != nil {
		return m.IsNotLeaf
	}
	return nil
}

func (m *DeleteResponse_Error) GetNotDeleted() *ResourcePoolNotDeleted {
	if m != nil {
		return m.NotDeleted
	}
	return nil
}

// DEPRECATED by peloton.api.v0.respool.svc.UpdateResourcePoolRequest
type UpdateRequest struct {
	Id                   *peloton.ResourcePoolID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Config               *ResourcePoolConfig     `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{21}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetId() *peloton.ResourcePoolID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UpdateRequest) GetConfig() *ResourcePoolConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// DEPRECATED by peloton.api.v0.respool.svc.UpdateResourcePoolResponse
type UpdateResponse struct {
	Error                *UpdateResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{22}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetError() *UpdateResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type UpdateResponse_Error struct {
	NotFound                  *ResourcePoolNotFound      `protobuf:"bytes,1,opt,name=notFound,proto3" json:"notFound,omitempty"`
	InvalidResourcePoolConfig *InvalidResourcePoolConfig `protobuf:"bytes,2,opt,name=invalidResourcePoolConfig,proto3" json:"invalidResourcePoolConfig,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                   `json:"-"`
	XXX_unrecognized          []byte                     `json:"-"`
	XXX_sizecache             int32                      `json:"-"`
}

func (m *UpdateResponse_Error) Reset()         { *m = UpdateResponse_Error{} }
func (m *UpdateResponse_Error) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse_Error) ProtoMessage()    {}
func (*UpdateResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{22, 0}
}

func (m *UpdateResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse_Error.Unmarshal(m, b)
}
func (m *UpdateResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse_Error.Marshal(b, m, deterministic)
}
func (m *UpdateResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse_Error.Merge(m, src)
}
func (m *UpdateResponse_Error) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse_Error.Size(m)
}
func (m *UpdateResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse_Error proto.InternalMessageInfo

func (m *UpdateResponse_Error) GetNotFound() *ResourcePoolNotFound {
	if m != nil {
		return m.NotFound
	}
	return nil
}

func (m *UpdateResponse_Error) GetInvalidResourcePoolConfig() *InvalidResourcePoolConfig {
	if m != nil {
		return m.InvalidResourcePoolConfig
	}
	return nil
}

// DEPRECATED by peloton.api.v0.respool.svc.LookupResourcePoolIDRequest
type LookupRequest struct {
	Path                 *ResourcePoolPath `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LookupRequest) Reset()         { *m = LookupRequest{} }
func (m *LookupRequest) String() string { return proto.CompactTextString(m) }
func (*LookupRequest) ProtoMessage()    {}
func (*LookupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{23}
}

func (m *LookupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupRequest.Unmarshal(m, b)
}
func (m *LookupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupRequest.Marshal(b, m, deterministic)
}
func (m *LookupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupRequest.Merge(m, src)
}
func (m *LookupRequest) XXX_Size() int {
	return xxx_messageInfo_LookupRequest.Size(m)
}
func (m *LookupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupRequest proto.InternalMessageInfo

func (m *LookupRequest) GetPath() *ResourcePoolPath {
	if m != nil {
		return m.Path
	}
	return nil
}

// DEPRECATED by peloton.api.v0.respool.svc.LookupResourcePoolIDResponse
type LookupResponse struct {
	Error                *LookupResponse_Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Id                   *peloton.ResourcePoolID `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *LookupResponse) Reset()         { *m = LookupResponse{} }
func (m *LookupResponse) String() string { return proto.CompactTextString(m) }
func (*LookupResponse) ProtoMessage()    {}
func (*LookupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{24}
}

func (m *LookupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupResponse.Unmarshal(m, b)
}
func (m *LookupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupResponse.Marshal(b, m, deterministic)
}
func (m *LookupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupResponse.Merge(m, src)
}
func (m *LookupResponse) XXX_Size() int {
	return xxx_messageInfo_LookupResponse.Size(m)
}
func (m *LookupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupResponse proto.InternalMessageInfo

func (m *LookupResponse) GetError() *LookupResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *LookupResponse) GetId() *peloton.ResourcePoolID {
	if m != nil {
		return m.Id
	}
	return nil
}

type LookupResponse_Error struct {
	NotFound             *ResourcePoolPathNotFound `protobuf:"bytes,1,opt,name=notFound,proto3" json:"notFound,omitempty"`
	InvalidPath          *InvalidResourcePoolPath  `protobuf:"bytes,2,opt,name=invalidPath,proto3" json:"invalidPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *LookupResponse_Error) Reset()         { *m = LookupResponse_Error{} }
func (m *LookupResponse_Error) String() string { return proto.CompactTextString(m) }
func (*LookupResponse_Error) ProtoMessage()    {}
func (*LookupResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{24, 0}
}

func (m *LookupResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupResponse_Error.Unmarshal(m, b)
}
func (m *LookupResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupResponse_Error.Marshal(b, m, deterministic)
}
func (m *LookupResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupResponse_Error.Merge(m, src)
}
func (m *LookupResponse_Error) XXX_Size() int {
	return xxx_messageInfo_LookupResponse_Error.Size(m)
}
func (m *LookupResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_LookupResponse_Error proto.InternalMessageInfo

func (m *LookupResponse_Error) GetNotFound() *ResourcePoolPathNotFound {
	if m != nil {
		return m.NotFound
	}
	return nil
}

func (m *LookupResponse_Error) GetInvalidPath() *InvalidResourcePoolPath {
	if m != nil {
		return m.InvalidPath
	}
	return nil
}

// DEPRECATED by peloton.api.v0.respool.svc.QueryResourcePoolRequest
type QueryRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{25}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

// DEPRECATED by peloton.api.v0.respool.svc.QueryResourcePoolResponse
type QueryResponse struct {
	Error                *QueryResponse_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ResourcePools        []*ResourcePoolInfo  `protobuf:"bytes,2,rep,name=resourcePools,proto3" json:"resourcePools,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{26}
}

func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (m *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(m, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetError() *QueryResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *QueryResponse) GetResourcePools() []*ResourcePoolInfo {
	if m != nil {
		return m.ResourcePools
	}
	return nil
}

type QueryResponse_Error struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResponse_Error) Reset()         { *m = QueryResponse_Error{} }
func (m *QueryResponse_Error) String() string { return proto.CompactTextString(m) }
func (*QueryResponse_Error) ProtoMessage()    {}
func (*QueryResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_1227810fbc675d1f, []int{26, 0}
}

func (m *QueryResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse_Error.Unmarshal(m, b)
}
func (m *QueryResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse_Error.Marshal(b, m, deterministic)
}
func (m *QueryResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse_Error.Merge(m, src)
}
func (m *QueryResponse_Error) XXX_Size() int {
	return xxx_messageInfo_QueryResponse_Error.Size(m)
}
func (m *QueryResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse_Error proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("peloton.api.v0.respool.ReservationType", ReservationType_name, ReservationType_value)
	proto.RegisterEnum("peloton.api.v0.respool.SchedulingPolicy", SchedulingPolicy_name, SchedulingPolicy_value)
	proto.RegisterType((*ResourcePoolPath)(nil), "peloton.api.v0.respool.ResourcePoolPath")
	proto.RegisterType((*ResourceConfig)(nil), "peloton.api.v0.respool.ResourceConfig")
	proto.RegisterType((*ResourcePoolConfig)(nil), "peloton.api.v0.respool.ResourcePoolConfig")
	proto.RegisterType((*ControllerLimit)(nil), "peloton.api.v0.respool.ControllerLimit")
	proto.RegisterType((*SlackLimit)(nil), "peloton.api.v0.respool.SlackLimit")
	proto.RegisterType((*ResourceUsage)(nil), "peloton.api.v0.respool.ResourceUsage")
	proto.RegisterType((*ResourcePoolInfo)(nil), "peloton.api.v0.respool.ResourcePoolInfo")
	proto.RegisterType((*ResourcePoolAlreadyExists)(nil), "peloton.api.v0.respool.ResourcePoolAlreadyExists")
	proto.RegisterType((*InvalidResourcePoolConfig)(nil), "peloton.api.v0.respool.InvalidResourcePoolConfig")
	proto.RegisterType((*ResourcePoolNotFound)(nil), "peloton.api.v0.respool.ResourcePoolNotFound")
	proto.RegisterType((*ResourcePoolPathNotFound)(nil), "peloton.api.v0.respool.ResourcePoolPathNotFound")
	proto.RegisterType((*InvalidResourcePoolPath)(nil), "peloton.api.v0.respool.InvalidResourcePoolPath")
	proto.RegisterType((*ResourcePoolIsBusy)(nil), "peloton.api.v0.respool.ResourcePoolIsBusy")
	proto.RegisterType((*ResourcePoolIsNotLeaf)(nil), "peloton.api.v0.respool.ResourcePoolIsNotLeaf")
	proto.RegisterType((*ResourcePoolNotDeleted)(nil), "peloton.api.v0.respool.ResourcePoolNotDeleted")
	proto.RegisterType((*CreateRequest)(nil), "peloton.api.v0.respool.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "peloton.api.v0.respool.CreateResponse")
	proto.RegisterType((*CreateResponse_Error)(nil), "peloton.api.v0.respool.CreateResponse.Error")
	proto.RegisterType((*GetRequest)(nil), "peloton.api.v0.respool.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "peloton.api.v0.respool.GetResponse")
	proto.RegisterType((*GetResponse_Error)(nil), "peloton.api.v0.respool.GetResponse.Error")
	proto.RegisterType((*DeleteRequest)(nil), "peloton.api.v0.respool.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "peloton.api.v0.respool.DeleteResponse")
	proto.RegisterType((*DeleteResponse_Error)(nil), "peloton.api.v0.respool.DeleteResponse.Error")
	proto.RegisterType((*UpdateRequest)(nil), "peloton.api.v0.respool.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "peloton.api.v0.respool.UpdateResponse")
	proto.RegisterType((*UpdateResponse_Error)(nil), "peloton.api.v0.respool.UpdateResponse.Error")
	proto.RegisterType((*LookupRequest)(nil), "peloton.api.v0.respool.LookupRequest")
	proto.RegisterType((*LookupResponse)(nil), "peloton.api.v0.respool.LookupResponse")
	proto.RegisterType((*LookupResponse_Error)(nil), "peloton.api.v0.respool.LookupResponse.Error")
	proto.RegisterType((*QueryRequest)(nil), "peloton.api.v0.respool.QueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "peloton.api.v0.respool.QueryResponse")
	proto.RegisterType((*QueryResponse_Error)(nil), "peloton.api.v0.respool.QueryResponse.Error")
}

func init() {
	proto.RegisterFile("peloton/api/v0/respool/respool.proto", fileDescriptor_1227810fbc675d1f)
}

var fileDescriptor_1227810fbc675d1f = []byte{
	// 1341 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xdd, 0x72, 0xdb, 0xc4,
	0x17, 0xaf, 0x1c, 0xdb, 0x89, 0x8f, 0x6b, 0xc7, 0xff, 0x9d, 0xfe, 0x8b, 0xea, 0x61, 0x3a, 0x19,
	0xf5, 0x03, 0x53, 0x8a, 0x93, 0x86, 0x19, 0x6e, 0xda, 0x01, 0xf2, 0xd5, 0x36, 0xd3, 0xd4, 0x4d,
	0x36, 0xe9, 0x74, 0xda, 0x1b, 0x46, 0x48, 0x1b, 0x7b, 0xa9, 0xa2, 0x55, 0x57, 0x52, 0xa8, 0x9f,
	0x81, 0xe1, 0x01, 0x78, 0x03, 0x66, 0x60, 0x86, 0xe1, 0x06, 0xee, 0x79, 0x03, 0x2e, 0x79, 0x03,
	0x1e, 0x83, 0xd9, 0xd5, 0xca, 0x96, 0x14, 0xab, 0x96, 0x43, 0x0c, 0x57, 0x96, 0x76, 0xcf, 0xef,
	0x7c, 0x9f, 0xdf, 0xae, 0x05, 0x37, 0x3d, 0xe2, 0xb0, 0x80, 0xb9, 0xab, 0xa6, 0x47, 0x57, 0x4f,
	0xd7, 0x56, 0x39, 0xf1, 0x3d, 0xc6, 0x9c, 0xf8, 0xb7, 0xeb, 0x71, 0x16, 0x30, 0x74, 0x55, 0x49,
	0x75, 0x4d, 0x8f, 0x76, 0x4f, 0xd7, 0xba, 0x6a, 0xb7, 0xfd, 0x7e, 0x06, 0x1d, 0x8b, 0x49, 0x54,
	0xbb, 0x93, 0xd9, 0xb5, 0x06, 0xa6, 0xdb, 0x27, 0x0e, 0xeb, 0x8f, 0x9f, 0x22, 0x49, 0xa3, 0x03,
	0x2d, 0x4c, 0x7c, 0x16, 0x72, 0x8b, 0xec, 0x33, 0xe6, 0xec, 0x9b, 0xc1, 0x00, 0x5d, 0x81, 0xca,
	0xa9, 0xe9, 0x84, 0x44, 0xd7, 0x56, 0xb4, 0x4e, 0x0d, 0x47, 0x2f, 0xc6, 0xcf, 0x1a, 0x34, 0x63,
	0xd1, 0x2d, 0xe6, 0x1e, 0xd3, 0x3e, 0x42, 0x50, 0x7e, 0x4d, 0x5d, 0x5b, 0xc9, 0xc9, 0x67, 0xb4,
	0x02, 0x75, 0x4e, 0x7c, 0xc2, 0x4f, 0xcd, 0x80, 0x32, 0x57, 0x2f, 0xad, 0x68, 0x1d, 0x0d, 0x27,
	0x97, 0x84, 0x7a, 0x87, 0x9e, 0xd0, 0x40, 0x5f, 0x90, 0x7b, 0xd1, 0x8b, 0x58, 0xf5, 0x07, 0x26,
	0x27, 0x7a, 0x39, 0x5a, 0x95, 0x2f, 0xe8, 0x3e, 0x94, 0x83, 0xa1, 0x47, 0xf4, 0xca, 0x8a, 0xd6,
	0x69, 0xae, 0x7f, 0xd0, 0x9d, 0x9c, 0x8d, 0x2e, 0x1e, 0xab, 0x3f, 0x1a, 0x7a, 0x04, 0x4b, 0x90,
	0xf1, 0x53, 0x19, 0x50, 0x32, 0x38, 0xe5, 0xf5, 0x06, 0xd4, 0xa2, 0x2c, 0xec, 0xb1, 0xbe, 0x74,
	0xbd, 0xbe, 0x7e, 0x23, 0xab, 0x78, 0x9c, 0xa6, 0xad, 0x58, 0x14, 0x8f, 0x51, 0x22, 0x70, 0xd7,
	0x3c, 0x21, 0x32, 0xba, 0x1a, 0x96, 0xcf, 0xe8, 0x3a, 0x00, 0xfb, 0xc6, 0xa5, 0x6e, 0xff, 0x88,
	0x98, 0x27, 0x32, 0xb6, 0x1a, 0x4e, 0xac, 0x88, 0x7d, 0xc7, 0x36, 0xbd, 0x47, 0x9c, 0x85, 0x9e,
	0xaf, 0x97, 0x57, 0x16, 0xc4, 0xfe, 0x78, 0x45, 0x24, 0xce, 0x26, 0xbe, 0xc5, 0xa9, 0x27, 0x13,
	0x57, 0x91, 0x0a, 0x92, 0x4b, 0x68, 0x1b, 0x6a, 0x5c, 0x85, 0xe3, 0xeb, 0xd5, 0x95, 0x85, 0x4e,
	0x7d, 0xfd, 0xf6, 0x3b, 0x32, 0x92, 0xa8, 0x14, 0x1e, 0x03, 0xd1, 0x67, 0x50, 0xf5, 0x4c, 0x4e,
	0xdc, 0x40, 0x5f, 0x94, 0xb1, 0x9f, 0x51, 0x11, 0xbf, 0x26, 0x53, 0xb7, 0xbb, 0x8d, 0x15, 0x0a,
	0x7d, 0x01, 0x55, 0x8f, 0x39, 0xd4, 0x1a, 0xea, 0x4b, 0xb2, 0x28, 0x9d, 0x3c, 0x17, 0x0e, 0xad,
	0x01, 0xb1, 0x43, 0x87, 0xba, 0xfd, 0x7d, 0x29, 0x8f, 0x15, 0x0e, 0x1d, 0xc0, 0xb2, 0xc5, 0xdc,
	0x80, 0x33, 0xc7, 0x21, 0x7c, 0x4f, 0xb6, 0x42, 0x4d, 0xba, 0x92, 0x5b, 0xdf, 0xad, 0xb4, 0x38,
	0xce, 0xe2, 0xd1, 0x26, 0x80, 0xef, 0x98, 0xd6, 0xeb, 0x48, 0x1b, 0x48, 0x6d, 0x46, 0xae, 0x63,
	0x23, 0x49, 0x9c, 0x40, 0x19, 0xf7, 0x60, 0x39, 0x63, 0x47, 0xd4, 0xec, 0xc4, 0x7c, 0xbb, 0x4f,
	0xb8, 0x25, 0xf2, 0xa5, 0xc9, 0xce, 0x4c, 0xac, 0x18, 0x77, 0x01, 0xc6, 0xca, 0xa6, 0x4a, 0xbf,
	0x84, 0x46, 0x9c, 0xd3, 0xe7, 0xbe, 0xd9, 0x27, 0x13, 0xe7, 0xe7, 0x3a, 0x80, 0xe9, 0x38, 0xcc,
	0x4a, 0x8e, 0x4f, 0x62, 0x45, 0xce, 0x89, 0x30, 0x19, 0x4f, 0x8f, 0x7c, 0x31, 0xbe, 0x5b, 0x48,
	0xcf, 0xf1, 0xae, 0x7b, 0xcc, 0xd0, 0xa7, 0x50, 0xa2, 0xb6, 0xea, 0xf0, 0xa2, 0x55, 0x2e, 0x51,
	0x1b, 0x6d, 0x42, 0xd5, 0x92, 0x6d, 0x23, 0xcd, 0xd7, 0xd7, 0xef, 0x4c, 0x6b, 0xb2, 0xf1, 0x70,
	0x61, 0x85, 0x4c, 0x74, 0xd9, 0xc2, 0xb9, 0xba, 0x6c, 0x13, 0x96, 0xac, 0x01, 0x75, 0x6c, 0x4e,
	0x5c, 0x39, 0x2b, 0xc5, 0x35, 0x8c, 0x70, 0xe8, 0x3e, 0x54, 0x42, 0x91, 0x67, 0xbd, 0x22, 0x15,
	0xdc, 0x9a, 0x16, 0x86, 0x2c, 0x0a, 0x8e, 0x30, 0xe8, 0x01, 0x94, 0x3d, 0x33, 0x18, 0xe8, 0x55,
	0xe9, 0x7e, 0xa7, 0x48, 0x0a, 0x04, 0x79, 0x62, 0x89, 0x32, 0x4e, 0xe0, 0x5a, 0x72, 0x67, 0xc3,
	0xe1, 0xc4, 0xb4, 0x87, 0x3b, 0x6f, 0xa9, 0x1f, 0xf8, 0xe7, 0xae, 0x8b, 0x0e, 0x8b, 0x27, 0xc4,
	0x97, 0x11, 0x45, 0xc4, 0x13, 0xbf, 0x0a, 0x73, 0xbb, 0xee, 0xa9, 0xe9, 0x50, 0x7b, 0x02, 0xdf,
	0x5d, 0xbc, 0xb9, 0x01, 0x5c, 0x49, 0xca, 0xf7, 0x58, 0xf0, 0x90, 0x85, 0xae, 0x3d, 0x07, 0x4b,
	0x1c, 0xf4, 0x6c, 0x86, 0x47, 0xd6, 0xe2, 0x0a, 0x69, 0xe7, 0xa9, 0xd0, 0x3b, 0x6c, 0xbe, 0x81,
	0xf7, 0x26, 0x24, 0x53, 0x9e, 0x8c, 0xf3, 0x32, 0x79, 0x9c, 0x3e, 0xa8, 0x76, 0xfd, 0xcd, 0xd0,
	0x1f, 0xce, 0x21, 0x9d, 0x14, 0xfe, 0x9f, 0xb6, 0xd3, 0x63, 0xc1, 0x1e, 0x31, 0x8f, 0xe7, 0x60,
	0xea, 0x6b, 0xb8, 0x9a, 0xe9, 0x91, 0x6d, 0xe2, 0x90, 0x80, 0xcc, 0xa3, 0x4b, 0x0e, 0xa1, 0xb1,
	0xc5, 0x89, 0x19, 0x10, 0x4c, 0xde, 0x84, 0xc4, 0x0f, 0x2e, 0x82, 0xc1, 0x8c, 0xbf, 0x4a, 0xd0,
	0x8c, 0xb5, 0xfa, 0x1e, 0x73, 0x7d, 0x82, 0x36, 0xa1, 0x42, 0x38, 0x67, 0x5c, 0x39, 0x7f, 0x37,
	0xf7, 0xb8, 0x4a, 0xc1, 0xba, 0x3b, 0x02, 0x83, 0x23, 0xa8, 0x20, 0x46, 0x4e, 0xfc, 0xd0, 0x09,
	0x94, 0x6b, 0x85, 0x89, 0x31, 0x42, 0xb5, 0xff, 0xd0, 0xa0, 0x22, 0x15, 0xa2, 0x17, 0xd0, 0x30,
	0x93, 0xbc, 0xa2, 0xbc, 0xba, 0x57, 0x24, 0xd6, 0x14, 0x21, 0xe1, 0xb4, 0x1e, 0xc4, 0xe0, 0x1a,
	0xcd, 0x63, 0x13, 0xe5, 0x75, 0xae, 0x91, 0x5c, 0x1a, 0xc2, 0xf9, 0x3a, 0x0d, 0x0e, 0xf0, 0x88,
	0x04, 0x71, 0xf1, 0xce, 0xdb, 0x1f, 0x77, 0xe1, 0x7f, 0xd4, 0xb5, 0x9c, 0xd0, 0x26, 0x5b, 0xe2,
	0x04, 0x10, 0x3b, 0xbe, 0x74, 0x77, 0x09, 0x9f, 0xdd, 0x30, 0x7e, 0x29, 0x41, 0x5d, 0x1a, 0x55,
	0xb5, 0xfd, 0x3c, 0x5d, 0xdb, 0x0f, 0xf3, 0x02, 0x4c, 0x60, 0xd2, 0x85, 0xdd, 0x86, 0x25, 0x21,
	0x40, 0xdd, 0x63, 0xa6, 0x92, 0x54, 0x88, 0x1f, 0xc4, 0x49, 0x8d, 0x47, 0x48, 0xf4, 0x18, 0xc0,
	0x1a, 0x7b, 0xbf, 0x20, 0x0f, 0xae, 0xe2, 0x7a, 0x12, 0xd8, 0xf6, 0x41, 0xdc, 0x27, 0x8f, 0x61,
	0xc9, 0x55, 0x9c, 0x39, 0xad, 0x71, 0x27, 0xb1, 0x3a, 0x1e, 0xa1, 0x8d, 0xa7, 0xd0, 0x88, 0x86,
	0x38, 0x2e, 0xd5, 0x3f, 0xe2, 0x43, 0x71, 0x69, 0x69, 0xc6, 0xfa, 0x66, 0x9c, 0xb0, 0x34, 0x2c,
	0x55, 0x88, 0xf6, 0xaf, 0xa5, 0x38, 0xf2, 0xbd, 0x33, 0x91, 0xaf, 0x15, 0x75, 0xf1, 0x6c, 0xf4,
	0x82, 0x54, 0xa8, 0x24, 0xe6, 0x59, 0x48, 0x25, 0xa2, 0x72, 0xac, 0x90, 0xe8, 0x09, 0xd4, 0x68,
	0x4c, 0xba, 0xea, 0x66, 0xf4, 0x71, 0x31, 0x35, 0x0a, 0x84, 0xc7, 0x78, 0xd4, 0x03, 0x70, 0x47,
	0xb4, 0x2a, 0xff, 0x37, 0xd5, 0xd7, 0xbb, 0x05, 0x4b, 0xab, 0x50, 0x38, 0xa1, 0xc1, 0xf8, 0x56,
	0x83, 0xc6, 0x73, 0xcf, 0x4e, 0xf0, 0xe8, 0x7f, 0x78, 0x83, 0x34, 0xbe, 0x2f, 0x41, 0x33, 0xf6,
	0x66, 0xc6, 0xee, 0x48, 0xc3, 0xd2, 0xdd, 0xf1, 0xbb, 0x76, 0xe1, 0x73, 0xf1, 0xef, 0x13, 0xe6,
	0x53, 0x68, 0xec, 0x31, 0xf6, 0x3a, 0xf4, 0x2e, 0x66, 0x10, 0x7f, 0x2b, 0x41, 0x33, 0xd6, 0x37,
	0x63, 0xaa, 0xd3, 0xb0, 0x34, 0x23, 0x46, 0xdd, 0x53, 0x9a, 0xb5, 0x7b, 0xda, 0x3f, 0x68, 0xf3,
	0x19, 0xe0, 0x03, 0xa8, 0xab, 0x94, 0x0a, 0x01, 0xe5, 0xd8, 0xea, 0x0c, 0x85, 0x91, 0x29, 0x4b,
	0xea, 0x30, 0x9a, 0x70, 0xf9, 0x20, 0x24, 0x7c, 0xa8, 0xea, 0x60, 0xfc, 0xa8, 0x41, 0x43, 0x2d,
	0xa8, 0x44, 0x6e, 0xa4, 0x13, 0xf9, 0x51, 0x9e, 0xb9, 0x14, 0x2a, 0x9d, 0xc7, 0x1e, 0x34, 0x78,
	0xc2, 0x0b, 0x71, 0xa8, 0xcd, 0x76, 0x2c, 0xa4, 0xe1, 0xed, 0x45, 0x95, 0xde, 0x3b, 0x0f, 0x60,
	0x39, 0xf3, 0xe5, 0x04, 0xb5, 0xe0, 0xf2, 0xf3, 0xde, 0x93, 0xde, 0xb3, 0x17, 0xbd, 0x2f, 0x8f,
	0x5e, 0xee, 0xef, 0xb4, 0x2e, 0xa1, 0x3a, 0x2c, 0xee, 0xec, 0x6d, 0x1c, 0x1e, 0xed, 0x6e, 0xb5,
	0x34, 0x04, 0x50, 0x3d, 0x3c, 0xda, 0x10, 0xcf, 0xa5, 0x3b, 0xf7, 0xa0, 0x95, 0xfd, 0x8b, 0x2f,
	0x84, 0x15, 0xbc, 0x75, 0x49, 0xe8, 0xda, 0xe7, 0x94, 0x71, 0x1a, 0x0c, 0x1f, 0xee, 0x3e, 0x7c,
	0xd6, 0xd2, 0xd6, 0xff, 0x2c, 0x4b, 0x8b, 0xd2, 0x97, 0xa7, 0xa6, 0x6b, 0xf6, 0x09, 0x47, 0x16,
	0xa0, 0xd1, 0x7d, 0x69, 0xe4, 0x24, 0xba, 0x35, 0xed, 0x6e, 0x25, 0xf3, 0xdd, 0xbe, 0x5d, 0xec,
	0x0a, 0x86, 0x5e, 0xc1, 0x72, 0x74, 0x70, 0x8f, 0x2d, 0x18, 0xef, 0x3c, 0xe1, 0x23, 0xf5, 0x37,
	0x0a, 0xdc, 0x02, 0x44, 0x00, 0xa3, 0xe3, 0xa8, 0x40, 0x00, 0xa9, 0x13, 0x34, 0x3f, 0x80, 0xcc,
	0xc1, 0x68, 0x01, 0x1a, 0xb1, 0x5a, 0x01, 0x23, 0x29, 0x1a, 0xcf, 0x37, 0x92, 0xe1, 0x57, 0x02,
	0x57, 0x46, 0xf3, 0x9c, 0x18, 0xca, 0x7c, 0x33, 0x29, 0x12, 0xca, 0x37, 0x93, 0xe1, 0x96, 0x23,
	0xa8, 0xc8, 0x6e, 0x47, 0x37, 0xa7, 0x0c, 0x43, 0xa4, 0xf6, 0x56, 0xa1, 0x91, 0xd9, 0x5c, 0x83,
	0x9c, 0x6f, 0xa5, 0xaf, 0xae, 0x4e, 0xfe, 0xd2, 0xfa, 0x55, 0x55, 0x7e, 0x02, 0xfd, 0xe4, 0xef,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x5f, 0x05, 0x8e, 0x8a, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourceManagerClient is the client API for ResourceManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceManagerClient interface {
	// Create a resource pool entity for a given config
	CreateResourcePool(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// Get the resource pool entity
	GetResourcePool(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// Delete a resource pool entity
	DeleteResourcePool(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// modify a resource pool entity
	UpdateResourcePool(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	// Lookup the resource pool ID for a given resource pool path
	LookupResourcePoolID(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error)
	// Query the resource pool.
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
}

type resourceManagerClient struct {
	cc *grpc.ClientConn
}

func NewResourceManagerClient(cc *grpc.ClientConn) ResourceManagerClient {
	return &resourceManagerClient{cc}
}

func (c *resourceManagerClient) CreateResourcePool(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.respool.ResourceManager/CreateResourcePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) GetResourcePool(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.respool.ResourceManager/GetResourcePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) DeleteResourcePool(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.respool.ResourceManager/DeleteResourcePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) UpdateResourcePool(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.respool.ResourceManager/UpdateResourcePool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) LookupResourcePoolID(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error) {
	out := new(LookupResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.respool.ResourceManager/LookupResourcePoolID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.respool.ResourceManager/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceManagerServer is the server API for ResourceManager service.
type ResourceManagerServer interface {
	// Create a resource pool entity for a given config
	CreateResourcePool(context.Context, *CreateRequest) (*CreateResponse, error)
	// Get the resource pool entity
	GetResourcePool(context.Context, *GetRequest) (*GetResponse, error)
	// Delete a resource pool entity
	DeleteResourcePool(context.Context, *DeleteRequest) (*DeleteResponse, error)
	// modify a resource pool entity
	UpdateResourcePool(context.Context, *UpdateRequest) (*UpdateResponse, error)
	// Lookup the resource pool ID for a given resource pool path
	LookupResourcePoolID(context.Context, *LookupRequest) (*LookupResponse, error)
	// Query the resource pool.
	Query(context.Context, *QueryRequest) (*QueryResponse, error)
}

func RegisterResourceManagerServer(s *grpc.Server, srv ResourceManagerServer) {
	s.RegisterService(&_ResourceManager_serviceDesc, srv)
}

func _ResourceManager_CreateResourcePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).CreateResourcePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.respool.ResourceManager/CreateResourcePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).CreateResourcePool(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_GetResourcePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).GetResourcePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.respool.ResourceManager/GetResourcePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).GetResourcePool(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_DeleteResourcePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).DeleteResourcePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.respool.ResourceManager/DeleteResourcePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).DeleteResourcePool(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_UpdateResourcePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).UpdateResourcePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.respool.ResourceManager/UpdateResourcePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).UpdateResourcePool(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_LookupResourcePoolID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).LookupResourcePoolID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.respool.ResourceManager/LookupResourcePoolID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).LookupResourcePoolID(ctx, req.(*LookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.respool.ResourceManager/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "peloton.api.respool.ResourceManager",
	HandlerType: (*ResourceManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateResourcePool",
			Handler:    _ResourceManager_CreateResourcePool_Handler,
		},
		{
			MethodName: "GetResourcePool",
			Handler:    _ResourceManager_GetResourcePool_Handler,
		},
		{
			MethodName: "DeleteResourcePool",
			Handler:    _ResourceManager_DeleteResourcePool_Handler,
		},
		{
			MethodName: "UpdateResourcePool",
			Handler:    _ResourceManager_UpdateResourcePool_Handler,
		},
		{
			MethodName: "LookupResourcePoolID",
			Handler:    _ResourceManager_LookupResourcePoolID_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _ResourceManager_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "peloton/api/v0/respool/respool.proto",
}
