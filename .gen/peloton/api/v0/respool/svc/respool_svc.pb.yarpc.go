// Code generated by protoc-gen-yarpc-go
// source: peloton/api/v0/respool/svc/respool_svc.proto
// DO NOT EDIT!

package svc

import (
	"context"
	"io/ioutil"
	"reflect"

	"github.com/gogo/protobuf/proto"
	"go.uber.org/fx"
	"go.uber.org/yarpc"
	"go.uber.org/yarpc/api/transport"
	"go.uber.org/yarpc/encoding/protobuf"
	"go.uber.org/yarpc/encoding/protobuf/reflection"
)

var _ = ioutil.NopCloser

// ResourcePoolServiceYARPCClient is the YARPC client-side interface for the ResourcePoolService service.
type ResourcePoolServiceYARPCClient interface {
	CreateResourcePool(context.Context, *CreateResourcePoolRequest, ...yarpc.CallOption) (*CreateResourcePoolResponse, error)
	GetResourcePool(context.Context, *GetResourcePoolRequest, ...yarpc.CallOption) (*GetResourcePoolResponse, error)
	DeleteResourcePool(context.Context, *DeleteResourcePoolRequest, ...yarpc.CallOption) (*DeleteResourcePoolResponse, error)
	UpdateResourcePool(context.Context, *UpdateResourcePoolRequest, ...yarpc.CallOption) (*UpdateResourcePoolResponse, error)
	LookupResourcePoolID(context.Context, *LookupResourcePoolIDRequest, ...yarpc.CallOption) (*LookupResourcePoolIDResponse, error)
	QueryResourcePools(context.Context, *QueryResourcePoolsRequest, ...yarpc.CallOption) (*QueryResourcePoolsResponse, error)
}

// NewResourcePoolServiceYARPCClient builds a new YARPC client for the ResourcePoolService service.
func NewResourcePoolServiceYARPCClient(clientConfig transport.ClientConfig, options ...protobuf.ClientOption) ResourcePoolServiceYARPCClient {
	return &_ResourcePoolServiceYARPCCaller{protobuf.NewStreamClient(
		protobuf.ClientParams{
			ServiceName:  "peloton.api.v0.respool.ResourcePoolService",
			ClientConfig: clientConfig,
			Options:      options,
		},
	)}
}

// ResourcePoolServiceYARPCServer is the YARPC server-side interface for the ResourcePoolService service.
type ResourcePoolServiceYARPCServer interface {
	CreateResourcePool(context.Context, *CreateResourcePoolRequest) (*CreateResourcePoolResponse, error)
	GetResourcePool(context.Context, *GetResourcePoolRequest) (*GetResourcePoolResponse, error)
	DeleteResourcePool(context.Context, *DeleteResourcePoolRequest) (*DeleteResourcePoolResponse, error)
	UpdateResourcePool(context.Context, *UpdateResourcePoolRequest) (*UpdateResourcePoolResponse, error)
	LookupResourcePoolID(context.Context, *LookupResourcePoolIDRequest) (*LookupResourcePoolIDResponse, error)
	QueryResourcePools(context.Context, *QueryResourcePoolsRequest) (*QueryResourcePoolsResponse, error)
}

// BuildResourcePoolServiceYARPCProcedures prepares an implementation of the ResourcePoolService service for YARPC registration.
func BuildResourcePoolServiceYARPCProcedures(server ResourcePoolServiceYARPCServer) []transport.Procedure {
	handler := &_ResourcePoolServiceYARPCHandler{server}
	return protobuf.BuildProcedures(
		protobuf.BuildProceduresParams{
			ServiceName: "peloton.api.v0.respool.ResourcePoolService",
			UnaryHandlerParams: []protobuf.BuildProceduresUnaryHandlerParams{
				{
					MethodName: "CreateResourcePool",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:     handler.CreateResourcePool,
							NewRequest: newResourcePoolServiceServiceCreateResourcePoolYARPCRequest,
						},
					),
				},
				{
					MethodName: "GetResourcePool",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:     handler.GetResourcePool,
							NewRequest: newResourcePoolServiceServiceGetResourcePoolYARPCRequest,
						},
					),
				},
				{
					MethodName: "DeleteResourcePool",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:     handler.DeleteResourcePool,
							NewRequest: newResourcePoolServiceServiceDeleteResourcePoolYARPCRequest,
						},
					),
				},
				{
					MethodName: "UpdateResourcePool",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:     handler.UpdateResourcePool,
							NewRequest: newResourcePoolServiceServiceUpdateResourcePoolYARPCRequest,
						},
					),
				},
				{
					MethodName: "LookupResourcePoolID",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:     handler.LookupResourcePoolID,
							NewRequest: newResourcePoolServiceServiceLookupResourcePoolIDYARPCRequest,
						},
					),
				},
				{
					MethodName: "QueryResourcePools",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:     handler.QueryResourcePools,
							NewRequest: newResourcePoolServiceServiceQueryResourcePoolsYARPCRequest,
						},
					),
				},
			},
			OnewayHandlerParams: []protobuf.BuildProceduresOnewayHandlerParams{},
			StreamHandlerParams: []protobuf.BuildProceduresStreamHandlerParams{},
		},
	)
}

// FxResourcePoolServiceYARPCClientParams defines the input
// for NewFxResourcePoolServiceYARPCClient. It provides the
// paramaters to get a ResourcePoolServiceYARPCClient in an
// Fx application.
type FxResourcePoolServiceYARPCClientParams struct {
	fx.In

	Provider yarpc.ClientConfig
}

// FxResourcePoolServiceYARPCClientResult defines the output
// of NewFxResourcePoolServiceYARPCClient. It provides a
// ResourcePoolServiceYARPCClient to an Fx application.
type FxResourcePoolServiceYARPCClientResult struct {
	fx.Out

	Client ResourcePoolServiceYARPCClient

	// We are using an fx.Out struct here instead of just returning a client
	// so that we can add more values or add named versions of the client in
	// the future without breaking any existing code.
}

// NewFxResourcePoolServiceYARPCClient provides a ResourcePoolServiceYARPCClient
// to an Fx application using the given name for routing.
//
//  fx.Provide(
//    svc.NewFxResourcePoolServiceYARPCClient("service-name"),
//    ...
//  )
func NewFxResourcePoolServiceYARPCClient(name string, options ...protobuf.ClientOption) interface{} {
	return func(params FxResourcePoolServiceYARPCClientParams) FxResourcePoolServiceYARPCClientResult {
		return FxResourcePoolServiceYARPCClientResult{
			Client: NewResourcePoolServiceYARPCClient(params.Provider.ClientConfig(name), options...),
		}
	}
}

// FxResourcePoolServiceYARPCProceduresParams defines the input
// for NewFxResourcePoolServiceYARPCProcedures. It provides the
// paramaters to get ResourcePoolServiceYARPCServer procedures in an
// Fx application.
type FxResourcePoolServiceYARPCProceduresParams struct {
	fx.In

	Server ResourcePoolServiceYARPCServer
}

// FxResourcePoolServiceYARPCProceduresResult defines the output
// of NewFxResourcePoolServiceYARPCProcedures. It provides
// ResourcePoolServiceYARPCServer procedures to an Fx application.
//
// The procedures are provided to the "yarpcfx" value group.
// Dig 1.2 or newer must be used for this feature to work.
type FxResourcePoolServiceYARPCProceduresResult struct {
	fx.Out

	Procedures     []transport.Procedure `group:"yarpcfx"`
	ReflectionMeta reflection.ServerMeta `group:"yarpcfx"`
}

// NewFxResourcePoolServiceYARPCProcedures provides ResourcePoolServiceYARPCServer procedures to an Fx application.
// It expects a ResourcePoolServiceYARPCServer to be present in the container.
//
//  fx.Provide(
//    svc.NewFxResourcePoolServiceYARPCProcedures(),
//    ...
//  )
func NewFxResourcePoolServiceYARPCProcedures() interface{} {
	return func(params FxResourcePoolServiceYARPCProceduresParams) FxResourcePoolServiceYARPCProceduresResult {
		return FxResourcePoolServiceYARPCProceduresResult{
			Procedures: BuildResourcePoolServiceYARPCProcedures(params.Server),
			ReflectionMeta: reflection.ServerMeta{
				ServiceName:     "peloton.api.v0.respool.ResourcePoolService",
				FileDescriptors: yarpcFileDescriptorClosure4d710ee3016287ae,
			},
		}
	}
}

type _ResourcePoolServiceYARPCCaller struct {
	streamClient protobuf.StreamClient
}

func (c *_ResourcePoolServiceYARPCCaller) CreateResourcePool(ctx context.Context, request *CreateResourcePoolRequest, options ...yarpc.CallOption) (*CreateResourcePoolResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "CreateResourcePool", request, newResourcePoolServiceServiceCreateResourcePoolYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*CreateResourcePoolResponse)
	if !ok {
		return nil, protobuf.CastError(emptyResourcePoolServiceServiceCreateResourcePoolYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_ResourcePoolServiceYARPCCaller) GetResourcePool(ctx context.Context, request *GetResourcePoolRequest, options ...yarpc.CallOption) (*GetResourcePoolResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "GetResourcePool", request, newResourcePoolServiceServiceGetResourcePoolYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*GetResourcePoolResponse)
	if !ok {
		return nil, protobuf.CastError(emptyResourcePoolServiceServiceGetResourcePoolYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_ResourcePoolServiceYARPCCaller) DeleteResourcePool(ctx context.Context, request *DeleteResourcePoolRequest, options ...yarpc.CallOption) (*DeleteResourcePoolResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "DeleteResourcePool", request, newResourcePoolServiceServiceDeleteResourcePoolYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*DeleteResourcePoolResponse)
	if !ok {
		return nil, protobuf.CastError(emptyResourcePoolServiceServiceDeleteResourcePoolYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_ResourcePoolServiceYARPCCaller) UpdateResourcePool(ctx context.Context, request *UpdateResourcePoolRequest, options ...yarpc.CallOption) (*UpdateResourcePoolResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "UpdateResourcePool", request, newResourcePoolServiceServiceUpdateResourcePoolYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*UpdateResourcePoolResponse)
	if !ok {
		return nil, protobuf.CastError(emptyResourcePoolServiceServiceUpdateResourcePoolYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_ResourcePoolServiceYARPCCaller) LookupResourcePoolID(ctx context.Context, request *LookupResourcePoolIDRequest, options ...yarpc.CallOption) (*LookupResourcePoolIDResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "LookupResourcePoolID", request, newResourcePoolServiceServiceLookupResourcePoolIDYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*LookupResourcePoolIDResponse)
	if !ok {
		return nil, protobuf.CastError(emptyResourcePoolServiceServiceLookupResourcePoolIDYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_ResourcePoolServiceYARPCCaller) QueryResourcePools(ctx context.Context, request *QueryResourcePoolsRequest, options ...yarpc.CallOption) (*QueryResourcePoolsResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "QueryResourcePools", request, newResourcePoolServiceServiceQueryResourcePoolsYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*QueryResourcePoolsResponse)
	if !ok {
		return nil, protobuf.CastError(emptyResourcePoolServiceServiceQueryResourcePoolsYARPCResponse, responseMessage)
	}
	return response, err
}

type _ResourcePoolServiceYARPCHandler struct {
	server ResourcePoolServiceYARPCServer
}

func (h *_ResourcePoolServiceYARPCHandler) CreateResourcePool(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *CreateResourcePoolRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*CreateResourcePoolRequest)
		if !ok {
			return nil, protobuf.CastError(emptyResourcePoolServiceServiceCreateResourcePoolYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.CreateResourcePool(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_ResourcePoolServiceYARPCHandler) GetResourcePool(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *GetResourcePoolRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*GetResourcePoolRequest)
		if !ok {
			return nil, protobuf.CastError(emptyResourcePoolServiceServiceGetResourcePoolYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.GetResourcePool(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_ResourcePoolServiceYARPCHandler) DeleteResourcePool(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *DeleteResourcePoolRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*DeleteResourcePoolRequest)
		if !ok {
			return nil, protobuf.CastError(emptyResourcePoolServiceServiceDeleteResourcePoolYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.DeleteResourcePool(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_ResourcePoolServiceYARPCHandler) UpdateResourcePool(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *UpdateResourcePoolRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*UpdateResourcePoolRequest)
		if !ok {
			return nil, protobuf.CastError(emptyResourcePoolServiceServiceUpdateResourcePoolYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.UpdateResourcePool(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_ResourcePoolServiceYARPCHandler) LookupResourcePoolID(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *LookupResourcePoolIDRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*LookupResourcePoolIDRequest)
		if !ok {
			return nil, protobuf.CastError(emptyResourcePoolServiceServiceLookupResourcePoolIDYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.LookupResourcePoolID(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_ResourcePoolServiceYARPCHandler) QueryResourcePools(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *QueryResourcePoolsRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*QueryResourcePoolsRequest)
		if !ok {
			return nil, protobuf.CastError(emptyResourcePoolServiceServiceQueryResourcePoolsYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.QueryResourcePools(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func newResourcePoolServiceServiceCreateResourcePoolYARPCRequest() proto.Message {
	return &CreateResourcePoolRequest{}
}

func newResourcePoolServiceServiceCreateResourcePoolYARPCResponse() proto.Message {
	return &CreateResourcePoolResponse{}
}

func newResourcePoolServiceServiceGetResourcePoolYARPCRequest() proto.Message {
	return &GetResourcePoolRequest{}
}

func newResourcePoolServiceServiceGetResourcePoolYARPCResponse() proto.Message {
	return &GetResourcePoolResponse{}
}

func newResourcePoolServiceServiceDeleteResourcePoolYARPCRequest() proto.Message {
	return &DeleteResourcePoolRequest{}
}

func newResourcePoolServiceServiceDeleteResourcePoolYARPCResponse() proto.Message {
	return &DeleteResourcePoolResponse{}
}

func newResourcePoolServiceServiceUpdateResourcePoolYARPCRequest() proto.Message {
	return &UpdateResourcePoolRequest{}
}

func newResourcePoolServiceServiceUpdateResourcePoolYARPCResponse() proto.Message {
	return &UpdateResourcePoolResponse{}
}

func newResourcePoolServiceServiceLookupResourcePoolIDYARPCRequest() proto.Message {
	return &LookupResourcePoolIDRequest{}
}

func newResourcePoolServiceServiceLookupResourcePoolIDYARPCResponse() proto.Message {
	return &LookupResourcePoolIDResponse{}
}

func newResourcePoolServiceServiceQueryResourcePoolsYARPCRequest() proto.Message {
	return &QueryResourcePoolsRequest{}
}

func newResourcePoolServiceServiceQueryResourcePoolsYARPCResponse() proto.Message {
	return &QueryResourcePoolsResponse{}
}

var (
	emptyResourcePoolServiceServiceCreateResourcePoolYARPCRequest    = &CreateResourcePoolRequest{}
	emptyResourcePoolServiceServiceCreateResourcePoolYARPCResponse   = &CreateResourcePoolResponse{}
	emptyResourcePoolServiceServiceGetResourcePoolYARPCRequest       = &GetResourcePoolRequest{}
	emptyResourcePoolServiceServiceGetResourcePoolYARPCResponse      = &GetResourcePoolResponse{}
	emptyResourcePoolServiceServiceDeleteResourcePoolYARPCRequest    = &DeleteResourcePoolRequest{}
	emptyResourcePoolServiceServiceDeleteResourcePoolYARPCResponse   = &DeleteResourcePoolResponse{}
	emptyResourcePoolServiceServiceUpdateResourcePoolYARPCRequest    = &UpdateResourcePoolRequest{}
	emptyResourcePoolServiceServiceUpdateResourcePoolYARPCResponse   = &UpdateResourcePoolResponse{}
	emptyResourcePoolServiceServiceLookupResourcePoolIDYARPCRequest  = &LookupResourcePoolIDRequest{}
	emptyResourcePoolServiceServiceLookupResourcePoolIDYARPCResponse = &LookupResourcePoolIDResponse{}
	emptyResourcePoolServiceServiceQueryResourcePoolsYARPCRequest    = &QueryResourcePoolsRequest{}
	emptyResourcePoolServiceServiceQueryResourcePoolsYARPCResponse   = &QueryResourcePoolsResponse{}
)

var yarpcFileDescriptorClosure4d710ee3016287ae = [][]byte{
	// peloton/api/v0/respool/svc/respool_svc.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x51, 0x8b, 0xd3, 0x40,
		0x10, 0x26, 0x55, 0xea, 0x31, 0x22, 0xe2, 0x2a, 0xe7, 0x75, 0xaf, 0x0f, 0x12, 0x44, 0x0e, 0x39,
		0x92, 0xb3, 0x27, 0xe2, 0x83, 0x4f, 0x6d, 0x41, 0x0e, 0x44, 0xce, 0x9c, 0xfa, 0xa0, 0x0f, 0x92,
		0x4b, 0xe6, 0xec, 0x62, 0xc8, 0xae, 0xbb, 0x49, 0x40, 0x0e, 0x84, 0xfb, 0x15, 0xfe, 0x0a, 0xff,
		0xa3, 0x24, 0xdd, 0x6a, 0xdb, 0xec, 0xc8, 0xe5, 0xe8, 0xc3, 0x3d, 0xb5, 0xe9, 0xcc, 0x37, 0xdf,
		0x37, 0xb3, 0xf3, 0x6d, 0x03, 0xfb, 0x0a, 0x33, 0x59, 0xc8, 0x3c, 0x8c, 0x95, 0x08, 0xab, 0x83,
		0x50, 0xa3, 0x51, 0x52, 0x66, 0xa1, 0xa9, 0x92, 0xc5, 0xf7, 0x2f, 0xa6, 0x4a, 0x02, 0xa5, 0x65,
		0x21, 0xd9, 0xb6, 0xcd, 0x0e, 0x62, 0x25, 0x82, 0xea, 0x20, 0xb0, 0x19, 0x7c, 0xb8, 0x56, 0x65,
		0x91, 0xd6, 0xa0, 0xf8, 0x63, 0x82, 0xc3, 0x7e, 0xce, 0xb3, 0xfc, 0x5f, 0x1e, 0x0c, 0x26, 0x1a,
		0xe3, 0x02, 0x23, 0x34, 0xb2, 0xd4, 0x09, 0x1e, 0x4b, 0x99, 0x45, 0xf8, 0xbd, 0x44, 0x53, 0xb0,
		0x17, 0xd0, 0x13, 0xe9, 0x8e, 0xf7, 0xc8, 0xdb, 0xbb, 0x3d, 0x7a, 0x12, 0xac, 0xc9, 0x58, 0x3c,
		0x2e, 0x03, 0x8f, 0xa6, 0x51, 0x4f, 0xa4, 0x6c, 0x0c, 0xfd, 0x44, 0xe6, 0x67, 0xe2, 0xeb, 0x4e,
		0xaf, 0xc1, 0x3e, 0x0d, 0xdc, 0x2d, 0xac, 0x60, 0x27, 0x0d, 0x22, 0xb2, 0x48, 0xff, 0x3d, 0x70,
		0x97, 0x30, 0xa3, 0x64, 0x6e, 0xf0, 0xaa, 0xca, 0xfc, 0x9f, 0xb0, 0xfd, 0x1a, 0x8b, 0x4d, 0xf6,
		0xba, 0x0f, 0xf7, 0x44, 0x9e, 0x64, 0x65, 0x8a, 0x93, 0x99, 0xc8, 0xd2, 0x3a, 0x62, 0x9a, 0xb6,
		0xb7, 0xa2, 0x76, 0xc0, 0xff, 0xed, 0xc1, 0xc3, 0x96, 0x00, 0xdb, 0xd3, 0x18, 0x6e, 0x69, 0x34,
		0xf5, 0x4f, 0x56, 0xc6, 0xde, 0x65, 0xc6, 0x76, 0x94, 0x9f, 0xc9, 0x68, 0x01, 0x64, 0x6f, 0xe1,
		0x4e, 0x52, 0xb3, 0x45, 0xf3, 0xe7, 0x5a, 0xc9, 0x8d, 0x4e, 0x95, 0x56, 0xe1, 0xfe, 0x09, 0x0c,
		0xa6, 0x98, 0xe1, 0x46, 0xd7, 0xc3, 0x1f, 0x02, 0x77, 0x15, 0x9d, 0x8f, 0xa1, 0x59, 0xc9, 0x0f,
		0x2a, 0xbd, 0x86, 0x2b, 0x39, 0x04, 0xee, 0x12, 0x66, 0x75, 0x7f, 0x86, 0xdd, 0x37, 0x52, 0x7e,
		0x2b, 0xd5, 0x1a, 0xbb, 0x15, 0xfe, 0x0a, 0x6e, 0xaa, 0xb8, 0x98, 0x75, 0x39, 0xda, 0xe3, 0xb8,
		0x98, 0x45, 0x0d, 0xca, 0xff, 0x08, 0x43, 0x77, 0xf1, 0x15, 0x3f, 0xf4, 0x3a, 0x1f, 0xc5, 0x2e,
		0x0c, 0xde, 0x95, 0xa8, 0x7f, 0x2c, 0x87, 0x8c, 0x95, 0xec, 0x9f, 0x02, 0x77, 0x05, 0x2d, 0xe5,
		0x14, 0xb6, 0xf4, 0x55, 0xb7, 0xec, 0x2f, 0x72, 0x74, 0xd1, 0x87, 0xfb, 0xcb, 0xe1, 0x13, 0xd4,
		0x95, 0x48, 0x90, 0x9d, 0x03, 0x6b, 0xdb, 0x9f, 0x3d, 0xa3, 0x18, 0xc8, 0x3b, 0x8c, 0x8f, 0xba,
		0x40, 0x6c, 0x6b, 0x1a, 0xee, 0xae, 0x99, 0x94, 0x05, 0x54, 0x19, 0xf7, 0x75, 0xc2, 0xc3, 0x4b,
		0xe7, 0x5b, 0xce, 0x73, 0x60, 0x6d, 0x53, 0xd0, 0x0d, 0x93, 0xae, 0xa4, 0x1b, 0xa6, 0x3d, 0x57,
		0x93, 0xb7, 0x37, 0x9b, 0x26, 0x27, 0xed, 0x49, 0x93, 0xd3, 0xc6, 0x61, 0x17, 0x1e, 0x3c, 0x70,
		0x2d, 0x37, 0x3b, 0xa4, 0x8a, 0xfd, 0xc7, 0x67, 0xfc, 0x79, 0x37, 0xd0, 0xbf, 0x01, 0xb4, 0x57,
		0x9d, 0x1e, 0x00, 0xe9, 0x19, 0x7a, 0x00, 0xb4, 0x93, 0xc6, 0x2f, 0x81, 0x13, 0x20, 0x53, 0x25,
		0x9f, 0x38, 0xfd, 0xb2, 0x70, 0xda, 0x6f, 0xfe, 0xc5, 0x0f, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff,
		0x5e, 0xc9, 0x0b, 0xdc, 0x51, 0x08, 0x00, 0x00,
	},
	// peloton/api/v0/peloton.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
		0x10, 0x55, 0xec, 0x38, 0xe0, 0x29, 0xaa, 0xd0, 0x0a, 0x55, 0x56, 0x28, 0x10, 0x19, 0x84, 0x7a,
		0x40, 0xeb, 0x08, 0x6e, 0xdc, 0x28, 0x3d, 0x00, 0xaa, 0x54, 0x64, 0x42, 0x0f, 0xdc, 0xc6, 0xf1,
		0xc4, 0x59, 0xc5, 0xce, 0x2e, 0xf6, 0xda, 0x4a, 0x4e, 0x7c, 0x0e, 0xbf, 0x89, 0xbc, 0xb6, 0x49,
		0x22, 0x25, 0xee, 0x6d, 0xde, 0xbc, 0xe7, 0x37, 0x33, 0x9e, 0x59, 0xb8, 0x54, 0x94, 0x4a, 0x2d,
		0xd7, 0x01, 0x2a, 0x11, 0x54, 0xd3, 0xa0, 0x85, 0x5c, 0xe5, 0x52, 0x4b, 0x76, 0xd1, 0x41, 0x54,
		0x82, 0x57, 0x53, 0xde, 0xc2, 0xf1, 0xab, 0x44, 0xca, 0x24, 0xa5, 0xc0, 0xa8, 0xa2, 0x72, 0x11,
		0x68, 0x91, 0x51, 0xa1, 0x31, 0x53, 0xcd, 0x87, 0xfe, 0x0b, 0x70, 0xbe, 0xc9, 0xe8, 0xeb, 0x0d,
		0x7b, 0x06, 0x4e, 0x85, 0x69, 0x49, 0xde, 0x60, 0x32, 0xb8, 0x72, 0xc3, 0x06, 0xf8, 0x2f, 0x61,
		0x34, 0xc3, 0x62, 0x75, 0x92, 0x9f, 0xc0, 0xe3, 0x7b, 0x99, 0x96, 0x19, 0x9d, 0x54, 0xbc, 0x85,
		0xf3, 0x90, 0x0a, 0x59, 0xe6, 0x73, 0xfa, 0x2e, 0x65, 0xda, 0xe7, 0xf4, 0x83, 0xe6, 0x39, 0xe9,
		0x3e, 0xc5, 0x4f, 0x15, 0xa3, 0x3e, 0x5d, 0xeb, 0x35, 0x9c, 0x7d, 0x91, 0x85, 0xbe, 0x5b, 0x2c,
		0x28, 0xef, 0xb1, 0x81, 0x3b, 0x85, 0xbf, 0x4b, 0xba, 0x41, 0x8d, 0x8c, 0xc1, 0x30, 0x46, 0x8d,
		0xad, 0xc4, 0xc4, 0xfe, 0x1f, 0x70, 0x3f, 0x2f, 0x71, 0x9d, 0xd0, 0xad, 0x4c, 0x98, 0x07, 0x8f,
		0x2a, 0xca, 0x0b, 0x21, 0xd7, 0x46, 0x33, 0x0c, 0x3b, 0xc8, 0x2e, 0xc1, 0x9d, 0xe7, 0x84, 0x9a,
		0xe2, 0x4f, 0xda, 0xb3, 0x0c, 0xb7, 0x4b, 0xd4, 0x6c, 0x69, 0xba, 0xad, 0x59, 0xbb, 0x61, 0xff,
		0x27, 0xf6, 0xd8, 0xeb, 0xad, 0x37, 0x34, 0xb5, 0x77, 0x09, 0x3f, 0x00, 0xe7, 0x16, 0x23, 0x4a,
		0xd9, 0x53, 0xb0, 0x57, 0xb4, 0x6d, 0x9b, 0xab, 0xc3, 0xdd, 0x4c, 0xd6, 0xfe, 0x4c, 0x09, 0xb8,
		0x33, 0x91, 0x51, 0x58, 0x37, 0xcd, 0xde, 0x81, 0x9d, 0x89, 0xa6, 0xdb, 0xb3, 0xf7, 0x63, 0xde,
		0x5c, 0x00, 0xef, 0x2e, 0x80, 0xcf, 0xba, 0x0b, 0x08, 0x6b, 0x99, 0x51, 0xe3, 0xc6, 0xd8, 0x3d,
		0xa4, 0xc6, 0x8d, 0xff, 0x77, 0x00, 0xa3, 0x66, 0x4d, 0x6c, 0x0a, 0x96, 0x88, 0xdb, 0x2a, 0x13,
		0x7e, 0xfc, 0xfe, 0x78, 0xb7, 0xd2, 0xd0, 0x12, 0x71, 0xfd, 0xaf, 0x15, 0xea, 0x65, 0xdb, 0xba,
		0x89, 0xd9, 0xc7, 0x6e, 0x1e, 0xdb, 0x18, 0xbd, 0xe9, 0x37, 0xe2, 0xf7, 0xb5, 0xb6, 0x9d, 0x7a,
		0xfc, 0x1c, 0x1c, 0x83, 0x0f, 0x96, 0xf8, 0xa4, 0x59, 0xe2, 0xf5, 0x15, 0x9c, 0x1f, 0x5a, 0xfd,
		0xba, 0x38, 0xfe, 0x82, 0xa2, 0x91, 0x19, 0xf6, 0xc3, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8e,
		0x26, 0x1d, 0xc0, 0x62, 0x03, 0x00, 0x00,
	},
	// google/protobuf/timestamp.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4f, 0xcf, 0xcf, 0x4f,
		0xcf, 0x49, 0xd5, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x2f, 0xc9, 0xcc, 0x4d,
		0x2d, 0x2e, 0x49, 0xcc, 0x2d, 0xd0, 0x03, 0x0b, 0x09, 0xf1, 0x43, 0x14, 0xe8, 0xc1, 0x14, 0x28,
		0x59, 0x73, 0x71, 0x86, 0xc0, 0xd4, 0x08, 0x49, 0x70, 0xb1, 0x17, 0xa7, 0x26, 0xe7, 0xe7, 0xa5,
		0x14, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0xc1, 0xb8, 0x42, 0x22, 0x5c, 0xac, 0x79, 0x89,
		0x79, 0xf9, 0xc5, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x10, 0x8e, 0x53, 0x1d, 0x97, 0x70,
		0x72, 0x7e, 0xae, 0x1e, 0x9a, 0x99, 0x4e, 0x7c, 0x70, 0x13, 0x03, 0x40, 0x42, 0x01, 0x8c, 0x51,
		0xda, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0xe9, 0xf9, 0x39, 0x89,
		0x79, 0xe9, 0x08, 0x27, 0x16, 0x94, 0x54, 0x16, 0xa4, 0x16, 0x23, 0x5c, 0xfa, 0x83, 0x91, 0x71,
		0x11, 0x13, 0xb3, 0x7b, 0x80, 0xd3, 0x2a, 0x26, 0x39, 0x77, 0x88, 0xc9, 0x01, 0x50, 0xb5, 0x7a,
		0xe1, 0xa9, 0x39, 0x39, 0xde, 0x79, 0xf9, 0xe5, 0x79, 0x21, 0x20, 0x3d, 0x49, 0x6c, 0x60, 0x43,
		0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x77, 0x4a, 0x07, 0xf7, 0x00, 0x00, 0x00,
	},
	// peloton/api/v0/respool/respool.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xdd, 0x72, 0xdb, 0xc4,
		0x17, 0xaf, 0x1c, 0xdb, 0x89, 0x8f, 0x6b, 0xc7, 0xff, 0x9d, 0xfe, 0x8b, 0xea, 0x61, 0x3a, 0x19,
		0xf5, 0x03, 0x53, 0x8a, 0x93, 0x86, 0x19, 0x6e, 0xda, 0x01, 0xf2, 0xd5, 0x36, 0xd3, 0xd4, 0x4d,
		0x36, 0xe9, 0x74, 0xda, 0x1b, 0x46, 0x48, 0x1b, 0x7b, 0xa9, 0xa2, 0x55, 0x57, 0x52, 0xa8, 0x9f,
		0x81, 0xe1, 0x01, 0x78, 0x03, 0x66, 0x60, 0x86, 0xe1, 0x06, 0xee, 0x79, 0x03, 0x2e, 0x79, 0x03,
		0x1e, 0x83, 0xd9, 0xd5, 0xca, 0x96, 0x14, 0xab, 0x96, 0x43, 0x0c, 0x57, 0x96, 0x76, 0xcf, 0xef,
		0x7c, 0x9f, 0xdf, 0xae, 0x05, 0x37, 0x3d, 0xe2, 0xb0, 0x80, 0xb9, 0xab, 0xa6, 0x47, 0x57, 0x4f,
		0xd7, 0x56, 0x39, 0xf1, 0x3d, 0xc6, 0x9c, 0xf8, 0xb7, 0xeb, 0x71, 0x16, 0x30, 0x74, 0x55, 0x49,
		0x75, 0x4d, 0x8f, 0x76, 0x4f, 0xd7, 0xba, 0x6a, 0xb7, 0xfd, 0x7e, 0x06, 0x1d, 0x8b, 0x49, 0x54,
		0xbb, 0x93, 0xd9, 0xb5, 0x06, 0xa6, 0xdb, 0x27, 0x0e, 0xeb, 0x8f, 0x9f, 0x22, 0x49, 0xa3, 0x03,
		0x2d, 0x4c, 0x7c, 0x16, 0x72, 0x8b, 0xec, 0x33, 0xe6, 0xec, 0x9b, 0xc1, 0x00, 0x5d, 0x81, 0xca,
		0xa9, 0xe9, 0x84, 0x44, 0xd7, 0x56, 0xb4, 0x4e, 0x0d, 0x47, 0x2f, 0xc6, 0xcf, 0x1a, 0x34, 0x63,
		0xd1, 0x2d, 0xe6, 0x1e, 0xd3, 0x3e, 0x42, 0x50, 0x7e, 0x4d, 0x5d, 0x5b, 0xc9, 0xc9, 0x67, 0xb4,
		0x02, 0x75, 0x4e, 0x7c, 0xc2, 0x4f, 0xcd, 0x80, 0x32, 0x57, 0x2f, 0xad, 0x68, 0x1d, 0x0d, 0x27,
		0x97, 0x84, 0x7a, 0x87, 0x9e, 0xd0, 0x40, 0x5f, 0x90, 0x7b, 0xd1, 0x8b, 0x58, 0xf5, 0x07, 0x26,
		0x27, 0x7a, 0x39, 0x5a, 0x95, 0x2f, 0xe8, 0x3e, 0x94, 0x83, 0xa1, 0x47, 0xf4, 0xca, 0x8a, 0xd6,
		0x69, 0xae, 0x7f, 0xd0, 0x9d, 0x9c, 0x8d, 0x2e, 0x1e, 0xab, 0x3f, 0x1a, 0x7a, 0x04, 0x4b, 0x90,
		0xf1, 0x53, 0x19, 0x50, 0x32, 0x38, 0xe5, 0xf5, 0x06, 0xd4, 0xa2, 0x2c, 0xec, 0xb1, 0xbe, 0x74,
		0xbd, 0xbe, 0x7e, 0x23, 0xab, 0x78, 0x9c, 0xa6, 0xad, 0x58, 0x14, 0x8f, 0x51, 0x22, 0x70, 0xd7,
		0x3c, 0x21, 0x32, 0xba, 0x1a, 0x96, 0xcf, 0xe8, 0x3a, 0x00, 0xfb, 0xc6, 0xa5, 0x6e, 0xff, 0x88,
		0x98, 0x27, 0x32, 0xb6, 0x1a, 0x4e, 0xac, 0x88, 0x7d, 0xc7, 0x36, 0xbd, 0x47, 0x9c, 0x85, 0x9e,
		0xaf, 0x97, 0x57, 0x16, 0xc4, 0xfe, 0x78, 0x45, 0x24, 0xce, 0x26, 0xbe, 0xc5, 0xa9, 0x27, 0x13,
		0x57, 0x91, 0x0a, 0x92, 0x4b, 0x68, 0x1b, 0x6a, 0x5c, 0x85, 0xe3, 0xeb, 0xd5, 0x95, 0x85, 0x4e,
		0x7d, 0xfd, 0xf6, 0x3b, 0x32, 0x92, 0xa8, 0x14, 0x1e, 0x03, 0xd1, 0x67, 0x50, 0xf5, 0x4c, 0x4e,
		0xdc, 0x40, 0x5f, 0x94, 0xb1, 0x9f, 0x51, 0x11, 0xbf, 0x26, 0x53, 0xb7, 0xbb, 0x8d, 0x15, 0x0a,
		0x7d, 0x01, 0x55, 0x8f, 0x39, 0xd4, 0x1a, 0xea, 0x4b, 0xb2, 0x28, 0x9d, 0x3c, 0x17, 0x0e, 0xad,
		0x01, 0xb1, 0x43, 0x87, 0xba, 0xfd, 0x7d, 0x29, 0x8f, 0x15, 0x0e, 0x1d, 0xc0, 0xb2, 0xc5, 0xdc,
		0x80, 0x33, 0xc7, 0x21, 0x7c, 0x4f, 0xb6, 0x42, 0x4d, 0xba, 0x92, 0x5b, 0xdf, 0xad, 0xb4, 0x38,
		0xce, 0xe2, 0xd1, 0x26, 0x80, 0xef, 0x98, 0xd6, 0xeb, 0x48, 0x1b, 0x48, 0x6d, 0x46, 0xae, 0x63,
		0x23, 0x49, 0x9c, 0x40, 0x19, 0xf7, 0x60, 0x39, 0x63, 0x47, 0xd4, 0xec, 0xc4, 0x7c, 0xbb, 0x4f,
		0xb8, 0x25, 0xf2, 0xa5, 0xc9, 0xce, 0x4c, 0xac, 0x18, 0x77, 0x01, 0xc6, 0xca, 0xa6, 0x4a, 0xbf,
		0x84, 0x46, 0x9c, 0xd3, 0xe7, 0xbe, 0xd9, 0x27, 0x13, 0xe7, 0xe7, 0x3a, 0x80, 0xe9, 0x38, 0xcc,
		0x4a, 0x8e, 0x4f, 0x62, 0x45, 0xce, 0x89, 0x30, 0x19, 0x4f, 0x8f, 0x7c, 0x31, 0xbe, 0x5b, 0x48,
		0xcf, 0xf1, 0xae, 0x7b, 0xcc, 0xd0, 0xa7, 0x50, 0xa2, 0xb6, 0xea, 0xf0, 0xa2, 0x55, 0x2e, 0x51,
		0x1b, 0x6d, 0x42, 0xd5, 0x92, 0x6d, 0x23, 0xcd, 0xd7, 0xd7, 0xef, 0x4c, 0x6b, 0xb2, 0xf1, 0x70,
		0x61, 0x85, 0x4c, 0x74, 0xd9, 0xc2, 0xb9, 0xba, 0x6c, 0x13, 0x96, 0xac, 0x01, 0x75, 0x6c, 0x4e,
		0x5c, 0x39, 0x2b, 0xc5, 0x35, 0x8c, 0x70, 0xe8, 0x3e, 0x54, 0x42, 0x91, 0x67, 0xbd, 0x22, 0x15,
		0xdc, 0x9a, 0x16, 0x86, 0x2c, 0x0a, 0x8e, 0x30, 0xe8, 0x01, 0x94, 0x3d, 0x33, 0x18, 0xe8, 0x55,
		0xe9, 0x7e, 0xa7, 0x48, 0x0a, 0x04, 0x79, 0x62, 0x89, 0x32, 0x4e, 0xe0, 0x5a, 0x72, 0x67, 0xc3,
		0xe1, 0xc4, 0xb4, 0x87, 0x3b, 0x6f, 0xa9, 0x1f, 0xf8, 0xe7, 0xae, 0x8b, 0x0e, 0x8b, 0x27, 0xc4,
		0x97, 0x11, 0x45, 0xc4, 0x13, 0xbf, 0x0a, 0x73, 0xbb, 0xee, 0xa9, 0xe9, 0x50, 0x7b, 0x02, 0xdf,
		0x5d, 0xbc, 0xb9, 0x01, 0x5c, 0x49, 0xca, 0xf7, 0x58, 0xf0, 0x90, 0x85, 0xae, 0x3d, 0x07, 0x4b,
		0x1c, 0xf4, 0x6c, 0x86, 0x47, 0xd6, 0xe2, 0x0a, 0x69, 0xe7, 0xa9, 0xd0, 0x3b, 0x6c, 0xbe, 0x81,
		0xf7, 0x26, 0x24, 0x53, 0x9e, 0x8c, 0xf3, 0x32, 0x79, 0x9c, 0x3e, 0xa8, 0x76, 0xfd, 0xcd, 0xd0,
		0x1f, 0xce, 0x21, 0x9d, 0x14, 0xfe, 0x9f, 0xb6, 0xd3, 0x63, 0xc1, 0x1e, 0x31, 0x8f, 0xe7, 0x60,
		0xea, 0x6b, 0xb8, 0x9a, 0xe9, 0x91, 0x6d, 0xe2, 0x90, 0x80, 0xcc, 0xa3, 0x4b, 0x0e, 0xa1, 0xb1,
		0xc5, 0x89, 0x19, 0x10, 0x4c, 0xde, 0x84, 0xc4, 0x0f, 0x2e, 0x82, 0xc1, 0x8c, 0xbf, 0x4a, 0xd0,
		0x8c, 0xb5, 0xfa, 0x1e, 0x73, 0x7d, 0x82, 0x36, 0xa1, 0x42, 0x38, 0x67, 0x5c, 0x39, 0x7f, 0x37,
		0xf7, 0xb8, 0x4a, 0xc1, 0xba, 0x3b, 0x02, 0x83, 0x23, 0xa8, 0x20, 0x46, 0x4e, 0xfc, 0xd0, 0x09,
		0x94, 0x6b, 0x85, 0x89, 0x31, 0x42, 0xb5, 0xff, 0xd0, 0xa0, 0x22, 0x15, 0xa2, 0x17, 0xd0, 0x30,
		0x93, 0xbc, 0xa2, 0xbc, 0xba, 0x57, 0x24, 0xd6, 0x14, 0x21, 0xe1, 0xb4, 0x1e, 0xc4, 0xe0, 0x1a,
		0xcd, 0x63, 0x13, 0xe5, 0x75, 0xae, 0x91, 0x5c, 0x1a, 0xc2, 0xf9, 0x3a, 0x0d, 0x0e, 0xf0, 0x88,
		0x04, 0x71, 0xf1, 0xce, 0xdb, 0x1f, 0x77, 0xe1, 0x7f, 0xd4, 0xb5, 0x9c, 0xd0, 0x26, 0x5b, 0xe2,
		0x04, 0x10, 0x3b, 0xbe, 0x74, 0x77, 0x09, 0x9f, 0xdd, 0x30, 0x7e, 0x29, 0x41, 0x5d, 0x1a, 0x55,
		0xb5, 0xfd, 0x3c, 0x5d, 0xdb, 0x0f, 0xf3, 0x02, 0x4c, 0x60, 0xd2, 0x85, 0xdd, 0x86, 0x25, 0x21,
		0x40, 0xdd, 0x63, 0xa6, 0x92, 0x54, 0x88, 0x1f, 0xc4, 0x49, 0x8d, 0x47, 0x48, 0xf4, 0x18, 0xc0,
		0x1a, 0x7b, 0xbf, 0x20, 0x0f, 0xae, 0xe2, 0x7a, 0x12, 0xd8, 0xf6, 0x41, 0xdc, 0x27, 0x8f, 0x61,
		0xc9, 0x55, 0x9c, 0x39, 0xad, 0x71, 0x27, 0xb1, 0x3a, 0x1e, 0xa1, 0x8d, 0xa7, 0xd0, 0x88, 0x86,
		0x38, 0x2e, 0xd5, 0x3f, 0xe2, 0x43, 0x71, 0x69, 0x69, 0xc6, 0xfa, 0x66, 0x9c, 0xb0, 0x34, 0x2c,
		0x55, 0x88, 0xf6, 0xaf, 0xa5, 0x38, 0xf2, 0xbd, 0x33, 0x91, 0xaf, 0x15, 0x75, 0xf1, 0x6c, 0xf4,
		0x82, 0x54, 0xa8, 0x24, 0xe6, 0x59, 0x48, 0x25, 0xa2, 0x72, 0xac, 0x90, 0xe8, 0x09, 0xd4, 0x68,
		0x4c, 0xba, 0xea, 0x66, 0xf4, 0x71, 0x31, 0x35, 0x0a, 0x84, 0xc7, 0x78, 0xd4, 0x03, 0x70, 0x47,
		0xb4, 0x2a, 0xff, 0x37, 0xd5, 0xd7, 0xbb, 0x05, 0x4b, 0xab, 0x50, 0x38, 0xa1, 0xc1, 0xf8, 0x56,
		0x83, 0xc6, 0x73, 0xcf, 0x4e, 0xf0, 0xe8, 0x7f, 0x78, 0x83, 0x34, 0xbe, 0x2f, 0x41, 0x33, 0xf6,
		0x66, 0xc6, 0xee, 0x48, 0xc3, 0xd2, 0xdd, 0xf1, 0xbb, 0x76, 0xe1, 0x73, 0xf1, 0xef, 0x13, 0xe6,
		0x53, 0x68, 0xec, 0x31, 0xf6, 0x3a, 0xf4, 0x2e, 0x66, 0x10, 0x7f, 0x2b, 0x41, 0x33, 0xd6, 0x37,
		0x63, 0xaa, 0xd3, 0xb0, 0x34, 0x23, 0x46, 0xdd, 0x53, 0x9a, 0xb5, 0x7b, 0xda, 0x3f, 0x68, 0xf3,
		0x19, 0xe0, 0x03, 0xa8, 0xab, 0x94, 0x0a, 0x01, 0xe5, 0xd8, 0xea, 0x0c, 0x85, 0x91, 0x29, 0x4b,
		0xea, 0x30, 0x9a, 0x70, 0xf9, 0x20, 0x24, 0x7c, 0xa8, 0xea, 0x60, 0xfc, 0xa8, 0x41, 0x43, 0x2d,
		0xa8, 0x44, 0x6e, 0xa4, 0x13, 0xf9, 0x51, 0x9e, 0xb9, 0x14, 0x2a, 0x9d, 0xc7, 0x1e, 0x34, 0x78,
		0xc2, 0x0b, 0x71, 0xa8, 0xcd, 0x76, 0x2c, 0xa4, 0xe1, 0xed, 0x45, 0x95, 0xde, 0x3b, 0x0f, 0x60,
		0x39, 0xf3, 0xe5, 0x04, 0xb5, 0xe0, 0xf2, 0xf3, 0xde, 0x93, 0xde, 0xb3, 0x17, 0xbd, 0x2f, 0x8f,
		0x5e, 0xee, 0xef, 0xb4, 0x2e, 0xa1, 0x3a, 0x2c, 0xee, 0xec, 0x6d, 0x1c, 0x1e, 0xed, 0x6e, 0xb5,
		0x34, 0x04, 0x50, 0x3d, 0x3c, 0xda, 0x10, 0xcf, 0xa5, 0x3b, 0xf7, 0xa0, 0x95, 0xfd, 0x8b, 0x2f,
		0x84, 0x15, 0xbc, 0x75, 0x49, 0xe8, 0xda, 0xe7, 0x94, 0x71, 0x1a, 0x0c, 0x1f, 0xee, 0x3e, 0x7c,
		0xd6, 0xd2, 0xd6, 0xff, 0x2c, 0x4b, 0x8b, 0xd2, 0x97, 0xa7, 0xa6, 0x6b, 0xf6, 0x09, 0x47, 0x16,
		0xa0, 0xd1, 0x7d, 0x69, 0xe4, 0x24, 0xba, 0x35, 0xed, 0x6e, 0x25, 0xf3, 0xdd, 0xbe, 0x5d, 0xec,
		0x0a, 0x86, 0x5e, 0xc1, 0x72, 0x74, 0x70, 0x8f, 0x2d, 0x18, 0xef, 0x3c, 0xe1, 0x23, 0xf5, 0x37,
		0x0a, 0xdc, 0x02, 0x44, 0x00, 0xa3, 0xe3, 0xa8, 0x40, 0x00, 0xa9, 0x13, 0x34, 0x3f, 0x80, 0xcc,
		0xc1, 0x68, 0x01, 0x1a, 0xb1, 0x5a, 0x01, 0x23, 0x29, 0x1a, 0xcf, 0x37, 0x92, 0xe1, 0x57, 0x02,
		0x57, 0x46, 0xf3, 0x9c, 0x18, 0xca, 0x7c, 0x33, 0x29, 0x12, 0xca, 0x37, 0x93, 0xe1, 0x96, 0x23,
		0xa8, 0xc8, 0x6e, 0x47, 0x37, 0xa7, 0x0c, 0x43, 0xa4, 0xf6, 0x56, 0xa1, 0x91, 0xd9, 0x5c, 0x83,
		0x9c, 0x6f, 0xa5, 0xaf, 0xae, 0x4e, 0xfe, 0xd2, 0xfa, 0x55, 0x55, 0x7e, 0x02, 0xfd, 0xe4, 0xef,
		0x00, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x5f, 0x05, 0x8e, 0x8a, 0x15, 0x00, 0x00,
	},
	// peloton/api/v0/changelog/changelog.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x28, 0x48, 0xcd, 0xc9,
		0x2f, 0xc9, 0xcf, 0xd3, 0x4f, 0x2c, 0xc8, 0xd4, 0x2f, 0x33, 0xd0, 0x4f, 0xce, 0x48, 0xcc, 0x4b,
		0x4f, 0xcd, 0xc9, 0x4f, 0x47, 0xb0, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x24, 0xa0, 0x2a,
		0xf5, 0x12, 0x0b, 0x32, 0xf5, 0xca, 0x0c, 0xf4, 0xe0, 0xf2, 0x4a, 0xf5, 0x5c, 0x9c, 0xce, 0x60,
		0x8e, 0x4f, 0x7e, 0xba, 0x90, 0x04, 0x17, 0x7b, 0x59, 0x6a, 0x51, 0x71, 0x66, 0x7e, 0x9e, 0x04,
		0xa3, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x8c, 0x2b, 0x24, 0xc3, 0xc5, 0x99, 0x5c, 0x94, 0x9a, 0x58,
		0x92, 0x9a, 0xe2, 0x58, 0x22, 0xc1, 0x04, 0x96, 0x43, 0x08, 0x80, 0x64, 0x4b, 0x0b, 0x52, 0xa0,
		0xb2, 0xcc, 0x10, 0x59, 0xb8, 0x00, 0x92, 0xac, 0x53, 0xa5, 0x04, 0x8b, 0x02, 0xa3, 0x06, 0x67,
		0x10, 0x42, 0xc0, 0xc9, 0x84, 0x0b, 0xa7, 0xe3, 0xa2, 0x24, 0x70, 0x79, 0x30, 0x89, 0x0d, 0xec,
		0x2f, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x23, 0x53, 0xee, 0x36, 0x03, 0x01, 0x00, 0x00,
	},
}

func init() {
	yarpc.RegisterClientBuilder(
		func(clientConfig transport.ClientConfig, structField reflect.StructField) ResourcePoolServiceYARPCClient {
			return NewResourcePoolServiceYARPCClient(clientConfig, protobuf.ClientBuilderOptions(clientConfig, structField)...)
		},
	)
}
