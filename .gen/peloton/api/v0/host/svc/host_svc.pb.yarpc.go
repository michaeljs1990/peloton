// Code generated by protoc-gen-yarpc-go
// source: peloton/api/v0/host/svc/host_svc.proto
// DO NOT EDIT!

package svcpb

import (
	"context"
	"io/ioutil"
	"reflect"

	"github.com/gogo/protobuf/proto"
	"go.uber.org/fx"
	"go.uber.org/yarpc"
	"go.uber.org/yarpc/api/transport"
	"go.uber.org/yarpc/encoding/protobuf"
	"go.uber.org/yarpc/encoding/protobuf/reflection"
)

var _ = ioutil.NopCloser

// HostServiceYARPCClient is the YARPC client-side interface for the HostService service.
type HostServiceYARPCClient interface {
	QueryHosts(context.Context, *QueryHostsRequest, ...yarpc.CallOption) (*QueryHostsResponse, error)
	StartMaintenance(context.Context, *StartMaintenanceRequest, ...yarpc.CallOption) (*StartMaintenanceResponse, error)
	CompleteMaintenance(context.Context, *CompleteMaintenanceRequest, ...yarpc.CallOption) (*CompleteMaintenanceResponse, error)
}

// NewHostServiceYARPCClient builds a new YARPC client for the HostService service.
func NewHostServiceYARPCClient(clientConfig transport.ClientConfig, options ...protobuf.ClientOption) HostServiceYARPCClient {
	return &_HostServiceYARPCCaller{protobuf.NewStreamClient(
		protobuf.ClientParams{
			ServiceName:  "peloton.api.v0.host.svc.HostService",
			ClientConfig: clientConfig,
			Options:      options,
		},
	)}
}

// HostServiceYARPCServer is the YARPC server-side interface for the HostService service.
type HostServiceYARPCServer interface {
	QueryHosts(context.Context, *QueryHostsRequest) (*QueryHostsResponse, error)
	StartMaintenance(context.Context, *StartMaintenanceRequest) (*StartMaintenanceResponse, error)
	CompleteMaintenance(context.Context, *CompleteMaintenanceRequest) (*CompleteMaintenanceResponse, error)
}

// BuildHostServiceYARPCProcedures prepares an implementation of the HostService service for YARPC registration.
func BuildHostServiceYARPCProcedures(server HostServiceYARPCServer) []transport.Procedure {
	handler := &_HostServiceYARPCHandler{server}
	return protobuf.BuildProcedures(
		protobuf.BuildProceduresParams{
			ServiceName: "peloton.api.v0.host.svc.HostService",
			UnaryHandlerParams: []protobuf.BuildProceduresUnaryHandlerParams{
				{
					MethodName: "QueryHosts",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:     handler.QueryHosts,
							NewRequest: newHostServiceServiceQueryHostsYARPCRequest,
						},
					),
				},
				{
					MethodName: "StartMaintenance",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:     handler.StartMaintenance,
							NewRequest: newHostServiceServiceStartMaintenanceYARPCRequest,
						},
					),
				},
				{
					MethodName: "CompleteMaintenance",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:     handler.CompleteMaintenance,
							NewRequest: newHostServiceServiceCompleteMaintenanceYARPCRequest,
						},
					),
				},
			},
			OnewayHandlerParams: []protobuf.BuildProceduresOnewayHandlerParams{},
			StreamHandlerParams: []protobuf.BuildProceduresStreamHandlerParams{},
		},
	)
}

// FxHostServiceYARPCClientParams defines the input
// for NewFxHostServiceYARPCClient. It provides the
// paramaters to get a HostServiceYARPCClient in an
// Fx application.
type FxHostServiceYARPCClientParams struct {
	fx.In

	Provider yarpc.ClientConfig
}

// FxHostServiceYARPCClientResult defines the output
// of NewFxHostServiceYARPCClient. It provides a
// HostServiceYARPCClient to an Fx application.
type FxHostServiceYARPCClientResult struct {
	fx.Out

	Client HostServiceYARPCClient

	// We are using an fx.Out struct here instead of just returning a client
	// so that we can add more values or add named versions of the client in
	// the future without breaking any existing code.
}

// NewFxHostServiceYARPCClient provides a HostServiceYARPCClient
// to an Fx application using the given name for routing.
//
//  fx.Provide(
//    svcpb.NewFxHostServiceYARPCClient("service-name"),
//    ...
//  )
func NewFxHostServiceYARPCClient(name string, options ...protobuf.ClientOption) interface{} {
	return func(params FxHostServiceYARPCClientParams) FxHostServiceYARPCClientResult {
		return FxHostServiceYARPCClientResult{
			Client: NewHostServiceYARPCClient(params.Provider.ClientConfig(name), options...),
		}
	}
}

// FxHostServiceYARPCProceduresParams defines the input
// for NewFxHostServiceYARPCProcedures. It provides the
// paramaters to get HostServiceYARPCServer procedures in an
// Fx application.
type FxHostServiceYARPCProceduresParams struct {
	fx.In

	Server HostServiceYARPCServer
}

// FxHostServiceYARPCProceduresResult defines the output
// of NewFxHostServiceYARPCProcedures. It provides
// HostServiceYARPCServer procedures to an Fx application.
//
// The procedures are provided to the "yarpcfx" value group.
// Dig 1.2 or newer must be used for this feature to work.
type FxHostServiceYARPCProceduresResult struct {
	fx.Out

	Procedures     []transport.Procedure `group:"yarpcfx"`
	ReflectionMeta reflection.ServerMeta `group:"yarpcfx"`
}

// NewFxHostServiceYARPCProcedures provides HostServiceYARPCServer procedures to an Fx application.
// It expects a HostServiceYARPCServer to be present in the container.
//
//  fx.Provide(
//    svcpb.NewFxHostServiceYARPCProcedures(),
//    ...
//  )
func NewFxHostServiceYARPCProcedures() interface{} {
	return func(params FxHostServiceYARPCProceduresParams) FxHostServiceYARPCProceduresResult {
		return FxHostServiceYARPCProceduresResult{
			Procedures: BuildHostServiceYARPCProcedures(params.Server),
			ReflectionMeta: reflection.ServerMeta{
				ServiceName:     "peloton.api.v0.host.svc.HostService",
				FileDescriptors: yarpcFileDescriptorClosureb3b883d5714274e7,
			},
		}
	}
}

type _HostServiceYARPCCaller struct {
	streamClient protobuf.StreamClient
}

func (c *_HostServiceYARPCCaller) QueryHosts(ctx context.Context, request *QueryHostsRequest, options ...yarpc.CallOption) (*QueryHostsResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "QueryHosts", request, newHostServiceServiceQueryHostsYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*QueryHostsResponse)
	if !ok {
		return nil, protobuf.CastError(emptyHostServiceServiceQueryHostsYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_HostServiceYARPCCaller) StartMaintenance(ctx context.Context, request *StartMaintenanceRequest, options ...yarpc.CallOption) (*StartMaintenanceResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "StartMaintenance", request, newHostServiceServiceStartMaintenanceYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*StartMaintenanceResponse)
	if !ok {
		return nil, protobuf.CastError(emptyHostServiceServiceStartMaintenanceYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_HostServiceYARPCCaller) CompleteMaintenance(ctx context.Context, request *CompleteMaintenanceRequest, options ...yarpc.CallOption) (*CompleteMaintenanceResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "CompleteMaintenance", request, newHostServiceServiceCompleteMaintenanceYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*CompleteMaintenanceResponse)
	if !ok {
		return nil, protobuf.CastError(emptyHostServiceServiceCompleteMaintenanceYARPCResponse, responseMessage)
	}
	return response, err
}

type _HostServiceYARPCHandler struct {
	server HostServiceYARPCServer
}

func (h *_HostServiceYARPCHandler) QueryHosts(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *QueryHostsRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*QueryHostsRequest)
		if !ok {
			return nil, protobuf.CastError(emptyHostServiceServiceQueryHostsYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.QueryHosts(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_HostServiceYARPCHandler) StartMaintenance(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *StartMaintenanceRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*StartMaintenanceRequest)
		if !ok {
			return nil, protobuf.CastError(emptyHostServiceServiceStartMaintenanceYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.StartMaintenance(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_HostServiceYARPCHandler) CompleteMaintenance(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *CompleteMaintenanceRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*CompleteMaintenanceRequest)
		if !ok {
			return nil, protobuf.CastError(emptyHostServiceServiceCompleteMaintenanceYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.CompleteMaintenance(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func newHostServiceServiceQueryHostsYARPCRequest() proto.Message {
	return &QueryHostsRequest{}
}

func newHostServiceServiceQueryHostsYARPCResponse() proto.Message {
	return &QueryHostsResponse{}
}

func newHostServiceServiceStartMaintenanceYARPCRequest() proto.Message {
	return &StartMaintenanceRequest{}
}

func newHostServiceServiceStartMaintenanceYARPCResponse() proto.Message {
	return &StartMaintenanceResponse{}
}

func newHostServiceServiceCompleteMaintenanceYARPCRequest() proto.Message {
	return &CompleteMaintenanceRequest{}
}

func newHostServiceServiceCompleteMaintenanceYARPCResponse() proto.Message {
	return &CompleteMaintenanceResponse{}
}

var (
	emptyHostServiceServiceQueryHostsYARPCRequest           = &QueryHostsRequest{}
	emptyHostServiceServiceQueryHostsYARPCResponse          = &QueryHostsResponse{}
	emptyHostServiceServiceStartMaintenanceYARPCRequest     = &StartMaintenanceRequest{}
	emptyHostServiceServiceStartMaintenanceYARPCResponse    = &StartMaintenanceResponse{}
	emptyHostServiceServiceCompleteMaintenanceYARPCRequest  = &CompleteMaintenanceRequest{}
	emptyHostServiceServiceCompleteMaintenanceYARPCResponse = &CompleteMaintenanceResponse{}
)

var yarpcFileDescriptorClosureb3b883d5714274e7 = [][]byte{
	// peloton/api/v0/host/svc/host_svc.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x4b, 0x3b, 0x31,
		0x10, 0xc5, 0xe9, 0xff, 0x8f, 0x42, 0xa7, 0x20, 0x1a, 0x0f, 0x2d, 0xab, 0x2d, 0xb2, 0x07, 0x15,
		0x85, 0x6c, 0x6d, 0x05, 0x41, 0x04, 0x41, 0x2f, 0x7a, 0xf0, 0xe0, 0xd6, 0x93, 0x97, 0x92, 0x86,
		0x29, 0x5d, 0x68, 0x93, 0xb8, 0x93, 0x46, 0xbc, 0xf9, 0x91, 0xfd, 0x08, 0xd2, 0xec, 0x96, 0x8a,
		0xdd, 0x80, 0xbd, 0x0d, 0x9b, 0xf7, 0x7e, 0x79, 0xfb, 0x26, 0x70, 0x6c, 0x70, 0xaa, 0xad, 0x56,
		0x89, 0x30, 0x59, 0xe2, 0xba, 0xc9, 0x44, 0x93, 0x4d, 0xc8, 0x49, 0x3f, 0x0c, 0xc9, 0x49, 0x6e,
		0x72, 0x6d, 0x35, 0x6b, 0x96, 0x3a, 0x2e, 0x4c, 0xc6, 0x5d, 0x97, 0x2f, 0x8e, 0x39, 0x39, 0x19,
		0x75, 0xaa, 0x00, 0xfe, 0xd4, 0x1b, 0xe3, 0x17, 0xd8, 0x7b, 0x9e, 0x63, 0xfe, 0xf1, 0xa0, 0xc9,
		0x52, 0x8a, 0x6f, 0x73, 0x24, 0xcb, 0x6e, 0xa1, 0x51, 0xf0, 0xad, 0xb0, 0x48, 0xad, 0xda, 0xd1,
		0xff, 0xd3, 0x9d, 0x5e, 0x87, 0x57, 0xdd, 0xb1, 0xf0, 0x0d, 0x16, 0xb2, 0x14, 0x26, 0xcb, 0x91,
		0xe2, 0x14, 0xd8, 0x4f, 0x2a, 0x19, 0xad, 0x08, 0xd9, 0x0d, 0x78, 0xcd, 0x30, 0x53, 0x63, 0x5d,
		0x50, 0x1b, 0xbd, 0x76, 0x90, 0xfa, 0xa8, 0xc6, 0x3a, 0xad, 0x4f, 0xca, 0x89, 0xe2, 0x2b, 0x68,
		0x0e, 0xac, 0xc8, 0xed, 0x93, 0xc8, 0x94, 0x45, 0x25, 0x94, 0xc4, 0x65, 0xde, 0x43, 0xf0, 0x3a,
		0x25, 0x66, 0x65, 0xda, 0x7a, 0xba, 0xfa, 0x10, 0x47, 0xd0, 0x5a, 0x37, 0x16, 0x91, 0xe2, 0x6b,
		0x88, 0xee, 0xf5, 0xcc, 0x4c, 0xd1, 0xe2, 0xc6, 0xdc, 0x36, 0x1c, 0x54, 0x7a, 0x0b, 0x74, 0xef,
		0xeb, 0x1f, 0x34, 0x7c, 0x3b, 0x98, 0xbb, 0x4c, 0x22, 0x43, 0x80, 0x55, 0x27, 0xec, 0x8c, 0x07,
		0x36, 0xc6, 0xd7, 0xd6, 0x11, 0x9d, 0xff, 0x49, 0x5b, 0x96, 0xfc, 0x0e, 0xbb, 0xbf, 0xff, 0x96,
		0x75, 0x83, 0x80, 0x40, 0xa3, 0xd1, 0xc5, 0x06, 0x8e, 0xf2, 0xe2, 0xcf, 0x1a, 0xec, 0x57, 0xf4,
		0xc1, 0xfa, 0x41, 0x54, 0xb8, 0xf9, 0xe8, 0x72, 0x33, 0x53, 0x11, 0xe1, 0xee, 0x04, 0x3a, 0x52,
		0xcf, 0x82, 0x56, 0x33, 0x7a, 0xdd, 0x22, 0x27, 0xcd, 0x68, 0xb4, 0xed, 0x1f, 0x7f, 0xff, 0x3b,
		0x00, 0x00, 0xff, 0xff, 0x4c, 0xfb, 0x69, 0x2c, 0x5f, 0x03, 0x00, 0x00,
	},
	// peloton/api/v0/host/host.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2b, 0x48, 0xcd, 0xc9,
		0x2f, 0xc9, 0xcf, 0xd3, 0x4f, 0x2c, 0xc8, 0xd4, 0x2f, 0x33, 0xd0, 0xcf, 0xc8, 0x2f, 0x2e, 0x01,
		0x13, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xc2, 0x50, 0x79, 0xbd, 0xc4, 0x82, 0x4c, 0xbd,
		0x32, 0x03, 0x3d, 0x90, 0x94, 0x52, 0x0e, 0x17, 0x87, 0x47, 0x7e, 0x71, 0x89, 0x67, 0x5e, 0x5a,
		0xbe, 0x90, 0x14, 0x17, 0x07, 0x48, 0x2c, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x51, 0x81, 0x51, 0x83,
		0x33, 0x08, 0xce, 0x17, 0xe2, 0xe3, 0x62, 0xca, 0x2c, 0x90, 0x60, 0x02, 0x8b, 0x32, 0x65, 0x16,
		0x08, 0x99, 0x70, 0xb1, 0x16, 0x97, 0x24, 0x96, 0xa4, 0x4a, 0x30, 0x2b, 0x30, 0x6a, 0xf0, 0x19,
		0xc9, 0xe9, 0x61, 0x31, 0x5c, 0x0f, 0x64, 0x72, 0x30, 0x48, 0x55, 0x10, 0x44, 0xb1, 0xd6, 0x14,
		0x46, 0x2e, 0x4e, 0xb8, 0xa0, 0x90, 0x18, 0x97, 0x90, 0x87, 0x7f, 0x70, 0x48, 0x7c, 0x70, 0x88,
		0x63, 0x88, 0x6b, 0xbc, 0xa7, 0x5f, 0x98, 0xa3, 0x8f, 0xa7, 0x8b, 0x00, 0x03, 0x9a, 0x78, 0xa8,
		0x9f, 0xb7, 0x9f, 0x7f, 0xb8, 0x9f, 0x00, 0xa3, 0x90, 0x20, 0x17, 0x2f, 0xb2, 0x78, 0x80, 0x00,
		0x93, 0x90, 0x38, 0x97, 0x30, 0x92, 0x90, 0x4b, 0x90, 0xa3, 0xa7, 0x9f, 0xa7, 0x9f, 0xbb, 0x00,
		0x33, 0x9a, 0x19, 0x60, 0x09, 0x57, 0x17, 0x01, 0x16, 0x21, 0x61, 0x2e, 0x7e, 0x64, 0x71, 0x90,
		0xc1, 0xac, 0x49, 0x6c, 0xe0, 0x00, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe8, 0xba, 0xf8,
		0x16, 0x42, 0x01, 0x00, 0x00,
	},
}

func init() {
	yarpc.RegisterClientBuilder(
		func(clientConfig transport.ClientConfig, structField reflect.StructField) HostServiceYARPCClient {
			return NewHostServiceYARPCClient(clientConfig, protobuf.ClientBuilderOptions(clientConfig, structField)...)
		},
	)
}
