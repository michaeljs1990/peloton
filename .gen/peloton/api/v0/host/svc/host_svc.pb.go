// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peloton/api/v0/host/svc/host_svc.proto

package svcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	host "github.com/uber/peloton/.gen/peloton/api/v0/host"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
//  Request message for HostService.QueryHosts method.
type QueryHostsRequest struct {
	// List of host states to query the hosts. Will return all hosts if the list is empty.
	HostStates           []host.HostState `protobuf:"varint,1,rep,packed,name=host_states,json=hostStates,proto3,enum=peloton.api.v0.host.HostState" json:"host_states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *QueryHostsRequest) Reset()         { *m = QueryHostsRequest{} }
func (m *QueryHostsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryHostsRequest) ProtoMessage()    {}
func (*QueryHostsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3b883d5714274e7, []int{0}
}

func (m *QueryHostsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryHostsRequest.Unmarshal(m, b)
}
func (m *QueryHostsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryHostsRequest.Marshal(b, m, deterministic)
}
func (m *QueryHostsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryHostsRequest.Merge(m, src)
}
func (m *QueryHostsRequest) XXX_Size() int {
	return xxx_messageInfo_QueryHostsRequest.Size(m)
}
func (m *QueryHostsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryHostsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryHostsRequest proto.InternalMessageInfo

func (m *QueryHostsRequest) GetHostStates() []host.HostState {
	if m != nil {
		return m.HostStates
	}
	return nil
}

//*
//  Response message for HostService.QueryHosts method.
type QueryHostsResponse struct {
	// List of hosts that match the host query criteria.
	HostInfos            []*host.HostInfo `protobuf:"bytes,1,rep,name=host_infos,json=hostInfos,proto3" json:"host_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *QueryHostsResponse) Reset()         { *m = QueryHostsResponse{} }
func (m *QueryHostsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryHostsResponse) ProtoMessage()    {}
func (*QueryHostsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3b883d5714274e7, []int{1}
}

func (m *QueryHostsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryHostsResponse.Unmarshal(m, b)
}
func (m *QueryHostsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryHostsResponse.Marshal(b, m, deterministic)
}
func (m *QueryHostsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryHostsResponse.Merge(m, src)
}
func (m *QueryHostsResponse) XXX_Size() int {
	return xxx_messageInfo_QueryHostsResponse.Size(m)
}
func (m *QueryHostsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryHostsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryHostsResponse proto.InternalMessageInfo

func (m *QueryHostsResponse) GetHostInfos() []*host.HostInfo {
	if m != nil {
		return m.HostInfos
	}
	return nil
}

//*
//  Request message for HostService.StartMaintenance method.
type StartMaintenanceRequest struct {
	// List of hosts to be put into maintenance
	Hostnames            []string `protobuf:"bytes,1,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartMaintenanceRequest) Reset()         { *m = StartMaintenanceRequest{} }
func (m *StartMaintenanceRequest) String() string { return proto.CompactTextString(m) }
func (*StartMaintenanceRequest) ProtoMessage()    {}
func (*StartMaintenanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3b883d5714274e7, []int{2}
}

func (m *StartMaintenanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartMaintenanceRequest.Unmarshal(m, b)
}
func (m *StartMaintenanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartMaintenanceRequest.Marshal(b, m, deterministic)
}
func (m *StartMaintenanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartMaintenanceRequest.Merge(m, src)
}
func (m *StartMaintenanceRequest) XXX_Size() int {
	return xxx_messageInfo_StartMaintenanceRequest.Size(m)
}
func (m *StartMaintenanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartMaintenanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartMaintenanceRequest proto.InternalMessageInfo

func (m *StartMaintenanceRequest) GetHostnames() []string {
	if m != nil {
		return m.Hostnames
	}
	return nil
}

//*
//  Response message for HostService.StartMaintenance method.
type StartMaintenanceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartMaintenanceResponse) Reset()         { *m = StartMaintenanceResponse{} }
func (m *StartMaintenanceResponse) String() string { return proto.CompactTextString(m) }
func (*StartMaintenanceResponse) ProtoMessage()    {}
func (*StartMaintenanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3b883d5714274e7, []int{3}
}

func (m *StartMaintenanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartMaintenanceResponse.Unmarshal(m, b)
}
func (m *StartMaintenanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartMaintenanceResponse.Marshal(b, m, deterministic)
}
func (m *StartMaintenanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartMaintenanceResponse.Merge(m, src)
}
func (m *StartMaintenanceResponse) XXX_Size() int {
	return xxx_messageInfo_StartMaintenanceResponse.Size(m)
}
func (m *StartMaintenanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartMaintenanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartMaintenanceResponse proto.InternalMessageInfo

//*
//  Request message for HostService.CompleteMaintenance method.
type CompleteMaintenanceRequest struct {
	// List of hosts put be brought back up
	Hostnames            []string `protobuf:"bytes,1,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteMaintenanceRequest) Reset()         { *m = CompleteMaintenanceRequest{} }
func (m *CompleteMaintenanceRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteMaintenanceRequest) ProtoMessage()    {}
func (*CompleteMaintenanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3b883d5714274e7, []int{4}
}

func (m *CompleteMaintenanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteMaintenanceRequest.Unmarshal(m, b)
}
func (m *CompleteMaintenanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteMaintenanceRequest.Marshal(b, m, deterministic)
}
func (m *CompleteMaintenanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteMaintenanceRequest.Merge(m, src)
}
func (m *CompleteMaintenanceRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteMaintenanceRequest.Size(m)
}
func (m *CompleteMaintenanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteMaintenanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteMaintenanceRequest proto.InternalMessageInfo

func (m *CompleteMaintenanceRequest) GetHostnames() []string {
	if m != nil {
		return m.Hostnames
	}
	return nil
}

//*
//  Response message for HostService.CompleteMaintenance method.
type CompleteMaintenanceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteMaintenanceResponse) Reset()         { *m = CompleteMaintenanceResponse{} }
func (m *CompleteMaintenanceResponse) String() string { return proto.CompactTextString(m) }
func (*CompleteMaintenanceResponse) ProtoMessage()    {}
func (*CompleteMaintenanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3b883d5714274e7, []int{5}
}

func (m *CompleteMaintenanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteMaintenanceResponse.Unmarshal(m, b)
}
func (m *CompleteMaintenanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteMaintenanceResponse.Marshal(b, m, deterministic)
}
func (m *CompleteMaintenanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteMaintenanceResponse.Merge(m, src)
}
func (m *CompleteMaintenanceResponse) XXX_Size() int {
	return xxx_messageInfo_CompleteMaintenanceResponse.Size(m)
}
func (m *CompleteMaintenanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteMaintenanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteMaintenanceResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*QueryHostsRequest)(nil), "peloton.api.v0.host.svc.QueryHostsRequest")
	proto.RegisterType((*QueryHostsResponse)(nil), "peloton.api.v0.host.svc.QueryHostsResponse")
	proto.RegisterType((*StartMaintenanceRequest)(nil), "peloton.api.v0.host.svc.StartMaintenanceRequest")
	proto.RegisterType((*StartMaintenanceResponse)(nil), "peloton.api.v0.host.svc.StartMaintenanceResponse")
	proto.RegisterType((*CompleteMaintenanceRequest)(nil), "peloton.api.v0.host.svc.CompleteMaintenanceRequest")
	proto.RegisterType((*CompleteMaintenanceResponse)(nil), "peloton.api.v0.host.svc.CompleteMaintenanceResponse")
}

func init() {
	proto.RegisterFile("peloton/api/v0/host/svc/host_svc.proto", fileDescriptor_b3b883d5714274e7)
}

var fileDescriptor_b3b883d5714274e7 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x4b, 0x3b, 0x31,
	0x10, 0xc5, 0xe9, 0xff, 0x8f, 0x42, 0xa7, 0x20, 0x1a, 0x0f, 0x2d, 0xab, 0x2d, 0xb2, 0x07, 0x15,
	0x85, 0x6c, 0x6d, 0x05, 0x41, 0x04, 0x41, 0x2f, 0x7a, 0xf0, 0xe0, 0xd6, 0x93, 0x97, 0x92, 0x86,
	0x29, 0x5d, 0x68, 0x93, 0xb8, 0x93, 0x46, 0xbc, 0xf9, 0x91, 0xfd, 0x08, 0xd2, 0xec, 0x96, 0x8a,
	0xdd, 0x80, 0xbd, 0x0d, 0x9b, 0xf7, 0x7e, 0x79, 0xfb, 0x26, 0x70, 0x6c, 0x70, 0xaa, 0xad, 0x56,
	0x89, 0x30, 0x59, 0xe2, 0xba, 0xc9, 0x44, 0x93, 0x4d, 0xc8, 0x49, 0x3f, 0x0c, 0xc9, 0x49, 0x6e,
	0x72, 0x6d, 0x35, 0x6b, 0x96, 0x3a, 0x2e, 0x4c, 0xc6, 0x5d, 0x97, 0x2f, 0x8e, 0x39, 0x39, 0x19,
	0x75, 0xaa, 0x00, 0xfe, 0xd4, 0x1b, 0xe3, 0x17, 0xd8, 0x7b, 0x9e, 0x63, 0xfe, 0xf1, 0xa0, 0xc9,
	0x52, 0x8a, 0x6f, 0x73, 0x24, 0xcb, 0x6e, 0xa1, 0x51, 0xf0, 0xad, 0xb0, 0x48, 0xad, 0xda, 0xd1,
	0xff, 0xd3, 0x9d, 0x5e, 0x87, 0x57, 0xdd, 0xb1, 0xf0, 0x0d, 0x16, 0xb2, 0x14, 0x26, 0xcb, 0x91,
	0xe2, 0x14, 0xd8, 0x4f, 0x2a, 0x19, 0xad, 0x08, 0xd9, 0x0d, 0x78, 0xcd, 0x30, 0x53, 0x63, 0x5d,
	0x50, 0x1b, 0xbd, 0x76, 0x90, 0xfa, 0xa8, 0xc6, 0x3a, 0xad, 0x4f, 0xca, 0x89, 0xe2, 0x2b, 0x68,
	0x0e, 0xac, 0xc8, 0xed, 0x93, 0xc8, 0x94, 0x45, 0x25, 0x94, 0xc4, 0x65, 0xde, 0x43, 0xf0, 0x3a,
	0x25, 0x66, 0x65, 0xda, 0x7a, 0xba, 0xfa, 0x10, 0x47, 0xd0, 0x5a, 0x37, 0x16, 0x91, 0xe2, 0x6b,
	0x88, 0xee, 0xf5, 0xcc, 0x4c, 0xd1, 0xe2, 0xc6, 0xdc, 0x36, 0x1c, 0x54, 0x7a, 0x0b, 0x74, 0xef,
	0xeb, 0x1f, 0x34, 0x7c, 0x3b, 0x98, 0xbb, 0x4c, 0x22, 0x43, 0x80, 0x55, 0x27, 0xec, 0x8c, 0x07,
	0x36, 0xc6, 0xd7, 0xd6, 0x11, 0x9d, 0xff, 0x49, 0x5b, 0x96, 0xfc, 0x0e, 0xbb, 0xbf, 0xff, 0x96,
	0x75, 0x83, 0x80, 0x40, 0xa3, 0xd1, 0xc5, 0x06, 0x8e, 0xf2, 0xe2, 0xcf, 0x1a, 0xec, 0x57, 0xf4,
	0xc1, 0xfa, 0x41, 0x54, 0xb8, 0xf9, 0xe8, 0x72, 0x33, 0x53, 0x11, 0xe1, 0xee, 0x04, 0x3a, 0x52,
	0xcf, 0x82, 0x56, 0x33, 0x7a, 0xdd, 0x22, 0x27, 0xcd, 0x68, 0xb4, 0xed, 0x1f, 0x7f, 0xff, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0x4c, 0xfb, 0x69, 0x2c, 0x5f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HostServiceClient is the client API for HostService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HostServiceClient interface {
	// Get hosts which are in one of the specified states
	QueryHosts(ctx context.Context, in *QueryHostsRequest, opts ...grpc.CallOption) (*QueryHostsResponse, error)
	// Start maintenance on the specified hosts
	StartMaintenance(ctx context.Context, in *StartMaintenanceRequest, opts ...grpc.CallOption) (*StartMaintenanceResponse, error)
	// Complete maintenance on the specified hosts
	CompleteMaintenance(ctx context.Context, in *CompleteMaintenanceRequest, opts ...grpc.CallOption) (*CompleteMaintenanceResponse, error)
}

type hostServiceClient struct {
	cc *grpc.ClientConn
}

func NewHostServiceClient(cc *grpc.ClientConn) HostServiceClient {
	return &hostServiceClient{cc}
}

func (c *hostServiceClient) QueryHosts(ctx context.Context, in *QueryHostsRequest, opts ...grpc.CallOption) (*QueryHostsResponse, error) {
	out := new(QueryHostsResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.v0.host.svc.HostService/QueryHosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hostServiceClient) StartMaintenance(ctx context.Context, in *StartMaintenanceRequest, opts ...grpc.CallOption) (*StartMaintenanceResponse, error) {
	out := new(StartMaintenanceResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.v0.host.svc.HostService/StartMaintenance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hostServiceClient) CompleteMaintenance(ctx context.Context, in *CompleteMaintenanceRequest, opts ...grpc.CallOption) (*CompleteMaintenanceResponse, error) {
	out := new(CompleteMaintenanceResponse)
	err := c.cc.Invoke(ctx, "/peloton.api.v0.host.svc.HostService/CompleteMaintenance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HostServiceServer is the server API for HostService service.
type HostServiceServer interface {
	// Get hosts which are in one of the specified states
	QueryHosts(context.Context, *QueryHostsRequest) (*QueryHostsResponse, error)
	// Start maintenance on the specified hosts
	StartMaintenance(context.Context, *StartMaintenanceRequest) (*StartMaintenanceResponse, error)
	// Complete maintenance on the specified hosts
	CompleteMaintenance(context.Context, *CompleteMaintenanceRequest) (*CompleteMaintenanceResponse, error)
}

func RegisterHostServiceServer(s *grpc.Server, srv HostServiceServer) {
	s.RegisterService(&_HostService_serviceDesc, srv)
}

func _HostService_QueryHosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryHostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HostServiceServer).QueryHosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.v0.host.svc.HostService/QueryHosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HostServiceServer).QueryHosts(ctx, req.(*QueryHostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HostService_StartMaintenance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartMaintenanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HostServiceServer).StartMaintenance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.v0.host.svc.HostService/StartMaintenance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HostServiceServer).StartMaintenance(ctx, req.(*StartMaintenanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HostService_CompleteMaintenance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteMaintenanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HostServiceServer).CompleteMaintenance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peloton.api.v0.host.svc.HostService/CompleteMaintenance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HostServiceServer).CompleteMaintenance(ctx, req.(*CompleteMaintenanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HostService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "peloton.api.v0.host.svc.HostService",
	HandlerType: (*HostServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryHosts",
			Handler:    _HostService_QueryHosts_Handler,
		},
		{
			MethodName: "StartMaintenance",
			Handler:    _HostService_StartMaintenance_Handler,
		},
		{
			MethodName: "CompleteMaintenance",
			Handler:    _HostService_CompleteMaintenance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "peloton/api/v0/host/svc/host_svc.proto",
}
