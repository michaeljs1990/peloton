// Code generated by protoc-gen-yarpc-go
// source: peloton/api/v0/volume/svc/volume_svc.proto
// DO NOT EDIT!

package svc

import (
	"context"
	"io/ioutil"
	"reflect"

	"github.com/gogo/protobuf/proto"
	"go.uber.org/fx"
	"go.uber.org/yarpc"
	"go.uber.org/yarpc/api/transport"
	"go.uber.org/yarpc/encoding/protobuf"
	"go.uber.org/yarpc/encoding/protobuf/reflection"
)

var _ = ioutil.NopCloser

// VolumeServiceYARPCClient is the YARPC client-side interface for the VolumeService service.
type VolumeServiceYARPCClient interface {
	ListVolumes(context.Context, *ListVolumesRequest, ...yarpc.CallOption) (*ListVolumesResponse, error)
	GetVolume(context.Context, *GetVolumeRequest, ...yarpc.CallOption) (*GetVolumeResponse, error)
	DeleteVolume(context.Context, *DeleteVolumeRequest, ...yarpc.CallOption) (*DeleteVolumeResponse, error)
}

// NewVolumeServiceYARPCClient builds a new YARPC client for the VolumeService service.
func NewVolumeServiceYARPCClient(clientConfig transport.ClientConfig, options ...protobuf.ClientOption) VolumeServiceYARPCClient {
	return &_VolumeServiceYARPCCaller{protobuf.NewStreamClient(
		protobuf.ClientParams{
			ServiceName:  "peloton.api.v0.volume.svc.VolumeService",
			ClientConfig: clientConfig,
			Options:      options,
		},
	)}
}

// VolumeServiceYARPCServer is the YARPC server-side interface for the VolumeService service.
type VolumeServiceYARPCServer interface {
	ListVolumes(context.Context, *ListVolumesRequest) (*ListVolumesResponse, error)
	GetVolume(context.Context, *GetVolumeRequest) (*GetVolumeResponse, error)
	DeleteVolume(context.Context, *DeleteVolumeRequest) (*DeleteVolumeResponse, error)
}

// BuildVolumeServiceYARPCProcedures prepares an implementation of the VolumeService service for YARPC registration.
func BuildVolumeServiceYARPCProcedures(server VolumeServiceYARPCServer) []transport.Procedure {
	handler := &_VolumeServiceYARPCHandler{server}
	return protobuf.BuildProcedures(
		protobuf.BuildProceduresParams{
			ServiceName: "peloton.api.v0.volume.svc.VolumeService",
			UnaryHandlerParams: []protobuf.BuildProceduresUnaryHandlerParams{
				{
					MethodName: "ListVolumes",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:     handler.ListVolumes,
							NewRequest: newVolumeServiceServiceListVolumesYARPCRequest,
						},
					),
				},
				{
					MethodName: "GetVolume",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:     handler.GetVolume,
							NewRequest: newVolumeServiceServiceGetVolumeYARPCRequest,
						},
					),
				},
				{
					MethodName: "DeleteVolume",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:     handler.DeleteVolume,
							NewRequest: newVolumeServiceServiceDeleteVolumeYARPCRequest,
						},
					),
				},
			},
			OnewayHandlerParams: []protobuf.BuildProceduresOnewayHandlerParams{},
			StreamHandlerParams: []protobuf.BuildProceduresStreamHandlerParams{},
		},
	)
}

// FxVolumeServiceYARPCClientParams defines the input
// for NewFxVolumeServiceYARPCClient. It provides the
// paramaters to get a VolumeServiceYARPCClient in an
// Fx application.
type FxVolumeServiceYARPCClientParams struct {
	fx.In

	Provider yarpc.ClientConfig
}

// FxVolumeServiceYARPCClientResult defines the output
// of NewFxVolumeServiceYARPCClient. It provides a
// VolumeServiceYARPCClient to an Fx application.
type FxVolumeServiceYARPCClientResult struct {
	fx.Out

	Client VolumeServiceYARPCClient

	// We are using an fx.Out struct here instead of just returning a client
	// so that we can add more values or add named versions of the client in
	// the future without breaking any existing code.
}

// NewFxVolumeServiceYARPCClient provides a VolumeServiceYARPCClient
// to an Fx application using the given name for routing.
//
//  fx.Provide(
//    svc.NewFxVolumeServiceYARPCClient("service-name"),
//    ...
//  )
func NewFxVolumeServiceYARPCClient(name string, options ...protobuf.ClientOption) interface{} {
	return func(params FxVolumeServiceYARPCClientParams) FxVolumeServiceYARPCClientResult {
		return FxVolumeServiceYARPCClientResult{
			Client: NewVolumeServiceYARPCClient(params.Provider.ClientConfig(name), options...),
		}
	}
}

// FxVolumeServiceYARPCProceduresParams defines the input
// for NewFxVolumeServiceYARPCProcedures. It provides the
// paramaters to get VolumeServiceYARPCServer procedures in an
// Fx application.
type FxVolumeServiceYARPCProceduresParams struct {
	fx.In

	Server VolumeServiceYARPCServer
}

// FxVolumeServiceYARPCProceduresResult defines the output
// of NewFxVolumeServiceYARPCProcedures. It provides
// VolumeServiceYARPCServer procedures to an Fx application.
//
// The procedures are provided to the "yarpcfx" value group.
// Dig 1.2 or newer must be used for this feature to work.
type FxVolumeServiceYARPCProceduresResult struct {
	fx.Out

	Procedures     []transport.Procedure `group:"yarpcfx"`
	ReflectionMeta reflection.ServerMeta `group:"yarpcfx"`
}

// NewFxVolumeServiceYARPCProcedures provides VolumeServiceYARPCServer procedures to an Fx application.
// It expects a VolumeServiceYARPCServer to be present in the container.
//
//  fx.Provide(
//    svc.NewFxVolumeServiceYARPCProcedures(),
//    ...
//  )
func NewFxVolumeServiceYARPCProcedures() interface{} {
	return func(params FxVolumeServiceYARPCProceduresParams) FxVolumeServiceYARPCProceduresResult {
		return FxVolumeServiceYARPCProceduresResult{
			Procedures: BuildVolumeServiceYARPCProcedures(params.Server),
			ReflectionMeta: reflection.ServerMeta{
				ServiceName:     "peloton.api.v0.volume.svc.VolumeService",
				FileDescriptors: yarpcFileDescriptorClosure31b161a39b040a30,
			},
		}
	}
}

type _VolumeServiceYARPCCaller struct {
	streamClient protobuf.StreamClient
}

func (c *_VolumeServiceYARPCCaller) ListVolumes(ctx context.Context, request *ListVolumesRequest, options ...yarpc.CallOption) (*ListVolumesResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "ListVolumes", request, newVolumeServiceServiceListVolumesYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*ListVolumesResponse)
	if !ok {
		return nil, protobuf.CastError(emptyVolumeServiceServiceListVolumesYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_VolumeServiceYARPCCaller) GetVolume(ctx context.Context, request *GetVolumeRequest, options ...yarpc.CallOption) (*GetVolumeResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "GetVolume", request, newVolumeServiceServiceGetVolumeYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*GetVolumeResponse)
	if !ok {
		return nil, protobuf.CastError(emptyVolumeServiceServiceGetVolumeYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_VolumeServiceYARPCCaller) DeleteVolume(ctx context.Context, request *DeleteVolumeRequest, options ...yarpc.CallOption) (*DeleteVolumeResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "DeleteVolume", request, newVolumeServiceServiceDeleteVolumeYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*DeleteVolumeResponse)
	if !ok {
		return nil, protobuf.CastError(emptyVolumeServiceServiceDeleteVolumeYARPCResponse, responseMessage)
	}
	return response, err
}

type _VolumeServiceYARPCHandler struct {
	server VolumeServiceYARPCServer
}

func (h *_VolumeServiceYARPCHandler) ListVolumes(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *ListVolumesRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*ListVolumesRequest)
		if !ok {
			return nil, protobuf.CastError(emptyVolumeServiceServiceListVolumesYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.ListVolumes(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_VolumeServiceYARPCHandler) GetVolume(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *GetVolumeRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*GetVolumeRequest)
		if !ok {
			return nil, protobuf.CastError(emptyVolumeServiceServiceGetVolumeYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.GetVolume(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_VolumeServiceYARPCHandler) DeleteVolume(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *DeleteVolumeRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*DeleteVolumeRequest)
		if !ok {
			return nil, protobuf.CastError(emptyVolumeServiceServiceDeleteVolumeYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.DeleteVolume(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func newVolumeServiceServiceListVolumesYARPCRequest() proto.Message {
	return &ListVolumesRequest{}
}

func newVolumeServiceServiceListVolumesYARPCResponse() proto.Message {
	return &ListVolumesResponse{}
}

func newVolumeServiceServiceGetVolumeYARPCRequest() proto.Message {
	return &GetVolumeRequest{}
}

func newVolumeServiceServiceGetVolumeYARPCResponse() proto.Message {
	return &GetVolumeResponse{}
}

func newVolumeServiceServiceDeleteVolumeYARPCRequest() proto.Message {
	return &DeleteVolumeRequest{}
}

func newVolumeServiceServiceDeleteVolumeYARPCResponse() proto.Message {
	return &DeleteVolumeResponse{}
}

var (
	emptyVolumeServiceServiceListVolumesYARPCRequest   = &ListVolumesRequest{}
	emptyVolumeServiceServiceListVolumesYARPCResponse  = &ListVolumesResponse{}
	emptyVolumeServiceServiceGetVolumeYARPCRequest     = &GetVolumeRequest{}
	emptyVolumeServiceServiceGetVolumeYARPCResponse    = &GetVolumeResponse{}
	emptyVolumeServiceServiceDeleteVolumeYARPCRequest  = &DeleteVolumeRequest{}
	emptyVolumeServiceServiceDeleteVolumeYARPCResponse = &DeleteVolumeResponse{}
)

var yarpcFileDescriptorClosure31b161a39b040a30 = [][]byte{
	// peloton/api/v0/volume/svc/volume_svc.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x5d, 0x6b, 0xe2, 0x40,
		0x14, 0x25, 0x11, 0x5d, 0xbc, 0xba, 0xe0, 0x8e, 0xcb, 0xa2, 0x61, 0x17, 0x24, 0x4f, 0xb2, 0xee,
		0x4e, 0x44, 0x61, 0x59, 0xda, 0xa7, 0xb6, 0x29, 0x92, 0xd2, 0x87, 0x92, 0xd2, 0x52, 0xfa, 0x52,
		0x34, 0x5e, 0x4b, 0xda, 0x34, 0x93, 0x66, 0x26, 0x03, 0xfe, 0xd0, 0xf6, 0xf7, 0x94, 0x26, 0x93,
		0x12, 0xc5, 0x88, 0xd2, 0xb7, 0xf9, 0x38, 0xf7, 0x9c, 0x73, 0xcf, 0x65, 0x06, 0x7e, 0x47, 0x18,
		0x30, 0xc1, 0x42, 0x6b, 0x1a, 0xf9, 0x96, 0x1c, 0x5a, 0x92, 0x05, 0xc9, 0x13, 0x5a, 0x5c, 0x7a,
		0x6a, 0x79, 0xc7, 0xa5, 0x47, 0xa3, 0x98, 0x09, 0x46, 0xba, 0x0a, 0x4b, 0xa7, 0x91, 0x4f, 0xe5,
		0x90, 0x66, 0x00, 0xca, 0xa5, 0x67, 0xfc, 0x5c, 0xa3, 0xc9, 0x91, 0x69, 0xa1, 0x61, 0x6e, 0x16,
		0x51, 0xf5, 0x29, 0xc6, 0x74, 0x80, 0x9c, 0xfb, 0x5c, 0x5c, 0xa7, 0x67, 0xdc, 0xc5, 0xe7, 0x04,
		0xb9, 0x20, 0x63, 0xa8, 0x3e, 0xb0, 0x99, 0x33, 0xef, 0x68, 0x3d, 0xad, 0xdf, 0x18, 0xfd, 0xa2,
		0x6b, 0x16, 0xf2, 0xed, 0x19, 0x9b, 0x39, 0xb6, 0x9b, 0x61, 0xcd, 0x17, 0x0d, 0xda, 0x2b, 0x5c,
		0x3c, 0x62, 0x21, 0x47, 0x72, 0x05, 0x5f, 0x32, 0x49, 0xde, 0xd1, 0x7a, 0x95, 0x7e, 0x63, 0x74,
		0x48, 0x4b, 0x3b, 0xa2, 0x1b, 0x08, 0xa8, 0xda, 0x9f, 0x86, 0x22, 0x5e, 0xba, 0x39, 0x97, 0x71,
		0x0f, 0xcd, 0xe2, 0x05, 0x69, 0x41, 0xe5, 0x11, 0x97, 0xa9, 0xe3, 0xba, 0xfb, 0xbe, 0x24, 0x47,
		0x50, 0x95, 0xd3, 0x20, 0xc1, 0x8e, 0x9e, 0x76, 0x31, 0x28, 0x91, 0xbd, 0xc0, 0x98, 0xfb, 0x5c,
		0x60, 0xa8, 0x84, 0x9d, 0x70, 0xc1, 0xdc, 0xac, 0xf2, 0x40, 0xff, 0xaf, 0x99, 0x36, 0xb4, 0x26,
		0xa8, 0xee, 0xf2, 0x80, 0x86, 0xa0, 0xfb, 0x79, 0x3a, 0xbd, 0xb2, 0x74, 0x14, 0x9d, 0xed, 0xea,
		0xfe, 0xdc, 0xbc, 0x81, 0x6f, 0x05, 0x16, 0x15, 0xcd, 0x09, 0xd4, 0x62, 0xe4, 0x49, 0x20, 0x14,
		0xd5, 0x5e, 0x16, 0x55, 0xa9, 0x39, 0x81, 0xb6, 0x8d, 0x01, 0x0a, 0xfc, 0xac, 0xc5, 0x1f, 0xf0,
		0x7d, 0x95, 0x28, 0x73, 0x39, 0x7a, 0xd5, 0xe1, 0x6b, 0x76, 0x74, 0x89, 0xb1, 0xf4, 0x3d, 0x24,
		0x01, 0x34, 0x0a, 0x83, 0x22, 0x7f, 0x77, 0x1d, 0x68, 0xea, 0xcc, 0xa0, 0xfb, 0xcd, 0x9f, 0x2c,
		0xa0, 0xfe, 0x11, 0x1d, 0x19, 0x6c, 0x29, 0x5e, 0x1f, 0x93, 0xf1, 0x67, 0x37, 0xb0, 0xd2, 0x61,
		0xd0, 0x2c, 0xf6, 0x4f, 0xb6, 0xf9, 0xdc, 0x90, 0xb8, 0x61, 0xed, 0x8c, 0xcf, 0x04, 0x8f, 0xff,
		0x41, 0xf9, 0xdb, 0xbe, 0xed, 0x96, 0x7e, 0x11, 0xb3, 0x5a, 0xfa, 0x76, 0xc7, 0x6f, 0x01, 0x00,
		0x00, 0xff, 0xff, 0xea, 0x81, 0xb4, 0x83, 0x46, 0x04, 0x00, 0x00,
	},
	// peloton/api/v0/peloton.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
		0x10, 0x55, 0xec, 0x38, 0xe0, 0x29, 0xaa, 0xd0, 0x0a, 0x55, 0x56, 0x28, 0x10, 0x19, 0x84, 0x7a,
		0x40, 0xeb, 0x08, 0x6e, 0xdc, 0x28, 0x3d, 0x00, 0xaa, 0x54, 0x64, 0x42, 0x0f, 0xdc, 0xc6, 0xf1,
		0xc4, 0x59, 0xc5, 0xce, 0x2e, 0xf6, 0xda, 0x4a, 0x4e, 0x7c, 0x0e, 0xbf, 0x89, 0xbc, 0xb6, 0x49,
		0x22, 0x25, 0xee, 0x6d, 0xde, 0xbc, 0xe7, 0x37, 0x33, 0x9e, 0x59, 0xb8, 0x54, 0x94, 0x4a, 0x2d,
		0xd7, 0x01, 0x2a, 0x11, 0x54, 0xd3, 0xa0, 0x85, 0x5c, 0xe5, 0x52, 0x4b, 0x76, 0xd1, 0x41, 0x54,
		0x82, 0x57, 0x53, 0xde, 0xc2, 0xf1, 0xab, 0x44, 0xca, 0x24, 0xa5, 0xc0, 0xa8, 0xa2, 0x72, 0x11,
		0x68, 0x91, 0x51, 0xa1, 0x31, 0x53, 0xcd, 0x87, 0xfe, 0x0b, 0x70, 0xbe, 0xc9, 0xe8, 0xeb, 0x0d,
		0x7b, 0x06, 0x4e, 0x85, 0x69, 0x49, 0xde, 0x60, 0x32, 0xb8, 0x72, 0xc3, 0x06, 0xf8, 0x2f, 0x61,
		0x34, 0xc3, 0x62, 0x75, 0x92, 0x9f, 0xc0, 0xe3, 0x7b, 0x99, 0x96, 0x19, 0x9d, 0x54, 0xbc, 0x85,
		0xf3, 0x90, 0x0a, 0x59, 0xe6, 0x73, 0xfa, 0x2e, 0x65, 0xda, 0xe7, 0xf4, 0x83, 0xe6, 0x39, 0xe9,
		0x3e, 0xc5, 0x4f, 0x15, 0xa3, 0x3e, 0x5d, 0xeb, 0x35, 0x9c, 0x7d, 0x91, 0x85, 0xbe, 0x5b, 0x2c,
		0x28, 0xef, 0xb1, 0x81, 0x3b, 0x85, 0xbf, 0x4b, 0xba, 0x41, 0x8d, 0x8c, 0xc1, 0x30, 0x46, 0x8d,
		0xad, 0xc4, 0xc4, 0xfe, 0x1f, 0x70, 0x3f, 0x2f, 0x71, 0x9d, 0xd0, 0xad, 0x4c, 0x98, 0x07, 0x8f,
		0x2a, 0xca, 0x0b, 0x21, 0xd7, 0x46, 0x33, 0x0c, 0x3b, 0xc8, 0x2e, 0xc1, 0x9d, 0xe7, 0x84, 0x9a,
		0xe2, 0x4f, 0xda, 0xb3, 0x0c, 0xb7, 0x4b, 0xd4, 0x6c, 0x69, 0xba, 0xad, 0x59, 0xbb, 0x61, 0xff,
		0x27, 0xf6, 0xd8, 0xeb, 0xad, 0x37, 0x34, 0xb5, 0x77, 0x09, 0x3f, 0x00, 0xe7, 0x16, 0x23, 0x4a,
		0xd9, 0x53, 0xb0, 0x57, 0xb4, 0x6d, 0x9b, 0xab, 0xc3, 0xdd, 0x4c, 0xd6, 0xfe, 0x4c, 0x09, 0xb8,
		0x33, 0x91, 0x51, 0x58, 0x37, 0xcd, 0xde, 0x81, 0x9d, 0x89, 0xa6, 0xdb, 0xb3, 0xf7, 0x63, 0xde,
		0x5c, 0x00, 0xef, 0x2e, 0x80, 0xcf, 0xba, 0x0b, 0x08, 0x6b, 0x99, 0x51, 0xe3, 0xc6, 0xd8, 0x3d,
		0xa4, 0xc6, 0x8d, 0xff, 0x77, 0x00, 0xa3, 0x66, 0x4d, 0x6c, 0x0a, 0x96, 0x88, 0xdb, 0x2a, 0x13,
		0x7e, 0xfc, 0xfe, 0x78, 0xb7, 0xd2, 0xd0, 0x12, 0x71, 0xfd, 0xaf, 0x15, 0xea, 0x65, 0xdb, 0xba,
		0x89, 0xd9, 0xc7, 0x6e, 0x1e, 0xdb, 0x18, 0xbd, 0xe9, 0x37, 0xe2, 0xf7, 0xb5, 0xb6, 0x9d, 0x7a,
		0xfc, 0x1c, 0x1c, 0x83, 0x0f, 0x96, 0xf8, 0xa4, 0x59, 0xe2, 0xf5, 0x15, 0x9c, 0x1f, 0x5a, 0xfd,
		0xba, 0x38, 0xfe, 0x82, 0xa2, 0x91, 0x19, 0xf6, 0xc3, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8e,
		0x26, 0x1d, 0xc0, 0x62, 0x03, 0x00, 0x00,
	},
	// google/protobuf/timestamp.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4f, 0xcf, 0xcf, 0x4f,
		0xcf, 0x49, 0xd5, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x2f, 0xc9, 0xcc, 0x4d,
		0x2d, 0x2e, 0x49, 0xcc, 0x2d, 0xd0, 0x03, 0x0b, 0x09, 0xf1, 0x43, 0x14, 0xe8, 0xc1, 0x14, 0x28,
		0x59, 0x73, 0x71, 0x86, 0xc0, 0xd4, 0x08, 0x49, 0x70, 0xb1, 0x17, 0xa7, 0x26, 0xe7, 0xe7, 0xa5,
		0x14, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0xc1, 0xb8, 0x42, 0x22, 0x5c, 0xac, 0x79, 0x89,
		0x79, 0xf9, 0xc5, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x10, 0x8e, 0x53, 0x1d, 0x97, 0x70,
		0x72, 0x7e, 0xae, 0x1e, 0x9a, 0x99, 0x4e, 0x7c, 0x70, 0x13, 0x03, 0x40, 0x42, 0x01, 0x8c, 0x51,
		0xda, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0xe9, 0xf9, 0x39, 0x89,
		0x79, 0xe9, 0x08, 0x27, 0x16, 0x94, 0x54, 0x16, 0xa4, 0x16, 0x23, 0x5c, 0xfa, 0x83, 0x91, 0x71,
		0x11, 0x13, 0xb3, 0x7b, 0x80, 0xd3, 0x2a, 0x26, 0x39, 0x77, 0x88, 0xc9, 0x01, 0x50, 0xb5, 0x7a,
		0xe1, 0xa9, 0x39, 0x39, 0xde, 0x79, 0xf9, 0xe5, 0x79, 0x21, 0x20, 0x3d, 0x49, 0x6c, 0x60, 0x43,
		0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x77, 0x4a, 0x07, 0xf7, 0x00, 0x00, 0x00,
	},
	// peloton/api/v0/volume/volume.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4d, 0x6b, 0xe2, 0x40,
		0x18, 0xc7, 0x37, 0x71, 0x7d, 0x7b, 0x82, 0xbb, 0x32, 0xac, 0xcb, 0x20, 0xbb, 0x4b, 0x90, 0x3d,
		0x84, 0x3d, 0x44, 0xd1, 0xcb, 0x1e, 0xab, 0x4d, 0x0e, 0xd3, 0xda, 0x54, 0x52, 0xdb, 0x82, 0xb7,
		0xd1, 0x4c, 0xeb, 0x14, 0x9d, 0x09, 0xc9, 0xe8, 0xa1, 0x5f, 0xab, 0x5f, 0xb0, 0x64, 0x12, 0xab,
		0x15, 0x0b, 0x3d, 0x85, 0xff, 0xcb, 0x2f, 0xfc, 0x13, 0x1e, 0xe8, 0xc4, 0x6c, 0x25, 0x95, 0x14,
		0x5d, 0x1a, 0xf3, 0xee, 0xb6, 0xd7, 0xdd, 0xca, 0xd5, 0x66, 0xcd, 0x8a, 0x87, 0x1b, 0x27, 0x52,
		0x49, 0xd4, 0x2a, 0x3a, 0x2e, 0x8d, 0xb9, 0xbb, 0xed, 0xb9, 0x79, 0xd8, 0xfe, 0x75, 0x84, 0xee,
		0x5a, 0x1a, 0xea, 0xbc, 0x94, 0xe0, 0xc7, 0x84, 0x25, 0x29, 0x4f, 0x15, 0x13, 0xea, 0x4e, 0x23,
		0x44, 0x3c, 0x48, 0xd4, 0x03, 0x93, 0x47, 0xd8, 0xb0, 0x0d, 0xc7, 0xea, 0xdb, 0xee, 0xd1, 0xab,
		0x77, 0xb2, 0xe8, 0x7b, 0xa1, 0xc9, 0x23, 0x34, 0x80, 0xf2, 0x93, 0x9c, 0x93, 0x08, 0x9b, 0x1a,
		0xfa, 0xfd, 0x11, 0x74, 0x21, 0xe7, 0xc4, 0x0b, 0xf3, 0x2e, 0xfa, 0x03, 0xc0, 0x45, 0xaa, 0xa8,
		0x58, 0x30, 0x12, 0xe1, 0x92, 0x6d, 0x38, 0x8d, 0xf0, 0xc0, 0x41, 0x6d, 0xa8, 0x2d, 0x65, 0xaa,
		0x04, 0x5d, 0x33, 0xfc, 0xd5, 0x36, 0x9c, 0x7a, 0xf8, 0xa6, 0xd1, 0x7f, 0x28, 0xa7, 0x8a, 0x2a,
		0x86, 0xcb, 0xb6, 0xe1, 0x7c, 0xeb, 0x77, 0xdc, 0x93, 0x3f, 0xa0, 0x18, 0x79, 0x93, 0x35, 0xc3,
		0x1c, 0x40, 0x67, 0x50, 0x7f, 0x94, 0x74, 0xa5, 0x3d, 0x5c, 0xf9, 0x34, 0xbd, 0x87, 0xd0, 0x4f,
		0xa8, 0xa4, 0xfc, 0x99, 0x5d, 0x8d, 0x70, 0x55, 0x6f, 0x2e, 0x14, 0xfa, 0x0b, 0x8d, 0x85, 0x14,
		0x8a, 0x72, 0xc1, 0x92, 0x09, 0x55, 0x4b, 0x5c, 0xd3, 0xa3, 0xdf, 0x9b, 0xd9, 0x57, 0x2f, 0x12,
		0x46, 0x15, 0x9b, 0xf2, 0x35, 0xc3, 0x75, 0x5d, 0x39, 0x70, 0xb2, 0x7c, 0x13, 0x47, 0xbb, 0x1c,
		0xf2, 0x7c, 0xef, 0xfc, 0xf3, 0xc1, 0x3a, 0xd8, 0x85, 0x2c, 0xa8, 0xde, 0x06, 0x97, 0xc1, 0xf5,
		0x7d, 0xd0, 0xfc, 0x82, 0xbe, 0x83, 0x45, 0x02, 0x32, 0x25, 0xc3, 0x31, 0x99, 0xf9, 0x5e, 0xd3,
		0xc8, 0xd2, 0xf3, 0xd0, 0x1f, 0x4e, 0x7d, 0xaf, 0x69, 0x66, 0xc2, 0xf3, 0xc7, 0x7e, 0x26, 0x4a,
		0x23, 0x17, 0x4e, 0xdf, 0xcc, 0xac, 0x75, 0xf2, 0xdc, 0xe6, 0x15, 0x7d, 0x33, 0x83, 0xd7, 0x00,
		0x00, 0x00, 0xff, 0xff, 0x64, 0x95, 0x2b, 0x67, 0x8e, 0x02, 0x00, 0x00,
	},
}

func init() {
	yarpc.RegisterClientBuilder(
		func(clientConfig transport.ClientConfig, structField reflect.StructField) VolumeServiceYARPCClient {
			return NewVolumeServiceYARPCClient(clientConfig, protobuf.ClientBuilderOptions(clientConfig, structField)...)
		},
	)
}
